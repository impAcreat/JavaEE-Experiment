/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 17240.0, "series": [{"data": [[0.0, 5.0], [0.1, 5.0], [0.2, 5.0], [0.3, 5.0], [0.4, 5.0], [0.5, 5.0], [0.6, 6.0], [0.7, 6.0], [0.8, 6.0], [0.9, 6.0], [1.0, 6.0], [1.1, 6.0], [1.2, 6.0], [1.3, 6.0], [1.4, 6.0], [1.5, 6.0], [1.6, 6.0], [1.7, 6.0], [1.8, 6.0], [1.9, 6.0], [2.0, 6.0], [2.1, 6.0], [2.2, 6.0], [2.3, 6.0], [2.4, 6.0], [2.5, 6.0], [2.6, 6.0], [2.7, 6.0], [2.8, 6.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 6.0], [3.3, 6.0], [3.4, 6.0], [3.5, 6.0], [3.6, 6.0], [3.7, 6.0], [3.8, 6.0], [3.9, 7.0], [4.0, 7.0], [4.1, 7.0], [4.2, 7.0], [4.3, 7.0], [4.4, 7.0], [4.5, 7.0], [4.6, 7.0], [4.7, 7.0], [4.8, 7.0], [4.9, 7.0], [5.0, 7.0], [5.1, 7.0], [5.2, 7.0], [5.3, 7.0], [5.4, 7.0], [5.5, 7.0], [5.6, 7.0], [5.7, 7.0], [5.8, 7.0], [5.9, 7.0], [6.0, 7.0], [6.1, 7.0], [6.2, 7.0], [6.3, 7.0], [6.4, 7.0], [6.5, 7.0], [6.6, 7.0], [6.7, 7.0], [6.8, 7.0], [6.9, 7.0], [7.0, 7.0], [7.1, 7.0], [7.2, 7.0], [7.3, 7.0], [7.4, 7.0], [7.5, 7.0], [7.6, 7.0], [7.7, 7.0], [7.8, 7.0], [7.9, 7.0], [8.0, 7.0], [8.1, 7.0], [8.2, 7.0], [8.3, 7.0], [8.4, 8.0], [8.5, 8.0], [8.6, 8.0], [8.7, 8.0], [8.8, 8.0], [8.9, 8.0], [9.0, 8.0], [9.1, 8.0], [9.2, 8.0], [9.3, 8.0], [9.4, 8.0], [9.5, 8.0], [9.6, 8.0], [9.7, 8.0], [9.8, 8.0], [9.9, 8.0], [10.0, 8.0], [10.1, 8.0], [10.2, 8.0], [10.3, 8.0], [10.4, 8.0], [10.5, 8.0], [10.6, 8.0], [10.7, 8.0], [10.8, 8.0], [10.9, 8.0], [11.0, 8.0], [11.1, 8.0], [11.2, 8.0], [11.3, 8.0], [11.4, 8.0], [11.5, 8.0], [11.6, 8.0], [11.7, 8.0], [11.8, 9.0], [11.9, 9.0], [12.0, 9.0], [12.1, 9.0], [12.2, 9.0], [12.3, 9.0], [12.4, 9.0], [12.5, 9.0], [12.6, 9.0], [12.7, 9.0], [12.8, 9.0], [12.9, 9.0], [13.0, 9.0], [13.1, 9.0], [13.2, 9.0], [13.3, 9.0], [13.4, 9.0], [13.5, 9.0], [13.6, 9.0], [13.7, 9.0], [13.8, 9.0], [13.9, 9.0], [14.0, 10.0], [14.1, 10.0], [14.2, 10.0], [14.3, 10.0], [14.4, 10.0], [14.5, 10.0], [14.6, 10.0], [14.7, 10.0], [14.8, 10.0], [14.9, 10.0], [15.0, 10.0], [15.1, 10.0], [15.2, 10.0], [15.3, 10.0], [15.4, 10.0], [15.5, 10.0], [15.6, 10.0], [15.7, 11.0], [15.8, 11.0], [15.9, 11.0], [16.0, 11.0], [16.1, 11.0], [16.2, 11.0], [16.3, 11.0], [16.4, 11.0], [16.5, 11.0], [16.6, 11.0], [16.7, 12.0], [16.8, 12.0], [16.9, 12.0], [17.0, 12.0], [17.1, 12.0], [17.2, 12.0], [17.3, 12.0], [17.4, 13.0], [17.5, 13.0], [17.6, 13.0], [17.7, 13.0], [17.8, 13.0], [17.9, 13.0], [18.0, 14.0], [18.1, 14.0], [18.2, 14.0], [18.3, 14.0], [18.4, 15.0], [18.5, 15.0], [18.6, 15.0], [18.7, 16.0], [18.8, 16.0], [18.9, 16.0], [19.0, 16.0], [19.1, 17.0], [19.2, 17.0], [19.3, 17.0], [19.4, 18.0], [19.5, 18.0], [19.6, 19.0], [19.7, 20.0], [19.8, 21.0], [19.9, 23.0], [20.0, 25.0], [20.1, 27.0], [20.2, 29.0], [20.3, 30.0], [20.4, 35.0], [20.5, 39.0], [20.6, 42.0], [20.7, 45.0], [20.8, 48.0], [20.9, 50.0], [21.0, 57.0], [21.1, 60.0], [21.2, 62.0], [21.3, 63.0], [21.4, 64.0], [21.5, 64.0], [21.6, 66.0], [21.7, 67.0], [21.8, 69.0], [21.9, 71.0], [22.0, 76.0], [22.1, 78.0], [22.2, 82.0], [22.3, 86.0], [22.4, 89.0], [22.5, 93.0], [22.6, 106.0], [22.7, 112.0], [22.8, 125.0], [22.9, 130.0], [23.0, 143.0], [23.1, 161.0], [23.2, 174.0], [23.3, 183.0], [23.4, 195.0], [23.5, 225.0], [23.6, 247.0], [23.7, 249.0], [23.8, 272.0], [23.9, 294.0], [24.0, 337.0], [24.1, 387.0], [24.2, 426.0], [24.3, 440.0], [24.4, 477.0], [24.5, 537.0], [24.6, 548.0], [24.7, 557.0], [24.8, 567.0], [24.9, 611.0], [25.0, 630.0], [25.1, 661.0], [25.2, 669.0], [25.3, 710.0], [25.4, 717.0], [25.5, 751.0], [25.6, 761.0], [25.7, 788.0], [25.8, 820.0], [25.9, 837.0], [26.0, 878.0], [26.1, 888.0], [26.2, 927.0], [26.3, 969.0], [26.4, 999.0], [26.5, 1015.0], [26.6, 1041.0], [26.7, 1057.0], [26.8, 1071.0], [26.9, 1094.0], [27.0, 1132.0], [27.1, 1184.0], [27.2, 1198.0], [27.3, 1210.0], [27.4, 1235.0], [27.5, 1286.0], [27.6, 1338.0], [27.7, 1376.0], [27.8, 1392.0], [27.9, 1423.0], [28.0, 1431.0], [28.1, 1444.0], [28.2, 1468.0], [28.3, 1494.0], [28.4, 1507.0], [28.5, 1546.0], [28.6, 1558.0], [28.7, 1566.0], [28.8, 1588.0], [28.9, 1603.0], [29.0, 1625.0], [29.1, 1650.0], [29.2, 1678.0], [29.3, 1733.0], [29.4, 1755.0], [29.5, 1777.0], [29.6, 1792.0], [29.7, 1807.0], [29.8, 1817.0], [29.9, 1854.0], [30.0, 1872.0], [30.1, 1885.0], [30.2, 1929.0], [30.3, 1947.0], [30.4, 1956.0], [30.5, 1985.0], [30.6, 1992.0], [30.7, 2004.0], [30.8, 2045.0], [30.9, 2091.0], [31.0, 2121.0], [31.1, 2135.0], [31.2, 2162.0], [31.3, 2208.0], [31.4, 2227.0], [31.5, 2265.0], [31.6, 2280.0], [31.7, 2313.0], [31.8, 2326.0], [31.9, 2349.0], [32.0, 2369.0], [32.1, 2383.0], [32.2, 2417.0], [32.3, 2438.0], [32.4, 2448.0], [32.5, 2457.0], [32.6, 2485.0], [32.7, 2492.0], [32.8, 2498.0], [32.9, 2510.0], [33.0, 2557.0], [33.1, 2570.0], [33.2, 2579.0], [33.3, 2588.0], [33.4, 2612.0], [33.5, 2630.0], [33.6, 2654.0], [33.7, 2666.0], [33.8, 2690.0], [33.9, 2720.0], [34.0, 2754.0], [34.1, 2768.0], [34.2, 2786.0], [34.3, 2812.0], [34.4, 2838.0], [34.5, 2849.0], [34.6, 2927.0], [34.7, 2972.0], [34.8, 2975.0], [34.9, 2985.0], [35.0, 3005.0], [35.1, 3022.0], [35.2, 3041.0], [35.3, 3091.0], [35.4, 3097.0], [35.5, 3122.0], [35.6, 3138.0], [35.7, 3145.0], [35.8, 3166.0], [35.9, 3194.0], [36.0, 3209.0], [36.1, 3227.0], [36.2, 3232.0], [36.3, 3284.0], [36.4, 3299.0], [36.5, 3309.0], [36.6, 3327.0], [36.7, 3374.0], [36.8, 3389.0], [36.9, 3402.0], [37.0, 3435.0], [37.1, 3453.0], [37.2, 3464.0], [37.3, 3472.0], [37.4, 3509.0], [37.5, 3528.0], [37.6, 3546.0], [37.7, 3582.0], [37.8, 3596.0], [37.9, 3603.0], [38.0, 3619.0], [38.1, 3665.0], [38.2, 3674.0], [38.3, 3676.0], [38.4, 3682.0], [38.5, 3703.0], [38.6, 3751.0], [38.7, 3758.0], [38.8, 3783.0], [38.9, 3793.0], [39.0, 3814.0], [39.1, 3817.0], [39.2, 3833.0], [39.3, 3867.0], [39.4, 3874.0], [39.5, 3887.0], [39.6, 3920.0], [39.7, 3923.0], [39.8, 3945.0], [39.9, 3965.0], [40.0, 4019.0], [40.1, 4036.0], [40.2, 4053.0], [40.3, 4075.0], [40.4, 4090.0], [40.5, 4105.0], [40.6, 4117.0], [40.7, 4136.0], [40.8, 4143.0], [40.9, 4157.0], [41.0, 4187.0], [41.1, 4227.0], [41.2, 4241.0], [41.3, 4245.0], [41.4, 4268.0], [41.5, 4291.0], [41.6, 4301.0], [41.7, 4324.0], [41.8, 4339.0], [41.9, 4348.0], [42.0, 4360.0], [42.1, 4400.0], [42.2, 4412.0], [42.3, 4418.0], [42.4, 4454.0], [42.5, 4470.0], [42.6, 4484.0], [42.7, 4524.0], [42.8, 4591.0], [42.9, 4606.0], [43.0, 4658.0], [43.1, 4669.0], [43.2, 4692.0], [43.3, 4697.0], [43.4, 4726.0], [43.5, 4770.0], [43.6, 4777.0], [43.7, 4798.0], [43.8, 4825.0], [43.9, 4842.0], [44.0, 4859.0], [44.1, 4866.0], [44.2, 4911.0], [44.3, 4926.0], [44.4, 4932.0], [44.5, 4947.0], [44.6, 4972.0], [44.7, 4979.0], [44.8, 4992.0], [44.9, 5019.0], [45.0, 5034.0], [45.1, 5051.0], [45.2, 5081.0], [45.3, 5131.0], [45.4, 5138.0], [45.5, 5168.0], [45.6, 5186.0], [45.7, 5211.0], [45.8, 5230.0], [45.9, 5247.0], [46.0, 5259.0], [46.1, 5287.0], [46.2, 5313.0], [46.3, 5326.0], [46.4, 5337.0], [46.5, 5347.0], [46.6, 5384.0], [46.7, 5414.0], [46.8, 5437.0], [46.9, 5462.0], [47.0, 5510.0], [47.1, 5531.0], [47.2, 5542.0], [47.3, 5558.0], [47.4, 5573.0], [47.5, 5602.0], [47.6, 5635.0], [47.7, 5646.0], [47.8, 5660.0], [47.9, 5668.0], [48.0, 5676.0], [48.1, 5691.0], [48.2, 5712.0], [48.3, 5741.0], [48.4, 5761.0], [48.5, 5767.0], [48.6, 5779.0], [48.7, 5803.0], [48.8, 5826.0], [48.9, 5856.0], [49.0, 5860.0], [49.1, 5877.0], [49.2, 5901.0], [49.3, 5919.0], [49.4, 5936.0], [49.5, 5950.0], [49.6, 5958.0], [49.7, 5974.0], [49.8, 5987.0], [49.9, 6013.0], [50.0, 6023.0], [50.1, 6028.0], [50.2, 6044.0], [50.3, 6052.0], [50.4, 6059.0], [50.5, 6075.0], [50.6, 6082.0], [50.7, 6102.0], [50.8, 6129.0], [50.9, 6140.0], [51.0, 6158.0], [51.1, 6163.0], [51.2, 6177.0], [51.3, 6207.0], [51.4, 6221.0], [51.5, 6245.0], [51.6, 6252.0], [51.7, 6273.0], [51.8, 6294.0], [51.9, 6337.0], [52.0, 6362.0], [52.1, 6374.0], [52.2, 6406.0], [52.3, 6419.0], [52.4, 6439.0], [52.5, 6459.0], [52.6, 6494.0], [52.7, 6503.0], [52.8, 6521.0], [52.9, 6530.0], [53.0, 6551.0], [53.1, 6577.0], [53.2, 6584.0], [53.3, 6596.0], [53.4, 6614.0], [53.5, 6635.0], [53.6, 6665.0], [53.7, 6676.0], [53.8, 6685.0], [53.9, 6707.0], [54.0, 6733.0], [54.1, 6739.0], [54.2, 6754.0], [54.3, 6780.0], [54.4, 6795.0], [54.5, 6805.0], [54.6, 6825.0], [54.7, 6846.0], [54.8, 6866.0], [54.9, 6884.0], [55.0, 6905.0], [55.1, 6914.0], [55.2, 6919.0], [55.3, 6924.0], [55.4, 6960.0], [55.5, 6972.0], [55.6, 6980.0], [55.7, 7042.0], [55.8, 7054.0], [55.9, 7068.0], [56.0, 7080.0], [56.1, 7106.0], [56.2, 7114.0], [56.3, 7124.0], [56.4, 7131.0], [56.5, 7154.0], [56.6, 7170.0], [56.7, 7192.0], [56.8, 7210.0], [56.9, 7221.0], [57.0, 7235.0], [57.1, 7258.0], [57.2, 7268.0], [57.3, 7306.0], [57.4, 7315.0], [57.5, 7321.0], [57.6, 7327.0], [57.7, 7342.0], [57.8, 7359.0], [57.9, 7367.0], [58.0, 7378.0], [58.1, 7396.0], [58.2, 7400.0], [58.3, 7416.0], [58.4, 7440.0], [58.5, 7469.0], [58.6, 7475.0], [58.7, 7496.0], [58.8, 7530.0], [58.9, 7551.0], [59.0, 7566.0], [59.1, 7586.0], [59.2, 7616.0], [59.3, 7629.0], [59.4, 7635.0], [59.5, 7653.0], [59.6, 7678.0], [59.7, 7695.0], [59.8, 7706.0], [59.9, 7712.0], [60.0, 7731.0], [60.1, 7769.0], [60.2, 7820.0], [60.3, 7827.0], [60.4, 7842.0], [60.5, 7849.0], [60.6, 7870.0], [60.7, 7885.0], [60.8, 7915.0], [60.9, 7936.0], [61.0, 7948.0], [61.1, 7958.0], [61.2, 7972.0], [61.3, 7982.0], [61.4, 8023.0], [61.5, 8038.0], [61.6, 8068.0], [61.7, 8105.0], [61.8, 8134.0], [61.9, 8172.0], [62.0, 8190.0], [62.1, 8199.0], [62.2, 8207.0], [62.3, 8232.0], [62.4, 8255.0], [62.5, 8262.0], [62.6, 8282.0], [62.7, 8287.0], [62.8, 8292.0], [62.9, 8297.0], [63.0, 8309.0], [63.1, 8319.0], [63.2, 8328.0], [63.3, 8360.0], [63.4, 8373.0], [63.5, 8381.0], [63.6, 8409.0], [63.7, 8437.0], [63.8, 8459.0], [63.9, 8470.0], [64.0, 8480.0], [64.1, 8492.0], [64.2, 8515.0], [64.3, 8531.0], [64.4, 8551.0], [64.5, 8571.0], [64.6, 8577.0], [64.7, 8583.0], [64.8, 8591.0], [64.9, 8595.0], [65.0, 8622.0], [65.1, 8643.0], [65.2, 8667.0], [65.3, 8682.0], [65.4, 8733.0], [65.5, 8766.0], [65.6, 8780.0], [65.7, 8796.0], [65.8, 8810.0], [65.9, 8831.0], [66.0, 8862.0], [66.1, 8868.0], [66.2, 8883.0], [66.3, 8890.0], [66.4, 8902.0], [66.5, 8920.0], [66.6, 8934.0], [66.7, 8968.0], [66.8, 8998.0], [66.9, 9014.0], [67.0, 9041.0], [67.1, 9044.0], [67.2, 9071.0], [67.3, 9082.0], [67.4, 9107.0], [67.5, 9124.0], [67.6, 9137.0], [67.7, 9150.0], [67.8, 9187.0], [67.9, 9198.0], [68.0, 9215.0], [68.1, 9253.0], [68.2, 9263.0], [68.3, 9281.0], [68.4, 9301.0], [68.5, 9320.0], [68.6, 9332.0], [68.7, 9343.0], [68.8, 9362.0], [68.9, 9367.0], [69.0, 9409.0], [69.1, 9416.0], [69.2, 9428.0], [69.3, 9447.0], [69.4, 9459.0], [69.5, 9466.0], [69.6, 9487.0], [69.7, 9501.0], [69.8, 9515.0], [69.9, 9530.0], [70.0, 9533.0], [70.1, 9543.0], [70.2, 9553.0], [70.3, 9579.0], [70.4, 9589.0], [70.5, 9600.0], [70.6, 9614.0], [70.7, 9636.0], [70.8, 9661.0], [70.9, 9693.0], [71.0, 9715.0], [71.1, 9723.0], [71.2, 9747.0], [71.3, 9757.0], [71.4, 9771.0], [71.5, 9780.0], [71.6, 9798.0], [71.7, 9819.0], [71.8, 9835.0], [71.9, 9850.0], [72.0, 9866.0], [72.1, 9903.0], [72.2, 9916.0], [72.3, 9939.0], [72.4, 9951.0], [72.5, 9954.0], [72.6, 9967.0], [72.7, 9979.0], [72.8, 9997.0], [72.9, 10033.0], [73.0, 10053.0], [73.1, 10090.0], [73.2, 10106.0], [73.3, 10113.0], [73.4, 10133.0], [73.5, 10142.0], [73.6, 10156.0], [73.7, 10161.0], [73.8, 10166.0], [73.9, 10169.0], [74.0, 10204.0], [74.1, 10230.0], [74.2, 10274.0], [74.3, 10295.0], [74.4, 10307.0], [74.5, 10327.0], [74.6, 10341.0], [74.7, 10371.0], [74.8, 10390.0], [74.9, 10402.0], [75.0, 10428.0], [75.1, 10459.0], [75.2, 10475.0], [75.3, 10494.0], [75.4, 10508.0], [75.5, 10542.0], [75.6, 10570.0], [75.7, 10582.0], [75.8, 10622.0], [75.9, 10633.0], [76.0, 10656.0], [76.1, 10668.0], [76.2, 10670.0], [76.3, 10690.0], [76.4, 10704.0], [76.5, 10722.0], [76.6, 10725.0], [76.7, 10735.0], [76.8, 10744.0], [76.9, 10772.0], [77.0, 10786.0], [77.1, 10792.0], [77.2, 10802.0], [77.3, 10821.0], [77.4, 10830.0], [77.5, 10840.0], [77.6, 10857.0], [77.7, 10892.0], [77.8, 10906.0], [77.9, 10939.0], [78.0, 10950.0], [78.1, 10963.0], [78.2, 10976.0], [78.3, 10988.0], [78.4, 11002.0], [78.5, 11019.0], [78.6, 11039.0], [78.7, 11043.0], [78.8, 11048.0], [78.9, 11069.0], [79.0, 11093.0], [79.1, 11116.0], [79.2, 11145.0], [79.3, 11149.0], [79.4, 11185.0], [79.5, 11205.0], [79.6, 11222.0], [79.7, 11235.0], [79.8, 11240.0], [79.9, 11268.0], [80.0, 11286.0], [80.1, 11292.0], [80.2, 11305.0], [80.3, 11310.0], [80.4, 11340.0], [80.5, 11355.0], [80.6, 11374.0], [80.7, 11398.0], [80.8, 11405.0], [80.9, 11421.0], [81.0, 11430.0], [81.1, 11460.0], [81.2, 11472.0], [81.3, 11488.0], [81.4, 11507.0], [81.5, 11519.0], [81.6, 11548.0], [81.7, 11566.0], [81.8, 11592.0], [81.9, 11607.0], [82.0, 11621.0], [82.1, 11655.0], [82.2, 11674.0], [82.3, 11688.0], [82.4, 11704.0], [82.5, 11718.0], [82.6, 11734.0], [82.7, 11741.0], [82.8, 11760.0], [82.9, 11785.0], [83.0, 11798.0], [83.1, 11808.0], [83.2, 11821.0], [83.3, 11854.0], [83.4, 11911.0], [83.5, 11942.0], [83.6, 11950.0], [83.7, 11977.0], [83.8, 12001.0], [83.9, 12010.0], [84.0, 12030.0], [84.1, 12053.0], [84.2, 12086.0], [84.3, 12095.0], [84.4, 12124.0], [84.5, 12140.0], [84.6, 12151.0], [84.7, 12171.0], [84.8, 12185.0], [84.9, 12198.0], [85.0, 12206.0], [85.1, 12225.0], [85.2, 12233.0], [85.3, 12251.0], [85.4, 12262.0], [85.5, 12293.0], [85.6, 12314.0], [85.7, 12322.0], [85.8, 12345.0], [85.9, 12361.0], [86.0, 12379.0], [86.1, 12391.0], [86.2, 12413.0], [86.3, 12449.0], [86.4, 12464.0], [86.5, 12473.0], [86.6, 12492.0], [86.7, 12511.0], [86.8, 12520.0], [86.9, 12522.0], [87.0, 12536.0], [87.1, 12558.0], [87.2, 12564.0], [87.3, 12585.0], [87.4, 12589.0], [87.5, 12609.0], [87.6, 12635.0], [87.7, 12645.0], [87.8, 12661.0], [87.9, 12677.0], [88.0, 12686.0], [88.1, 12707.0], [88.2, 12724.0], [88.3, 12737.0], [88.4, 12759.0], [88.5, 12767.0], [88.6, 12791.0], [88.7, 12805.0], [88.8, 12832.0], [88.9, 12841.0], [89.0, 12855.0], [89.1, 12866.0], [89.2, 12876.0], [89.3, 12898.0], [89.4, 12918.0], [89.5, 12926.0], [89.6, 12941.0], [89.7, 12953.0], [89.8, 12972.0], [89.9, 12981.0], [90.0, 13012.0], [90.1, 13023.0], [90.2, 13057.0], [90.3, 13068.0], [90.4, 13093.0], [90.5, 13106.0], [90.6, 13127.0], [90.7, 13147.0], [90.8, 13167.0], [90.9, 13186.0], [91.0, 13203.0], [91.1, 13213.0], [91.2, 13223.0], [91.3, 13238.0], [91.4, 13244.0], [91.5, 13258.0], [91.6, 13288.0], [91.7, 13292.0], [91.8, 13301.0], [91.9, 13315.0], [92.0, 13336.0], [92.1, 13345.0], [92.2, 13383.0], [92.3, 13394.0], [92.4, 13406.0], [92.5, 13421.0], [92.6, 13425.0], [92.7, 13444.0], [92.8, 13466.0], [92.9, 13481.0], [93.0, 13506.0], [93.1, 13528.0], [93.2, 13554.0], [93.3, 13563.0], [93.4, 13580.0], [93.5, 13602.0], [93.6, 13629.0], [93.7, 13647.0], [93.8, 13663.0], [93.9, 13686.0], [94.0, 13723.0], [94.1, 13772.0], [94.2, 13803.0], [94.3, 13811.0], [94.4, 13838.0], [94.5, 13857.0], [94.6, 13865.0], [94.7, 13897.0], [94.8, 13928.0], [94.9, 13940.0], [95.0, 13954.0], [95.1, 13962.0], [95.2, 14002.0], [95.3, 14022.0], [95.4, 14041.0], [95.5, 14056.0], [95.6, 14076.0], [95.7, 14095.0], [95.8, 14128.0], [95.9, 14158.0], [96.0, 14193.0], [96.1, 14199.0], [96.2, 14231.0], [96.3, 14245.0], [96.4, 14259.0], [96.5, 14271.0], [96.6, 14296.0], [96.7, 14326.0], [96.8, 14352.0], [96.9, 14381.0], [97.0, 14393.0], [97.1, 14414.0], [97.2, 14428.0], [97.3, 14434.0], [97.4, 14477.0], [97.5, 14491.0], [97.6, 14508.0], [97.7, 14530.0], [97.8, 14545.0], [97.9, 14549.0], [98.0, 14561.0], [98.1, 14567.0], [98.2, 14592.0], [98.3, 14629.0], [98.4, 14669.0], [98.5, 14685.0], [98.6, 14738.0], [98.7, 14809.0], [98.8, 14846.0], [98.9, 14872.0], [99.0, 14893.0], [99.1, 14945.0], [99.2, 14980.0], [99.3, 15038.0], [99.4, 15111.0], [99.5, 15195.0], [99.6, 15215.0], [99.7, 15378.0], [99.8, 15554.0], [99.9, 15891.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 903.0, "series": [{"data": [[0.0, 903.0], [100.0, 34.0], [200.0, 22.0], [300.0, 8.0], [400.0, 12.0], [500.0, 16.0], [600.0, 15.0], [700.0, 19.0], [800.0, 18.0], [900.0, 10.0], [1000.0, 20.0], [1100.0, 12.0], [1200.0, 14.0], [1300.0, 11.0], [1400.0, 20.0], [1500.0, 21.0], [1600.0, 16.0], [1700.0, 16.0], [1800.0, 19.0], [1900.0, 21.0], [2000.0, 10.0], [2100.0, 15.0], [2300.0, 20.0], [2200.0, 15.0], [2400.0, 27.0], [2500.0, 21.0], [2600.0, 19.0], [2700.0, 16.0], [2800.0, 12.0], [2900.0, 18.0], [3000.0, 17.0], [3100.0, 21.0], [3200.0, 19.0], [3300.0, 19.0], [3400.0, 19.0], [3500.0, 19.0], [3600.0, 26.0], [3700.0, 18.0], [3800.0, 25.0], [3900.0, 17.0], [4000.0, 19.0], [4100.0, 24.0], [4200.0, 20.0], [4300.0, 21.0], [4400.0, 24.0], [4500.0, 6.0], [4600.0, 19.0], [4700.0, 16.0], [4800.0, 19.0], [4900.0, 25.0], [5000.0, 17.0], [5100.0, 16.0], [5200.0, 19.0], [5300.0, 21.0], [5500.0, 21.0], [5600.0, 27.0], [5400.0, 13.0], [5800.0, 21.0], [5700.0, 20.0], [6000.0, 33.0], [6100.0, 23.0], [5900.0, 27.0], [6200.0, 22.0], [6300.0, 12.0], [6500.0, 26.0], [6400.0, 23.0], [6600.0, 20.0], [6900.0, 26.0], [6800.0, 23.0], [6700.0, 23.0], [7000.0, 18.0], [7100.0, 26.0], [7200.0, 21.0], [7300.0, 37.0], [7400.0, 21.0], [7500.0, 16.0], [7600.0, 25.0], [7900.0, 24.0], [7800.0, 23.0], [7700.0, 18.0], [8000.0, 13.0], [8100.0, 17.0], [8400.0, 22.0], [8300.0, 26.0], [8200.0, 32.0], [8700.0, 15.0], [8600.0, 18.0], [8500.0, 32.0], [8900.0, 19.0], [9100.0, 21.0], [8800.0, 25.0], [9000.0, 22.0], [9200.0, 19.0], [9300.0, 24.0], [9500.0, 32.0], [9400.0, 28.0], [9700.0, 27.0], [9600.0, 18.0], [10100.0, 31.0], [9800.0, 19.0], [10200.0, 16.0], [10000.0, 14.0], [9900.0, 30.0], [10300.0, 21.0], [10400.0, 17.0], [10500.0, 18.0], [10600.0, 25.0], [10700.0, 32.0], [11000.0, 27.0], [10800.0, 22.0], [11200.0, 27.0], [11100.0, 18.0], [10900.0, 25.0], [11500.0, 19.0], [11400.0, 25.0], [11300.0, 23.0], [11600.0, 21.0], [11700.0, 27.0], [11800.0, 14.0], [12200.0, 24.0], [12100.0, 24.0], [11900.0, 16.0], [12000.0, 22.0], [12400.0, 20.0], [12700.0, 26.0], [12600.0, 23.0], [12300.0, 25.0], [12500.0, 32.0], [13300.0, 21.0], [13100.0, 19.0], [12800.0, 25.0], [12900.0, 26.0], [13200.0, 33.0], [13000.0, 21.0], [13700.0, 10.0], [13400.0, 27.0], [13800.0, 21.0], [13500.0, 20.0], [13600.0, 18.0], [14000.0, 21.0], [14200.0, 21.0], [13900.0, 19.0], [14100.0, 16.0], [14300.0, 15.0], [14800.0, 14.0], [14500.0, 30.0], [14600.0, 10.0], [14400.0, 21.0], [14700.0, 5.0], [15200.0, 4.0], [14900.0, 9.0], [15100.0, 6.0], [15300.0, 4.0], [15000.0, 6.0], [15400.0, 2.0], [15800.0, 2.0], [15700.0, 2.0], [15500.0, 1.0], [15900.0, 1.0], [17200.0, 1.0], [17000.0, 1.0], [16400.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 17200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 155.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2867.0, "series": [{"data": [[0.0, 979.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 155.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2867.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 5.602766798418976, "minX": 1.699974851E12, "maxY": 2238.4657534246576, "series": [{"data": [[1.69997487E12, 545.6168831168834], [1.699974872E12, 229.12925170068021], [1.699974871E12, 385.5481927710843], [1.699974852E12, 5.602766798418976], [1.699974873E12, 78.20000000000006], [1.699974851E12, 7.627118644067802], [1.699974853E12, 82.74061433447098], [1.699974854E12, 598.7846153846152], [1.699974856E12, 1328.9856115107912], [1.699974855E12, 975.3541666666667], [1.699974857E12, 1701.272727272727], [1.699974858E12, 2051.789115646258], [1.69997486E12, 2106.5928571428576], [1.699974859E12, 2238.4657534246576], [1.699974861E12, 1960.5855263157896], [1.699974862E12, 1802.109090909091], [1.699974864E12, 1488.0780141843973], [1.699974863E12, 1639.086956521739], [1.699974865E12, 1341.0980392156862], [1.699974866E12, 1182.628048780489], [1.699974868E12, 857.5903614457834], [1.699974867E12, 1020.6187499999997], [1.699974869E12, 698.578947368421]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699974873E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 7.743999999999998, "minX": 1.0, "maxY": 17240.0, "series": [{"data": [[2.0, 8.208333333333336], [3.0, 304.9711538461538], [4.0, 116.07407407407408], [5.0, 7.743999999999998], [6.0, 246.34959349593495], [7.0, 141.41666666666666], [8.0, 257.7413793103448], [9.0, 469.3333333333333], [10.0, 1036.142857142857], [11.0, 1249.25], [12.0, 2526.333333333333], [13.0, 22.117647058823525], [14.0, 25.125000000000004], [15.0, 4972.0], [16.0, 44.0], [17.0, 9966.333333333334], [18.0, 2442.166666666667], [19.0, 2917.6], [20.0, 4893.0], [21.0, 40.333333333333336], [22.0, 69.5], [23.0, 10886.75], [24.0, 3650.0], [25.0, 2456.6666666666665], [26.0, 3730.0], [27.0, 24.0], [28.0, 15391.5], [29.0, 14393.0], [30.0, 14326.0], [31.0, 7395.0], [33.0, 7331.0], [32.0, 7212.0], [34.0, 50.0], [35.0, 15109.5], [37.0, 1484.2727272727273], [36.0, 3678.75], [38.0, 3805.75], [39.0, 14681.0], [41.0, 48.0], [40.0, 2108.285714285714], [42.0, 4189.857142857143], [43.0, 4873.0], [45.0, 5889.8], [44.0, 44.333333333333336], [47.0, 3730.25], [46.0, 5154.666666666667], [48.0, 7295.5], [49.0, 15785.0], [50.0, 15197.0], [53.0, 14490.0], [52.0, 14567.0], [55.0, 14669.0], [54.0, 14271.0], [57.0, 14243.0], [56.0, 14882.0], [59.0, 14392.5], [61.0, 14485.0], [60.0, 14401.0], [63.0, 57.0], [62.0, 7446.0], [67.0, 45.0], [66.0, 14852.0], [65.0, 14545.0], [70.0, 7393.5], [69.0, 5001.333333333333], [71.0, 14393.0], [68.0, 14400.5], [74.0, 101.5], [75.0, 9870.333333333334], [73.0, 14296.0], [72.0, 14562.0], [79.0, 14672.0], [78.0, 15033.0], [77.0, 14592.0], [76.0, 14921.0], [83.0, 7535.5], [82.0, 14952.0], [81.0, 14193.0], [80.0, 14158.0], [85.0, 7350.5], [84.0, 7271.0], [86.0, 5039.333333333333], [87.0, 14238.0], [89.0, 153.0], [91.0, 14430.0], [90.0, 14287.5], [88.0, 14245.0], [95.0, 7197.5], [94.0, 2957.0], [93.0, 14199.0], [92.0, 14130.0], [96.0, 5089.333333333333], [98.0, 7117.0], [97.0, 4862.666666666667], [101.0, 8595.5], [103.0, 14919.0], [102.0, 14305.0], [100.0, 14715.0], [104.0, 5023.333333333333], [107.0, 14110.0], [106.0, 14235.0], [105.0, 15378.0], [111.0, 7314.0], [110.0, 14661.0], [108.0, 15215.0], [112.0, 7123.0], [113.0, 7172.0], [115.0, 14065.0], [114.0, 14128.0], [119.0, 14414.0], [118.0, 15111.0], [117.0, 14158.0], [116.0, 14077.0], [123.0, 14376.0], [122.0, 15975.0], [121.0, 14197.0], [120.0, 14550.0], [126.0, 14376.5], [124.0, 17240.0], [129.0, 4734.666666666667], [133.0, 7070.25], [132.0, 66.0], [135.0, 14042.0], [134.0, 14206.0], [131.0, 14455.5], [128.0, 14143.5], [140.0, 250.0], [143.0, 14017.0], [142.0, 14002.0], [141.0, 14517.5], [139.0, 14024.0], [138.0, 14733.0], [137.0, 15229.0], [136.0, 14165.0], [146.0, 4981.0], [150.0, 14101.5], [148.0, 13865.0], [147.0, 13989.0], [145.0, 15470.0], [144.0, 14508.0], [154.0, 7082.5], [158.0, 14260.0], [157.0, 13792.0], [156.0, 15379.0], [155.0, 14491.0], [153.0, 15207.0], [152.0, 14204.0], [160.0, 7327.25], [166.0, 7630.5], [167.0, 170.0], [165.0, 14077.0], [164.0, 14428.0], [163.0, 14189.0], [162.0, 13813.0], [161.0, 14383.0], [168.0, 9408.666666666666], [170.0, 7053.5], [172.0, 9725.0], [174.0, 6984.5], [173.0, 7375.5], [175.0, 14006.0], [169.0, 13838.0], [180.0, 7071.0], [181.0, 14494.0], [179.0, 13796.0], [178.0, 14482.0], [177.0, 14561.0], [176.0, 13831.0], [191.0, 14279.0], [190.0, 14681.0], [189.0, 13884.0], [188.0, 13847.0], [187.0, 14474.0], [186.0, 13719.0], [185.0, 13943.5], [184.0, 13764.5], [199.0, 13803.0], [198.0, 14095.0], [197.0, 13934.0], [196.0, 13619.0], [195.0, 13554.0], [194.0, 13563.0], [193.0, 13704.0], [207.0, 14530.0], [206.0, 13581.0], [204.0, 13481.0], [203.0, 13928.0], [202.0, 14194.0], [201.0, 14115.0], [200.0, 14477.0], [209.0, 6821.0], [215.0, 14006.0], [214.0, 13540.0], [213.0, 14846.0], [212.0, 13829.0], [211.0, 14838.0], [210.0, 14523.0], [208.0, 13653.0], [223.0, 9027.666666666666], [221.0, 13562.5], [219.0, 13754.0], [217.0, 13578.0], [216.0, 13425.0], [229.0, 7437.5], [231.0, 14595.0], [230.0, 14549.0], [228.0, 13597.0], [227.0, 13387.0], [226.0, 13464.0], [225.0, 15200.0], [224.0, 13400.0], [239.0, 13654.0], [238.0, 13675.0], [237.0, 13479.0], [236.0, 13294.0], [235.0, 15891.0], [234.0, 13575.0], [232.0, 13444.0], [247.0, 13289.0], [246.0, 13320.0], [245.0, 13629.0], [244.0, 13782.0], [242.0, 13250.0], [241.0, 14051.0], [240.0, 13337.0], [255.0, 13225.0], [254.0, 13313.0], [253.0, 13861.0], [252.0, 13860.0], [251.0, 13258.0], [250.0, 13591.0], [249.0, 13375.0], [248.0, 13406.0], [270.0, 13182.0], [258.0, 9061.666666666666], [260.0, 6712.0], [261.0, 13905.0], [263.0, 13207.0], [256.0, 14196.0], [262.0, 13943.0], [264.0, 7640.5], [266.0, 8997.666666666666], [265.0, 426.0], [267.0, 6740.0], [268.0, 6820.0], [259.0, 13442.0], [269.0, 13165.0], [287.0, 6627.5], [275.0, 6706.0], [278.0, 6724.0], [277.0, 13598.0], [276.0, 13488.0], [279.0, 13528.0], [272.0, 13405.5], [274.0, 13723.0], [273.0, 13313.0], [280.0, 125.0], [281.0, 13166.0], [286.0, 13098.0], [285.0, 13737.0], [284.0, 13520.0], [283.0, 13388.0], [282.0, 13206.0], [303.0, 13345.0], [295.0, 6692.5], [294.0, 13398.5], [292.0, 13569.0], [296.0, 6770.0], [302.0, 13214.0], [301.0, 13197.0], [300.0, 13057.0], [291.0, 13749.0], [290.0, 13336.0], [289.0, 13857.0], [288.0, 13107.0], [299.0, 13956.0], [298.0, 13215.0], [297.0, 13068.0], [318.0, 13166.0], [308.0, 6733.0], [309.0, 13351.0], [311.0, 13018.0], [305.0, 12983.0], [304.0, 13930.0], [307.0, 14285.0], [306.0, 13094.0], [310.0, 13423.0], [316.0, 6571.5], [317.0, 6785.0], [319.0, 12950.0], [315.0, 12975.0], [314.0, 13121.0], [313.0, 13017.0], [312.0, 13014.0], [335.0, 13323.0], [330.0, 6751.5], [329.0, 4905.333333333333], [331.0, 6667.5], [334.0, 13647.0], [333.0, 13238.0], [332.0, 13234.0], [323.0, 13301.0], [322.0, 13299.0], [321.0, 13297.0], [320.0, 13421.0], [328.0, 13340.0], [327.0, 12965.0], [326.0, 12973.0], [325.0, 13264.0], [324.0, 13203.0], [350.0, 13406.0], [337.0, 6877.5], [336.0, 6686.0], [343.0, 13036.0], [341.0, 13244.0], [340.0, 12918.0], [346.0, 7025.0], [345.0, 6552.0], [351.0, 12856.0], [344.0, 13070.0], [349.0, 13234.0], [348.0, 12866.0], [339.0, 12869.0], [338.0, 12866.0], [347.0, 14249.0], [366.0, 12981.0], [367.0, 12884.0], [365.0, 13521.0], [364.0, 12776.0], [363.0, 12759.0], [362.0, 12898.0], [361.0, 14067.0], [360.0, 12855.0], [359.0, 12792.0], [352.0, 12953.0], [354.0, 12791.0], [353.0, 13241.0], [358.0, 12920.0], [357.0, 13066.0], [356.0, 12878.5], [382.0, 6928.5], [370.0, 337.0], [373.0, 6970.5], [372.0, 12737.0], [375.0, 13805.0], [369.0, 12729.0], [368.0, 12832.0], [374.0, 12957.0], [377.0, 3367.25], [380.0, 6734.5], [371.0, 13071.5], [381.0, 12793.0], [379.0, 12859.0], [378.0, 12757.0], [376.0, 13058.0], [399.0, 13044.0], [395.0, 7234.0], [394.0, 4595.333333333333], [393.0, 6552.0], [397.0, 6657.0], [398.0, 13023.0], [396.0, 13245.0], [387.0, 12684.0], [386.0, 13663.0], [385.0, 13691.0], [384.0, 12870.0], [392.0, 13253.0], [391.0, 13425.0], [390.0, 13199.5], [388.0, 13853.0], [415.0, 12810.0], [411.0, 6834.5], [412.0, 6746.0], [403.0, 12828.0], [402.0, 12645.0], [401.0, 12923.0], [400.0, 12794.0], [414.0, 12562.0], [413.0, 13097.0], [410.0, 12966.0], [409.0, 13631.0], [408.0, 12940.0], [407.0, 12668.0], [406.0, 12686.0], [405.0, 12594.0], [404.0, 12627.0], [430.0, 12521.0], [421.0, 6980.0], [420.0, 6539.0], [422.0, 3612.5], [423.0, 13277.0], [419.0, 13167.0], [418.0, 12559.0], [417.0, 12591.0], [416.0, 13147.0], [426.0, 6537.0], [429.0, 12723.0], [428.0, 13040.0], [427.0, 12521.0], [425.0, 13026.0], [424.0, 12585.0], [445.0, 6547.5], [440.0, 6689.5], [439.0, 6730.5], [438.0, 13004.0], [437.0, 12635.0], [436.0, 12677.0], [443.0, 6837.5], [447.0, 12464.0], [446.0, 12500.0], [444.0, 12451.0], [435.0, 12521.0], [434.0, 12585.0], [433.0, 12534.0], [432.0, 12775.5], [442.0, 12473.0], [441.0, 12845.0], [463.0, 452.3333333333333], [449.0, 6623.5], [455.0, 13086.0], [448.0, 12497.0], [453.0, 12492.0], [452.0, 12464.0], [461.0, 7209.5], [462.0, 12519.0], [460.0, 12366.0], [451.0, 12734.0], [450.0, 13223.0], [459.0, 12515.0], [458.0, 12391.0], [457.0, 12388.0], [456.0, 12365.0], [477.0, 12384.0], [464.0, 8794.666666666666], [465.0, 4535.0], [466.0, 6527.5], [470.0, 6503.5], [469.0, 12514.0], [468.0, 13062.0], [471.0, 12756.0], [475.0, 6617.0], [474.0, 12641.0], [473.0, 13090.0], [472.0, 12525.0], [479.0, 12320.0], [478.0, 12940.0], [476.0, 12304.0], [467.0, 12647.0], [493.0, 6695.0], [480.0, 7327.0], [481.0, 13497.0], [487.0, 13383.0], [486.0, 12763.0], [485.0, 12456.0], [484.0, 12328.0], [482.0, 4701.0], [494.0, 4873.0], [492.0, 4059.5], [483.0, 12588.0], [491.0, 6649.0], [495.0, 6588.0], [490.0, 12926.0], [489.0, 12249.0], [488.0, 13291.0], [510.0, 6440.5], [509.0, 4665.666666666666], [511.0, 12923.0], [508.0, 12782.0], [507.0, 12439.0], [506.0, 12408.0], [505.0, 12814.0], [504.0, 12536.0], [503.0, 12379.0], [497.0, 12262.0], [496.0, 12622.0], [499.0, 13210.0], [498.0, 13436.0], [502.0, 12271.0], [501.0, 12587.0], [500.0, 12666.0], [536.0, 4505.0], [528.0, 6773.5], [512.0, 6411.5], [518.0, 12724.0], [514.0, 12841.0], [538.0, 4576.666666666666], [542.0, 12244.5], [540.0, 12095.0], [524.0, 6569.5], [522.0, 12526.0], [520.0, 12645.0], [526.0, 12690.0], [530.0, 8390.0], [532.0, 877.0], [534.0, 12285.0], [574.0, 11950.0], [554.0, 4836.666666666667], [556.0, 12010.0], [564.0, 4489.0], [572.0, 12987.0], [570.0, 12499.0], [568.0, 13557.0], [550.0, 12159.0], [548.0, 12204.0], [546.0, 12643.0], [544.0, 12096.0], [558.0, 11998.0], [566.0, 12322.0], [562.0, 12805.0], [560.0, 12010.0], [600.0, 837.5], [576.0, 6507.5], [582.0, 6516.0], [580.0, 12360.0], [578.0, 12552.0], [584.0, 713.0], [590.0, 11879.0], [586.0, 12941.0], [606.0, 11809.0], [592.0, 12316.0], [604.0, 12520.0], [602.0, 11810.0], [598.0, 12171.0], [594.0, 12832.0], [636.0, 6311.0], [614.0, 4597.333333333334], [610.0, 6434.0], [612.0, 11914.0], [622.0, 12001.0], [608.0, 11786.0], [626.0, 6483.5], [628.0, 6333.0], [638.0, 12185.0], [634.0, 11593.0], [632.0, 12034.0], [624.0, 12422.0], [668.0, 11465.0], [640.0, 6531.0], [654.0, 8193.333333333334], [652.0, 11678.0], [650.0, 11607.0], [648.0, 11513.0], [670.0, 12702.0], [666.0, 11927.0], [664.0, 12086.0], [646.0, 11970.0], [644.0, 12661.0], [642.0, 11821.5], [660.0, 11789.0], [658.0, 11460.0], [656.0, 12070.0], [700.0, 12665.0], [688.0, 4506.333333333334], [694.0, 6783.0], [702.0, 11280.0], [698.0, 11398.0], [696.0, 11751.0], [690.0, 12589.0], [686.0, 11350.0], [674.0, 11519.0], [672.0, 11595.0], [678.0, 11408.0], [676.0, 11405.0], [684.0, 12322.0], [682.0, 11358.0], [680.0, 11512.0], [732.0, 6213.5], [712.0, 4489.0], [710.0, 6904.0], [718.0, 11556.0], [708.0, 12030.0], [706.0, 11289.0], [704.0, 11286.0], [716.0, 11488.0], [714.0, 6263.5], [734.0, 11182.0], [728.0, 11143.0], [726.0, 11280.5], [724.0, 11185.0], [722.0, 11145.0], [720.0, 11763.5], [766.0, 6391.0], [748.0, 6541.5], [746.0, 13187.0], [744.0, 11711.0], [762.0, 1087.0], [764.0, 6118.5], [760.0, 11113.0], [742.0, 11146.0], [740.0, 11308.0], [738.0, 11317.0], [736.0, 11542.0], [750.0, 11745.0], [758.0, 11497.0], [756.0, 11798.0], [754.0, 11093.0], [752.0, 11091.0], [794.0, 6418.5], [782.0, 6017.0], [774.0, 6265.5], [772.0, 11678.0], [770.0, 11066.0], [768.0, 11548.0], [792.0, 10904.0], [776.0, 1187.0], [780.0, 11487.0], [778.0, 11290.0], [790.0, 6158.5], [788.0, 11293.0], [786.0, 11821.0], [784.0, 11103.0], [798.0, 4002.5], [796.0, 6019.5], [828.0, 11734.0], [830.0, 10735.0], [826.0, 11960.0], [824.0, 11283.0], [822.0, 11763.0], [820.0, 10963.0], [818.0, 10786.0], [816.0, 10949.0], [814.0, 10941.0], [802.0, 11232.0], [806.0, 10809.0], [804.0, 11067.0], [812.0, 11947.0], [810.0, 11222.0], [858.0, 6999.5], [848.0, 6073.5], [846.0, 6149.0], [844.0, 10676.0], [842.0, 11040.0], [840.0, 10780.0], [852.0, 7676.666666666667], [854.0, 6320.5], [862.0, 1571.0], [860.0, 11093.0], [856.0, 11799.0], [838.0, 11304.0], [836.0, 12345.0], [834.0, 10828.0], [832.0, 10728.0], [850.0, 10662.0], [894.0, 11977.0], [878.0, 3833.25], [872.0, 1373.0], [876.0, 10883.0], [880.0, 5551.0], [882.0, 11122.0], [888.0, 6773.5], [868.0, 10602.0], [866.0, 11430.0], [864.0, 10670.0], [892.0, 10704.0], [890.0, 10542.0], [886.0, 10669.0], [884.0, 10830.0], [910.0, 3245.0], [904.0, 4631.666666666666], [906.0, 7544.333333333333], [912.0, 4599.333333333334], [914.0, 10742.0], [916.0, 10993.0], [918.0, 10830.5], [908.0, 10670.0], [922.0, 7063.0], [902.0, 10794.0], [900.0, 11214.0], [898.0, 10491.0], [896.0, 10521.0], [924.0, 10402.0], [926.0, 11724.0], [930.0, 10844.0], [928.0, 6126.5], [932.0, 1863.0], [934.0, 10813.0], [936.0, 1501.0], [938.0, 6219.5], [940.0, 10792.0], [942.0, 5893.5], [946.0, 6116.0], [948.0, 10835.0], [950.0, 12719.0], [944.0, 4783.666666666666], [958.0, 11661.0], [956.0, 12203.0], [954.0, 10794.0], [952.0, 10466.0], [960.0, 5948.0], [974.0, 12251.0], [962.0, 1733.0], [964.0, 6016.0], [984.0, 10633.0], [966.0, 10166.0], [986.0, 1591.0], [972.0, 4493.666666666666], [970.0, 10709.0], [968.0, 10355.5], [988.0, 5837.5], [976.0, 10213.0], [978.0, 10381.0], [980.0, 10319.0], [982.0, 10299.0], [994.0, 10189.0], [996.0, 11544.0], [992.0, 10409.0], [1006.0, 10144.0], [1004.0, 9970.0], [1002.0, 10920.0], [1000.0, 9998.0], [998.0, 3793.0], [1010.0, 9997.0], [1008.0, 10464.5], [1012.0, 9940.0], [1014.0, 9941.0], [1022.0, 11185.0], [1020.0, 10327.0], [1018.0, 10756.5], [1016.0, 10059.0], [1024.0, 10097.0], [1076.0, 5981.75], [1040.0, 4584.333333333334], [1044.0, 10741.0], [1048.0, 9913.0], [1028.0, 10217.5], [1036.0, 10165.0], [1052.0, 10703.0], [1056.0, 6255.5], [1060.0, 9801.0], [1064.0, 9776.0], [1084.0, 10767.0], [1080.0, 10666.0], [1072.0, 10229.5], [1068.0, 5936.5], [1096.0, 1817.0], [1144.0, 6128.5], [1136.0, 4462.0], [1148.0, 10235.0], [1100.0, 5938.0], [1104.0, 6213.5], [1108.0, 9545.0], [1112.0, 10242.0], [1116.0, 9939.0], [1088.0, 10274.0], [1092.0, 9723.0], [1132.0, 9501.0], [1128.0, 9683.0], [1124.0, 10456.0], [1120.0, 10116.0], [1204.0, 9549.0], [1208.0, 4703.666666666666], [1152.0, 6050.5], [1160.0, 9585.5], [1156.0, 10341.0], [1164.0, 9354.0], [1188.0, 5667.5], [1184.0, 9791.0], [1192.0, 4900.666666666666], [1196.0, 9246.0], [1176.0, 9600.0], [1172.0, 9578.0], [1168.0, 9362.0], [1180.0, 4828.666666666666], [1264.0, 4652.0], [1276.0, 8902.0], [1220.0, 9866.0], [1216.0, 9605.5], [1224.0, 9120.0], [1244.0, 9124.0], [1272.0, 4050.75], [1268.0, 8894.0], [1252.0, 9107.0], [1232.0, 9262.0], [1236.0, 9081.0], [1256.0, 4629.666666666666], [1260.0, 4682.666666666666], [1328.0, 8643.0], [1332.0, 5844.0], [1292.0, 8796.0], [1320.0, 5651.5], [1312.0, 8863.0], [1340.0, 4679.0], [1336.0, 5625.0], [1296.0, 5822.0], [1304.0, 8766.0], [1300.0, 8884.0], [1280.0, 8934.0], [1288.0, 8932.0], [1284.0, 9566.5], [1308.0, 9331.0], [1352.0, 9045.0], [1400.0, 5461.5], [1344.0, 5755.5], [1392.0, 4657.333333333333], [1356.0, 8459.0], [1348.0, 8685.0], [1396.0, 8968.0], [1368.0, 4575.666666666667], [1360.0, 8622.0], [1372.0, 8372.0], [1380.0, 2801.6666666666665], [1384.0, 9192.0], [1388.0, 8962.5], [1376.0, 8636.0], [1404.0, 8287.0], [1416.0, 8520.0], [1460.0, 9044.0], [1464.0, 5986.0], [1468.0, 7982.0], [1412.0, 5650.0], [1420.0, 8630.5], [1456.0, 8054.0], [1428.0, 8232.0], [1424.0, 8315.0], [1432.0, 8754.0], [1408.0, 8846.0], [1436.0, 8468.0], [1452.0, 5971.5], [1440.0, 5349.0], [1444.0, 8074.0], [1448.0, 8294.0], [1476.0, 8423.0], [1524.0, 7856.0], [1532.0, 9094.0], [1472.0, 8185.0], [1480.0, 7972.0], [1484.0, 4409.25], [1528.0, 7707.0], [1492.0, 7916.0], [1488.0, 9320.0], [1500.0, 7842.0], [1496.0, 9042.0], [1504.0, 4549.333333333333], [1508.0, 2927.0], [1512.0, 5448.0], [1516.0, 7729.0], [1584.0, 7968.0], [1544.0, 3009.0], [1540.0, 7621.0], [1548.0, 7831.0], [1588.0, 7399.0], [1592.0, 8296.0], [1596.0, 7463.0], [1568.0, 5591.0], [1580.0, 5209.5], [1572.0, 7530.0], [1552.0, 5165.0], [1556.0, 8239.0], [1560.0, 8106.0], [1564.0, 5984.5], [1536.0, 8264.0], [1604.0, 7572.5], [1652.0, 7566.0], [1660.0, 5865.333333333333], [1600.0, 7396.0], [1608.0, 7398.0], [1628.0, 7886.0], [1624.0, 7363.0], [1620.0, 7409.0], [1616.0, 8067.5], [1648.0, 5509.0], [1612.0, 7372.0], [1656.0, 7192.0], [1632.0, 6069.0], [1636.0, 7255.0], [1640.0, 5418.0], [1712.0, 6921.0], [1668.0, 5023.5], [1664.0, 7316.0], [1676.0, 7076.0], [1696.0, 5323.5], [1724.0, 7042.0], [1716.0, 7949.0], [1720.0, 7945.0], [1708.0, 7369.0], [1704.0, 7093.0], [1700.0, 7304.0], [1684.0, 5446.5], [1692.0, 3122.0], [1688.0, 6972.0], [1736.0, 4820.666666666667], [1740.0, 5000.5], [1752.0, 4984.0], [1744.0, 6914.0], [1756.0, 7131.0], [1732.0, 8325.5], [1776.0, 5733.5], [1784.0, 5106.0], [1788.0, 7042.0], [1772.0, 6665.0], [1768.0, 7024.0], [1760.0, 5690.0], [1800.0, 6919.0], [1848.0, 4165.166666666667], [1820.0, 4369.0], [1792.0, 7586.0], [1804.0, 6495.0], [1840.0, 6362.0], [1816.0, 5517.0], [1812.0, 6503.0], [1808.0, 7137.0], [1832.0, 5101.5], [1828.0, 6519.0], [1824.0, 6581.0], [1836.0, 6765.0], [1852.0, 6337.0], [1908.0, 6180.0], [1880.0, 5829.5], [1912.0, 4188.6], [1904.0, 6091.0], [1868.0, 6707.0], [1864.0, 6313.0], [1896.0, 6272.0], [1892.0, 7123.0], [1888.0, 7315.0], [1916.0, 6129.0], [1876.0, 7643.0], [1872.0, 7053.0], [1884.0, 5481.0], [1920.0, 6023.0], [1968.0, 5941.0], [1932.0, 4670.25], [1936.0, 6163.0], [1940.0, 5918.0], [1944.0, 5974.0], [1924.0, 6714.0], [1928.0, 5998.0], [1948.0, 6023.0], [1952.0, 3830.5], [1956.0, 6052.0], [1960.0, 5815.0], [1964.0, 5826.0], [1972.0, 4726.5], [1976.0, 5773.0], [1980.0, 7940.0], [1996.0, 3642.0], [2032.0, 3769.0], [1984.0, 5988.0], [1988.0, 5662.0], [1992.0, 6064.0], [2012.0, 5618.0], [2008.0, 5908.0], [2040.0, 5573.0], [2036.0, 7581.0], [2044.0, 6870.0], [2016.0, 5035.5], [2024.0, 5763.0], [2020.0, 6072.0], [2028.0, 5008.333333333333], [2000.0, 5667.0], [2004.0, 5866.5], [2072.0, 5977.0], [2048.0, 4641.0], [2056.0, 5987.0], [2064.0, 4490.666666666667], [2152.0, 6220.0], [2160.0, 4800.5], [2112.0, 5471.0], [2120.0, 5112.0], [2168.0, 5255.0], [2128.0, 4578.0], [2136.0, 5034.0], [2088.0, 5974.0], [2080.0, 5865.0], [2104.0, 5923.5], [2184.0, 4392.5], [2192.0, 4735.5], [2176.0, 4945.0], [2200.0, 4926.0], [2272.0, 4722.5], [2288.0, 4166.0], [2280.0, 4773.0], [2208.0, 4773.0], [2216.0, 4435.285714285715], [2232.0, 4669.0], [2248.0, 4642.0], [2240.0, 4428.666666666667], [2065.0, 4683.5], [2049.0, 6614.0], [2057.0, 6660.0], [2105.0, 5336.0], [2097.0, 4854.0], [2145.0, 5125.5], [2161.0, 4904.5], [2169.0, 5439.0], [2113.0, 5168.0], [2121.0, 6046.0], [2153.0, 6054.0], [2129.0, 4874.0], [2137.0, 6643.0], [2081.0, 4746.0], [2089.0, 5317.0], [2273.0, 4498.5], [2241.0, 4449.5], [2185.0, 4788.0], [2193.0, 5127.0], [2201.0, 6013.0], [2289.0, 5088.0], [2281.0, 5646.0], [2209.0, 4695.0], [2217.0, 4683.5], [2249.0, 4405.0], [2257.0, 4418.5], [2265.0, 4865.75], [2177.0, 4932.0], [2233.0, 5012.0], [2225.0, 4959.5], [1029.0, 9979.0], [1073.0, 4424.0], [1037.0, 12299.0], [1033.0, 10134.5], [1025.0, 1686.0], [1041.0, 10722.0], [1045.0, 10024.0], [1049.0, 9835.0], [1057.0, 4053.0], [1061.0, 9780.0], [1085.0, 9733.0], [1077.0, 9954.0], [1065.0, 5776.0], [1069.0, 10169.0], [1093.0, 9633.0], [1097.0, 7145.666666666667], [1089.0, 9667.0], [1117.0, 9485.0], [1113.0, 9531.0], [1109.0, 9739.0], [1105.0, 10403.0], [1137.0, 5884.0], [1145.0, 9466.0], [1141.0, 9452.0], [1121.0, 10134.0], [1149.0, 9422.0], [1101.0, 2280.0], [1125.0, 5902.0], [1129.0, 5980.0], [1133.0, 9474.0], [1165.0, 9520.0], [1209.0, 5894.5], [1157.0, 1959.0], [1153.0, 9614.0], [1161.0, 9771.0], [1201.0, 9271.5], [1205.0, 9290.0], [1213.0, 10040.0], [1189.0, 9320.0], [1185.0, 9343.0], [1193.0, 10033.0], [1197.0, 10380.0], [1181.0, 5725.5], [1177.0, 9322.0], [1173.0, 9701.0], [1169.0, 9532.0], [1221.0, 9283.0], [1229.0, 7050.666666666667], [1277.0, 9181.0], [1225.0, 9409.0], [1245.0, 9262.0], [1241.0, 9343.5], [1237.0, 9187.0], [1233.0, 11026.0], [1265.0, 5653.5], [1269.0, 9008.0], [1257.0, 5931.5], [1261.0, 2263.0], [1249.0, 9015.0], [1253.0, 9016.0], [1329.0, 9281.0], [1289.0, 4703.666666666666], [1285.0, 5588.0], [1337.0, 2303.0], [1293.0, 9003.0], [1313.0, 9081.0], [1317.0, 8976.5], [1321.0, 9720.0], [1325.0, 6825.666666666667], [1297.0, 4078.5], [1309.0, 4715.0], [1305.0, 9042.0], [1301.0, 8786.0], [1281.0, 8789.0], [1345.0, 5728.0], [1393.0, 4766.333333333333], [1369.0, 2585.5], [1349.0, 8538.0], [1353.0, 8583.0], [1357.0, 8623.0], [1373.0, 8367.0], [1365.0, 8989.0], [1361.0, 10192.0], [1389.0, 8478.0], [1385.0, 8705.0], [1381.0, 8380.0], [1401.0, 8574.0], [1397.0, 8558.0], [1377.0, 8570.0], [1405.0, 8282.0], [1417.0, 8591.0], [1461.0, 5603.0], [1413.0, 6419.0], [1421.0, 8199.0], [1457.0, 8489.0], [1465.0, 5439.5], [1429.0, 4559.333333333333], [1433.0, 5353.0], [1437.0, 5507.5], [1409.0, 9515.0], [1441.0, 3762.2], [1453.0, 8107.0], [1449.0, 8266.0], [1445.0, 8883.0], [1477.0, 4522.666666666667], [1521.0, 6666.0], [1473.0, 8286.0], [1501.0, 8032.0], [1497.0, 8482.0], [1493.0, 7915.0], [1489.0, 8038.0], [1481.0, 5451.0], [1533.0, 5521.0], [1529.0, 7870.0], [1525.0, 8379.0], [1509.0, 6493.333333333333], [1513.0, 7936.0], [1517.0, 7978.0], [1505.0, 7823.0], [1589.0, 7565.0], [1597.0, 5429.0], [1549.0, 5226.5], [1545.0, 7617.0], [1541.0, 8303.0], [1537.0, 7702.0], [1577.0, 7757.5], [1573.0, 8207.0], [1581.0, 8868.0], [1565.0, 7697.0], [1561.0, 7551.0], [1557.0, 7720.0], [1553.0, 7567.0], [1569.0, 7920.0], [1593.0, 7678.0], [1585.0, 7616.0], [1609.0, 4555.666666666667], [1653.0, 5388.0], [1605.0, 7848.0], [1601.0, 7961.0], [1629.0, 7469.0], [1621.0, 7435.0], [1617.0, 8118.0], [1613.0, 9411.0], [1649.0, 7225.0], [1657.0, 7331.0], [1633.0, 8682.0], [1637.0, 7881.0], [1661.0, 7124.0], [1641.0, 5185.333333333333], [1645.0, 7260.0], [1721.0, 7693.0], [1665.0, 5045.333333333333], [1677.0, 5366.0], [1673.0, 7203.0], [1669.0, 7130.0], [1697.0, 7562.0], [1717.0, 7310.0], [1713.0, 6921.0], [1701.0, 4665.666666666667], [1705.0, 7260.0], [1709.0, 7440.0], [1681.0, 5186.5], [1685.0, 7436.0], [1689.0, 6973.0], [1693.0, 5975.0], [1741.0, 7732.0], [1733.0, 5585.5], [1729.0, 7563.5], [1753.0, 7167.0], [1749.0, 6852.0], [1777.0, 3816.0], [1737.0, 6802.0], [1781.0, 8061.5], [1785.0, 4333.5], [1789.0, 3383.0], [1761.0, 4161.75], [1769.0, 7527.0], [1773.0, 9333.0], [1765.0, 5872.333333333333], [1745.0, 5083.0], [1797.0, 6720.0], [1845.0, 6598.5], [1853.0, 6527.0], [1793.0, 6586.0], [1801.0, 6495.0], [1805.0, 7714.0], [1817.0, 4844.5], [1813.0, 6763.0], [1809.0, 6575.0], [1821.0, 4817.5], [1825.0, 5743.0], [1837.0, 5835.0], [1833.0, 6353.0], [1829.0, 6416.0], [1849.0, 6423.0], [1909.0, 6044.0], [1857.0, 6480.0], [1905.0, 6244.0], [1869.0, 6551.0], [1861.0, 6621.0], [1913.0, 3588.3333333333335], [1917.0, 8457.0], [1901.0, 5400.666666666667], [1897.0, 5197.5], [1893.0, 6153.0], [1889.0, 6153.0], [1873.0, 6251.0], [1877.0, 6219.0], [1881.0, 6175.0], [1885.0, 4991.5], [1925.0, 4560.333333333333], [1933.0, 4899.5], [1977.0, 4788.0], [1921.0, 6026.0], [1929.0, 6016.0], [1949.0, 6977.0], [1945.0, 6028.0], [1941.0, 6442.0], [1937.0, 5920.0], [1953.0, 5237.333333333333], [1965.0, 6105.0], [1961.0, 5950.0], [1957.0, 5864.0], [1973.0, 4365.25], [1969.0, 6438.0], [1981.0, 5958.0], [2037.0, 4898.5], [2041.0, 5004.5], [1997.0, 4973.75], [1989.0, 4663.5], [1985.0, 5815.0], [2033.0, 5570.0], [2017.0, 6272.0], [2021.0, 5590.0], [2025.0, 5675.0], [2045.0, 6155.0], [2029.0, 4676.0], [2001.0, 7224.0], [2005.0, 6140.0], [2009.0, 5678.0], [2013.0, 5635.0], [2066.0, 4735.5], [2074.0, 5387.5], [2050.0, 6106.0], [2106.0, 5308.0], [2058.0, 4848.0], [2146.0, 4983.0], [2162.0, 4543.0], [2114.0, 5337.0], [2122.0, 5554.0], [2170.0, 6075.0], [2138.0, 5038.0], [2130.0, 4879.0], [2090.0, 5525.0], [2082.0, 6615.0], [2098.0, 4524.0], [2186.0, 5057.0], [2178.0, 4476.0], [2194.0, 5279.0], [2202.0, 5570.0], [2290.0, 4992.0], [2282.0, 5163.0], [2274.0, 4245.0], [2210.0, 4847.0], [2234.0, 5283.5], [2226.0, 4738.0], [2218.0, 5131.0], [2242.0, 4445.75], [2250.0, 4863.0], [2258.0, 4499.0], [2266.0, 4703.333333333333], [2067.0, 4267.75], [2051.0, 5828.0], [2059.0, 5462.0], [2107.0, 5287.0], [2099.0, 5085.0], [2075.0, 6021.0], [2147.0, 4949.0], [2171.0, 4815.0], [2115.0, 6551.0], [2155.0, 4954.25], [2123.0, 4539.0], [2131.0, 4300.0], [2083.0, 5434.0], [2091.0, 5516.0], [2203.0, 6577.0], [2179.0, 4387.0], [2187.0, 4953.0], [2195.0, 4842.0], [2291.0, 4463.0], [2283.0, 4405.0], [2211.0, 4667.0], [2219.0, 4605.5], [2243.0, 4465.5], [2251.0, 4400.0], [2259.0, 4893.5], [2267.0, 4328.2], [2235.0, 4630.0], [2227.0, 4712.0], [539.0, 12361.0], [523.0, 6570.5], [525.0, 689.5], [533.0, 8846.0], [535.0, 4679.0], [537.0, 12087.0], [531.0, 15407.0], [527.0, 12137.0], [513.0, 12177.0], [517.0, 12415.5], [515.0, 12198.0], [519.0, 12333.0], [521.0, 14078.0], [571.0, 12542.0], [551.0, 7382.0], [549.0, 12127.0], [547.0, 12560.0], [545.0, 12229.0], [553.0, 6528.75], [557.0, 11997.0], [555.0, 12233.0], [559.0, 4588.0], [565.0, 7223.0], [563.0, 12906.0], [561.0, 12351.0], [575.0, 11942.0], [573.0, 12136.0], [569.0, 12305.0], [567.0, 12465.0], [605.0, 6404.0], [577.0, 6353.5], [587.0, 4979.333333333334], [585.0, 12142.5], [591.0, 12246.0], [589.0, 11985.5], [597.0, 6792.0], [599.0, 6700.0], [607.0, 12151.0], [603.0, 12293.0], [601.0, 12596.5], [583.0, 12053.0], [581.0, 12735.0], [579.0, 14265.0], [595.0, 12206.0], [593.0, 12168.0], [637.0, 7359.0], [613.0, 4019.2857142857147], [611.0, 1132.0], [609.0, 11761.0], [615.0, 6360.5], [619.0, 8153.0], [617.0, 11881.0], [621.0, 12006.0], [623.0, 12985.0], [627.0, 4623.0], [631.0, 11742.5], [629.0, 12225.0], [639.0, 12217.0], [625.0, 12564.0], [635.0, 12484.0], [633.0, 11690.0], [647.0, 6440.0], [655.0, 6617.5], [645.0, 11645.0], [643.0, 12207.0], [661.0, 6454.5], [669.0, 3820.75], [667.0, 11464.0], [665.0, 11417.0], [663.0, 12541.5], [657.0, 13804.0], [651.0, 11715.0], [649.0, 11602.0], [701.0, 4534.0], [689.0, 4525.666666666666], [699.0, 6380.5], [703.0, 11401.0], [697.0, 12852.0], [695.0, 11401.0], [693.0, 12138.5], [691.0, 11550.0], [687.0, 11421.0], [675.0, 11592.0], [673.0, 11433.0], [679.0, 11421.0], [677.0, 11502.0], [685.0, 12089.0], [683.0, 11619.0], [681.0, 11507.0], [733.0, 11674.0], [709.0, 6503.0], [715.0, 6303.0], [707.0, 11289.0], [705.0, 11297.0], [713.0, 11854.0], [731.0, 6362.5], [735.0, 11374.0], [729.0, 12033.0], [711.0, 11566.0], [727.0, 12251.0], [723.0, 12564.0], [721.0, 11149.0], [765.0, 11911.0], [745.0, 4019.0], [747.0, 4709.333333333334], [763.0, 6414.75], [767.0, 11365.0], [761.0, 11350.0], [751.0, 11943.0], [743.0, 11240.0], [741.0, 11519.0], [739.0, 11688.0], [737.0, 11212.0], [749.0, 11069.0], [759.0, 11043.0], [757.0, 11031.0], [755.0, 11096.0], [753.0, 11457.0], [799.0, 6370.0], [775.0, 4548.666666666666], [793.0, 4674.666666666666], [773.0, 6267.0], [771.0, 10954.0], [769.0, 11077.0], [783.0, 6283.5], [781.0, 10939.0], [779.0, 11355.0], [777.0, 11328.5], [791.0, 6313.0], [789.0, 10950.0], [787.0, 11484.0], [785.0, 11785.0], [795.0, 4475.333333333334], [797.0, 10826.0], [831.0, 11310.0], [825.0, 6250.5], [807.0, 10810.0], [805.0, 11039.0], [803.0, 10851.0], [801.0, 11125.0], [827.0, 6170.0], [829.0, 6431.0], [823.0, 10786.0], [821.0, 11045.0], [819.0, 11044.0], [817.0, 10955.0], [815.0, 11239.0], [813.0, 10867.0], [811.0, 11019.0], [809.0, 10985.0], [861.0, 10793.0], [847.0, 4682.0], [837.0, 6014.5], [835.0, 11239.0], [833.0, 10713.0], [839.0, 12049.0], [845.0, 4923.0], [843.0, 11399.0], [841.0, 10813.0], [863.0, 10647.0], [849.0, 10699.0], [859.0, 10821.0], [857.0, 10683.0], [855.0, 11611.0], [853.0, 11750.0], [893.0, 10569.0], [873.0, 7677.333333333333], [875.0, 10935.5], [877.0, 6035.5], [889.0, 6167.0], [871.0, 11292.0], [869.0, 12686.0], [867.0, 13772.0], [865.0, 10789.0], [895.0, 10742.0], [891.0, 10543.0], [887.0, 10723.0], [885.0, 10965.0], [883.0, 13315.0], [881.0, 11309.0], [901.0, 10488.0], [921.0, 10466.5], [911.0, 4719.333333333334], [913.0, 10788.0], [915.0, 10457.0], [919.0, 10462.0], [909.0, 10690.0], [907.0, 10508.0], [903.0, 10506.0], [899.0, 11010.0], [897.0, 10773.0], [923.0, 10403.0], [927.0, 6553.5], [925.0, 10670.0], [929.0, 10396.0], [931.0, 6366.5], [943.0, 6201.0], [933.0, 10359.0], [935.0, 6173.0], [937.0, 7976.666666666667], [939.0, 10370.0], [941.0, 11002.0], [945.0, 6103.0], [947.0, 10976.0], [949.0, 10668.0], [951.0, 10883.0], [959.0, 6016.0], [957.0, 10475.0], [955.0, 10371.0], [953.0, 11213.0], [963.0, 5315.2], [987.0, 7698.666666666667], [961.0, 6147.0], [975.0, 10204.0], [973.0, 11472.0], [965.0, 10156.0], [985.0, 5833.5], [971.0, 3451.8], [969.0, 11357.0], [991.0, 10807.5], [979.0, 11240.0], [981.0, 10307.0], [983.0, 11427.0], [989.0, 10155.0], [997.0, 4001.0], [1021.0, 9951.0], [995.0, 10328.0], [1005.0, 9967.0], [1003.0, 10331.0], [1001.0, 10098.0], [1011.0, 6166.5], [1009.0, 9960.0], [1013.0, 10110.0], [1015.0, 9953.0], [1023.0, 10208.0], [1019.0, 11190.0], [999.0, 10106.0], [1054.0, 9854.0], [1038.0, 1788.0], [1042.0, 9920.0], [1046.0, 9831.0], [1050.0, 10373.0], [1026.0, 10055.5], [1030.0, 11238.0], [1034.0, 10142.0], [1058.0, 10203.0], [1062.0, 11043.0], [1082.0, 10093.0], [1078.0, 11205.0], [1074.0, 6101.5], [1070.0, 9700.0], [1066.0, 5896.5], [1098.0, 9823.0], [1102.0, 4418.571428571428], [1138.0, 9449.0], [1150.0, 4507.333333333334], [1146.0, 10310.0], [1106.0, 10837.0], [1110.0, 9751.0], [1090.0, 11233.0], [1094.0, 9635.0], [1114.0, 9579.0], [1134.0, 2171.6666666666665], [1130.0, 9910.0], [1126.0, 9553.0], [1166.0, 5660.0], [1162.0, 6021.5], [1158.0, 9767.0], [1182.0, 9460.0], [1202.0, 9543.0], [1206.0, 9328.0], [1214.0, 9776.0], [1210.0, 9198.0], [1190.0, 9332.0], [1194.0, 10269.0], [1198.0, 9263.0], [1178.0, 4720.666666666666], [1174.0, 9447.0], [1170.0, 9973.0], [1230.0, 9137.0], [1222.0, 4813.0], [1218.0, 9564.5], [1226.0, 9139.0], [1246.0, 9022.0], [1270.0, 11000.0], [1266.0, 10040.0], [1274.0, 9499.5], [1278.0, 9206.0], [1250.0, 9511.0], [1254.0, 9150.0], [1234.0, 6120.0], [1242.0, 4135.0], [1258.0, 10166.0], [1262.0, 10368.0], [1342.0, 9123.0], [1290.0, 5597.5], [1330.0, 8631.0], [1294.0, 10486.0], [1318.0, 8848.0], [1314.0, 9278.0], [1338.0, 8601.0], [1334.0, 6881.333333333333], [1326.0, 5456.5], [1322.0, 9253.0], [1298.0, 5151.0], [1306.0, 6635.0], [1302.0, 8772.0], [1310.0, 8933.0], [1282.0, 8806.0], [1354.0, 8909.0], [1346.0, 5588.5], [1358.0, 8461.0], [1350.0, 8531.0], [1398.0, 8491.0], [1366.0, 8459.0], [1370.0, 8585.5], [1374.0, 8384.0], [1382.0, 8800.0], [1386.0, 8328.0], [1390.0, 8505.0], [1378.0, 5726.5], [1406.0, 8421.0], [1402.0, 8262.0], [1422.0, 8193.0], [1470.0, 8742.0], [1410.0, 5420.5], [1466.0, 5340.5], [1414.0, 8430.0], [1418.0, 8535.0], [1458.0, 9055.0], [1462.0, 8373.0], [1430.0, 5711.0], [1426.0, 9628.5], [1434.0, 8256.0], [1438.0, 8255.0], [1450.0, 4792.0], [1454.0, 8059.0], [1442.0, 8875.0], [1446.0, 8292.0], [1486.0, 8269.5], [1482.0, 5769.0], [1478.0, 5264.5], [1474.0, 8162.0], [1522.0, 8445.0], [1526.0, 8360.0], [1530.0, 7640.0], [1534.0, 7708.0], [1494.0, 5008.666666666667], [1490.0, 7935.0], [1502.0, 2627.0], [1506.0, 7776.0], [1510.0, 8400.0], [1518.0, 7955.0], [1514.0, 8983.0], [1550.0, 7709.0], [1538.0, 5172.5], [1542.0, 8297.0], [1546.0, 5332.0], [1586.0, 7630.0], [1590.0, 7635.0], [1594.0, 7987.0], [1598.0, 8667.0], [1578.0, 7568.0], [1574.0, 7469.0], [1570.0, 8301.0], [1582.0, 8137.0], [1558.0, 8492.0], [1562.0, 7982.0], [1566.0, 5677.5], [1614.0, 7363.0], [1610.0, 4084.6], [1602.0, 4604.666666666667], [1606.0, 7360.0], [1626.0, 8170.0], [1622.0, 7341.0], [1650.0, 8002.0], [1654.0, 7307.0], [1658.0, 7212.0], [1634.0, 7255.0], [1638.0, 3208.5], [1642.0, 5317.5], [1646.0, 7849.0], [1722.0, 5225.5], [1678.0, 5159.5], [1666.0, 7466.0], [1674.0, 8780.0], [1726.0, 7923.5], [1714.0, 5194.5], [1718.0, 7220.0], [1710.0, 5163.0], [1706.0, 7706.0], [1702.0, 5594.0], [1698.0, 5109.5], [1682.0, 5107.0], [1690.0, 7164.0], [1686.0, 7074.0], [1694.0, 7154.0], [1734.0, 5291.5], [1738.0, 5549.5], [1750.0, 6734.0], [1746.0, 6809.0], [1754.0, 7492.0], [1730.0, 6825.0], [1758.0, 7187.5], [1742.0, 6805.0], [1778.0, 5873.0], [1782.0, 4657.333333333333], [1786.0, 5376.5], [1766.0, 4665.666666666667], [1774.0, 5110.0], [1770.0, 6943.0], [1762.0, 6688.0], [1790.0, 6838.0], [1798.0, 6967.0], [1802.0, 5450.0], [1822.0, 6577.0], [1794.0, 6521.0], [1806.0, 5261.5], [1846.0, 6582.0], [1842.0, 6521.0], [1818.0, 4565.4], [1814.0, 6607.0], [1810.0, 6897.0], [1830.0, 7387.0], [1826.0, 6419.0], [1834.0, 6362.0], [1838.0, 6909.0], [1854.0, 6868.0], [1850.0, 7236.0], [1906.0, 6908.0], [1858.0, 5058.5], [1910.0, 6247.0], [1870.0, 6361.0], [1866.0, 7179.0], [1862.0, 6246.0], [1914.0, 6118.5], [1898.0, 5196.0], [1894.0, 6487.0], [1890.0, 6162.0], [1902.0, 6667.0], [1878.0, 4856.0], [1874.0, 6619.0], [1882.0, 4231.75], [1886.0, 7067.0], [1950.0, 5884.0], [1970.0, 4679.0], [1934.0, 4454.5], [1938.0, 4792.0], [1942.0, 6265.0], [1946.0, 5901.0], [1922.0, 6530.0], [1926.0, 6252.0], [1930.0, 6039.0], [1954.0, 7144.0], [1958.0, 5923.0], [1966.0, 6748.0], [1974.0, 6177.0], [1982.0, 6158.0], [1978.0, 6079.0], [1990.0, 5657.0], [1998.0, 4300.666666666667], [2006.0, 4867.5], [2014.0, 6374.0], [1986.0, 5722.0], [1994.0, 5751.0], [2010.0, 6207.0], [2042.0, 5569.0], [2038.0, 5573.0], [2034.0, 5950.0], [2018.0, 5228.5], [2026.0, 4608.0], [2022.0, 5768.0], [2030.0, 6056.0], [2002.0, 5137.0], [2068.0, 5347.0], [2148.0, 5302.0], [2052.0, 4728.5], [2108.0, 5155.0], [2060.0, 5421.0], [2076.0, 5584.0], [2156.0, 4425.0], [2116.0, 5249.0], [2124.0, 5310.0], [2164.0, 5081.0], [2132.0, 4414.6], [2140.0, 5147.0], [2092.0, 5252.5], [2188.0, 6124.0], [2284.0, 5247.0], [2180.0, 4754.0], [2196.0, 4855.0], [2204.0, 4669.0], [2276.0, 5382.0], [2212.0, 4822.0], [2228.0, 4574.0], [2220.0, 4931.0], [2236.0, 4470.0], [2244.0, 4484.0], [2252.0, 4921.0], [2260.0, 4348.0], [2268.0, 4633.25], [2069.0, 4870.0], [2077.0, 3847.0], [2061.0, 4873.0], [2053.0, 5437.0], [2101.0, 5111.5], [2109.0, 5176.0], [2149.0, 5225.0], [2157.0, 4448.166666666666], [2173.0, 4718.75], [2165.0, 5354.0], [2117.0, 5219.0], [2125.0, 5137.0], [2133.0, 4973.0], [2141.0, 5259.0], [2085.0, 5319.5], [2093.0, 5230.0], [2205.0, 4681.0], [2181.0, 6133.0], [2189.0, 5049.0], [2197.0, 5763.0], [2277.0, 4239.0], [2213.0, 4792.0], [2221.0, 4649.0], [2245.0, 4489.0], [2253.0, 4692.0], [2261.0, 4270.5], [2269.0, 4726.0], [2237.0, 4474.0], [2229.0, 5285.0], [1035.0, 10159.0], [1027.0, 1966.75], [1039.0, 6088.75], [1031.0, 9955.0], [1043.0, 6498.5], [1047.0, 11808.0], [1055.0, 10988.0], [1059.0, 10531.0], [1063.0, 11198.0], [1087.0, 9861.0], [1083.0, 9995.0], [1079.0, 9693.0], [1067.0, 5776.0], [1091.0, 9768.0], [1139.0, 5897.5], [1119.0, 9488.0], [1095.0, 9642.0], [1115.0, 10397.0], [1111.0, 9673.0], [1107.0, 9611.0], [1103.0, 4079.0], [1147.0, 2487.0], [1143.0, 9694.5], [1151.0, 9987.0], [1123.0, 9735.0], [1099.0, 9801.0], [1131.0, 9589.0], [1135.0, 4546.333333333334], [1203.0, 10697.0], [1155.0, 8544.666666666666], [1163.0, 3265.5], [1167.0, 9364.0], [1207.0, 9903.0], [1211.0, 5940.0], [1187.0, 9774.0], [1195.0, 6224.0], [1199.0, 9698.0], [1191.0, 3897.75], [1179.0, 9932.0], [1175.0, 9965.0], [1171.0, 9534.0], [1183.0, 9396.0], [1223.0, 6119.0], [1255.0, 5714.0], [1219.0, 9516.0], [1227.0, 9148.0], [1247.0, 9283.0], [1243.0, 9595.0], [1239.0, 9229.0], [1235.0, 9601.0], [1231.0, 9673.0], [1267.0, 9572.0], [1259.0, 9445.0], [1263.0, 10136.0], [1279.0, 9409.0], [1251.0, 9516.0], [1275.0, 8884.0], [1271.0, 8875.0], [1331.0, 8577.0], [1299.0, 5625.5], [1287.0, 7268.0], [1335.0, 9041.0], [1295.0, 8883.0], [1291.0, 10579.0], [1343.0, 8668.0], [1315.0, 8862.0], [1319.0, 9767.0], [1323.0, 9543.0], [1339.0, 8593.0], [1327.0, 5734.0], [1307.0, 8810.0], [1303.0, 9619.0], [1311.0, 8798.0], [1351.0, 9837.0], [1347.0, 8551.0], [1355.0, 9215.0], [1359.0, 8475.0], [1375.0, 8409.0], [1371.0, 8502.0], [1367.0, 3140.0], [1363.0, 9390.5], [1391.0, 5732.0], [1383.0, 8999.0], [1379.0, 4569.333333333333], [1403.0, 5647.5], [1399.0, 8262.0], [1395.0, 9193.5], [1407.0, 8541.0], [1411.0, 5359.5], [1415.0, 8294.0], [1423.0, 8237.0], [1459.0, 8023.0], [1467.0, 5416.0], [1463.0, 8583.0], [1427.0, 8320.0], [1431.0, 8211.0], [1435.0, 8172.0], [1439.0, 8179.0], [1471.0, 7997.0], [1443.0, 5791.5], [1455.0, 5745.5], [1451.0, 8917.0], [1447.0, 8134.0], [1475.0, 8290.0], [1479.0, 8340.0], [1503.0, 7966.5], [1499.0, 7884.5], [1495.0, 7910.0], [1491.0, 8983.0], [1483.0, 4578.0], [1487.0, 7946.0], [1531.0, 7695.0], [1527.0, 8583.0], [1523.0, 8595.0], [1519.0, 4766.333333333333], [1511.0, 5422.0], [1515.0, 7834.0], [1507.0, 6346.0], [1535.0, 8094.0], [1547.0, 7684.0], [1543.0, 7606.0], [1551.0, 4397.0], [1571.0, 5990.0], [1579.0, 4122.0], [1575.0, 8571.0], [1583.0, 7471.0], [1567.0, 5180.0], [1563.0, 7535.0], [1559.0, 7849.0], [1555.0, 8256.5], [1599.0, 8217.0], [1595.0, 7400.0], [1591.0, 7397.0], [1587.0, 8575.0], [1611.0, 4594.333333333333], [1607.0, 5564.0], [1631.0, 7398.0], [1627.0, 7316.0], [1623.0, 7634.0], [1619.0, 8080.0], [1651.0, 7221.0], [1655.0, 4860.666666666667], [1663.0, 7777.0], [1635.0, 7517.0], [1639.0, 7372.0], [1643.0, 4361.25], [1647.0, 7426.0], [1675.0, 8245.0], [1679.0, 5106.0], [1667.0, 5899.5], [1695.0, 7170.0], [1671.0, 7219.0], [1699.0, 4256.0], [1727.0, 6877.0], [1723.0, 8259.0], [1719.0, 6937.0], [1715.0, 6848.0], [1703.0, 5157.0], [1707.0, 7130.0], [1711.0, 6920.0], [1683.0, 7774.0], [1687.0, 8300.0], [1691.0, 7068.0], [1739.0, 6805.0], [1735.0, 4090.6], [1731.0, 3163.0], [1759.0, 3872.0], [1755.0, 6733.0], [1751.0, 7149.0], [1743.0, 7321.0], [1779.0, 7308.0], [1783.0, 4970.0], [1787.0, 6676.0], [1763.0, 6866.0], [1791.0, 6608.0], [1771.0, 4298.0], [1767.0, 7477.0], [1775.0, 6884.0], [1747.0, 5548.5], [1795.0, 7712.0], [1847.0, 4508.0], [1843.0, 6345.0], [1823.0, 6554.0], [1799.0, 6617.0], [1803.0, 6932.0], [1815.0, 6442.0], [1811.0, 6908.0], [1819.0, 5012.5], [1835.0, 6371.0], [1831.0, 6497.0], [1827.0, 7167.0], [1839.0, 7106.0], [1855.0, 6401.0], [1851.0, 6313.0], [1871.0, 7769.0], [1911.0, 4747.0], [1859.0, 4983.0], [1887.0, 6160.0], [1867.0, 6846.0], [1863.0, 6273.0], [1907.0, 6530.0], [1903.0, 3615.0], [1895.0, 6916.0], [1891.0, 6232.0], [1899.0, 6102.0], [1919.0, 6119.0], [1875.0, 5452.5], [1879.0, 5260.0], [1883.0, 3379.0], [1927.0, 7175.0], [1923.0, 6077.0], [1931.0, 6289.0], [1951.0, 5986.0], [1947.0, 7857.0], [1943.0, 7384.0], [1939.0, 6044.0], [1967.0, 5115.0], [1963.0, 6453.0], [1959.0, 7023.0], [1955.0, 6129.0], [1971.0, 6054.0], [1935.0, 6076.0], [1975.0, 6741.0], [1983.0, 5856.0], [1979.0, 5803.0], [1999.0, 4949.666666666667], [1991.0, 3602.0], [1987.0, 6705.0], [1995.0, 4709.0], [2035.0, 5045.5], [2039.0, 5882.0], [2043.0, 6177.0], [2047.0, 5940.5], [2019.0, 6493.0], [2023.0, 5953.0], [2027.0, 3684.5], [2031.0, 6488.0], [2003.0, 3893.0], [2007.0, 6194.0], [2011.0, 5839.0], [2015.0, 5932.0], [2078.0, 5774.0], [2110.0, 5343.0], [2054.0, 5676.0], [2062.0, 5637.0], [2150.0, 4964.0], [2158.0, 4690.5], [2174.0, 6599.0], [2118.0, 5415.0], [2126.0, 5955.0], [2166.0, 5015.0], [2142.0, 5798.0], [2134.0, 5217.0], [2086.0, 5613.0], [2094.0, 5326.0], [2102.0, 5036.666666666667], [2190.0, 6426.0], [2182.0, 4777.0], [2206.0, 5676.0], [2286.0, 5144.0], [2278.0, 4242.0], [2214.0, 4329.333333333333], [2230.0, 5444.0], [2222.0, 5247.0], [2238.0, 4471.0], [2246.0, 4418.0], [2262.0, 4344.0], [2270.0, 4606.0], [2071.0, 5644.0], [2055.0, 4952.5], [2103.0, 5340.0], [2111.0, 5203.0], [2063.0, 6635.0], [2079.0, 5100.5], [2159.0, 4714.333333333333], [2167.0, 5151.0], [2175.0, 5340.0], [2119.0, 5936.0], [2127.0, 5973.0], [2135.0, 5712.0], [2143.0, 4972.0], [2087.0, 5314.0], [2095.0, 4906.0], [2207.0, 6046.0], [2183.0, 4770.0], [2191.0, 5137.0], [2199.0, 5323.0], [2287.0, 4885.0], [2279.0, 4455.0], [2215.0, 4496.5], [2247.0, 4859.0], [2255.0, 4562.0], [2263.0, 4344.0], [2271.0, 5029.0], [2239.0, 4894.666666666667], [2231.0, 5204.0], [2223.0, 5247.0], [1.0, 2890.4]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[917.7613096725834, 6092.084228942767]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2291.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 42001.0, "minX": 1.699974851E12, "maxY": 236825.0, "series": [{"data": [[1.69997487E12, 72192.0], [1.699974872E12, 68890.0], [1.699974871E12, 77801.0], [1.699974852E12, 236825.0], [1.699974873E12, 72664.0], [1.699974851E12, 82873.0], [1.699974853E12, 137301.0], [1.699974854E12, 60981.0], [1.699974856E12, 65148.0], [1.699974855E12, 67516.0], [1.699974857E12, 67009.0], [1.699974858E12, 68931.0], [1.69997486E12, 65591.0], [1.699974859E12, 68435.0], [1.699974861E12, 71274.0], [1.699974862E12, 77293.0], [1.699974864E12, 66085.0], [1.699974863E12, 75524.0], [1.699974865E12, 71693.0], [1.699974866E12, 76876.0], [1.699974868E12, 77812.0], [1.699974867E12, 74966.0], [1.699974869E12, 71228.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69997487E12, 49708.0], [1.699974872E12, 47428.0], [1.699974871E12, 53565.0], [1.699974852E12, 163310.0], [1.699974873E12, 50034.0], [1.699974851E12, 57208.0], [1.699974853E12, 94523.0], [1.699974854E12, 42001.0], [1.699974856E12, 44854.0], [1.699974855E12, 46492.0], [1.699974857E12, 46131.0], [1.699974858E12, 47469.0], [1.69997486E12, 45151.0], [1.699974859E12, 47119.0], [1.699974861E12, 49082.0], [1.699974862E12, 53203.0], [1.699974864E12, 45499.0], [1.699974863E12, 52018.0], [1.699974865E12, 49355.0], [1.699974866E12, 52932.0], [1.699974868E12, 53576.0], [1.699974867E12, 51606.0], [1.699974869E12, 49036.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699974873E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 8.079051383399204, "minX": 1.699974851E12, "maxY": 14608.619354838704, "series": [{"data": [[1.69997487E12, 12491.038961038963], [1.699974872E12, 13780.931972789112], [1.699974871E12, 13007.740963855422], [1.699974852E12, 8.079051383399204], [1.699974873E12, 14608.619354838704], [1.699974851E12, 21.15819209039549], [1.699974853E12, 80.3174061433447], [1.699974854E12, 897.9923076923078], [1.699974856E12, 2541.9280575539547], [1.699974855E12, 1775.729166666666], [1.699974857E12, 3386.4475524475524], [1.699974858E12, 4014.7210884353753], [1.69997486E12, 5568.864285714288], [1.699974859E12, 4826.280821917807], [1.699974861E12, 6185.809210526318], [1.699974862E12, 6926.187878787878], [1.699974864E12, 8256.205673758866], [1.699974863E12, 7583.26086956522], [1.699974865E12, 8924.725490196082], [1.699974866E12, 9630.500000000004], [1.699974868E12, 11056.114457831321], [1.699974867E12, 10371.456250000007], [1.699974869E12, 11696.197368421053]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699974873E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 8.039525691699602, "minX": 1.699974851E12, "maxY": 14608.57419354839, "series": [{"data": [[1.69997487E12, 12490.941558441553], [1.699974872E12, 13780.76870748299], [1.699974871E12, 13007.650602409642], [1.699974852E12, 8.039525691699602], [1.699974873E12, 14608.57419354839], [1.699974851E12, 20.531073446327664], [1.699974853E12, 80.25255972696245], [1.699974854E12, 897.9538461538458], [1.699974856E12, 2541.8705035971207], [1.699974855E12, 1775.673611111111], [1.699974857E12, 3386.391608391607], [1.699974858E12, 4014.659863945579], [1.69997486E12, 5568.77857142857], [1.699974859E12, 4826.219178082191], [1.699974861E12, 6185.697368421052], [1.699974862E12, 6926.133333333333], [1.699974864E12, 8256.134751773046], [1.699974863E12, 7583.211180124224], [1.699974865E12, 8924.666666666668], [1.699974866E12, 9630.414634146342], [1.699974868E12, 11056.072289156631], [1.699974867E12, 10371.374999999996], [1.699974869E12, 11696.098684210529]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699974873E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.5180722891566268, "minX": 1.699974851E12, "maxY": 5.59322033898305, "series": [{"data": [[1.69997487E12, 0.7077922077922076], [1.699974872E12, 0.5782312925170067], [1.699974871E12, 0.5180722891566268], [1.699974852E12, 1.4505928853754937], [1.699974873E12, 0.5999999999999994], [1.699974851E12, 5.59322033898305], [1.699974853E12, 1.3583617747440278], [1.699974854E12, 1.1076923076923073], [1.699974856E12, 1.7122302158273381], [1.699974855E12, 1.729166666666667], [1.699974857E12, 1.4125874125874134], [1.699974858E12, 0.9455782312925173], [1.69997486E12, 0.8499999999999998], [1.699974859E12, 1.0547945205479454], [1.699974861E12, 1.1447368421052635], [1.699974862E12, 0.9636363636363638], [1.699974864E12, 1.113475177304965], [1.699974863E12, 0.7826086956521738], [1.699974865E12, 0.8300653594771238], [1.699974866E12, 1.0853658536585362], [1.699974868E12, 0.5542168674698792], [1.699974867E12, 1.0000000000000007], [1.699974869E12, 0.7828947368421053]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699974873E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.699974851E12, "maxY": 17240.0, "series": [{"data": [[1.69997487E12, 15407.0], [1.699974872E12, 15891.0], [1.699974871E12, 14285.0], [1.699974852E12, 35.0], [1.699974873E12, 17240.0], [1.699974851E12, 112.0], [1.699974853E12, 571.0], [1.699974854E12, 1564.0], [1.699974856E12, 3394.0], [1.699974855E12, 2492.0], [1.699974857E12, 4482.0], [1.699974858E12, 5530.0], [1.69997486E12, 6981.0], [1.699974859E12, 6577.0], [1.699974861E12, 8457.0], [1.699974862E12, 9542.0], [1.699974864E12, 11055.0], [1.699974863E12, 9411.0], [1.699974865E12, 11000.0], [1.699974866E12, 12449.0], [1.699974868E12, 13772.0], [1.699974867E12, 12719.0], [1.699974869E12, 13804.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69997487E12, 13337.0], [1.699974872E12, 14551.4], [1.699974871E12, 13553.4], [1.699974852E12, 11.0], [1.699974873E12, 15201.0], [1.699974851E12, 63.20000000000002], [1.699974853E12, 248.0], [1.699974854E12, 1284.5], [1.699974856E12, 2985.0], [1.699974855E12, 2316.0], [1.699974857E12, 4073.4], [1.699974858E12, 4608.800000000001], [1.69997486E12, 6202.2], [1.699974859E12, 5639.7], [1.699974861E12, 6956.600000000001], [1.699974862E12, 7652.6], [1.699974864E12, 8928.2], [1.699974863E12, 8323.8], [1.699974865E12, 9679.599999999999], [1.699974866E12, 10205.5], [1.699974868E12, 11789.2], [1.699974867E12, 11197.2], [1.699974869E12, 12410.900000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69997487E12, 14778.899999999987], [1.699974872E12, 15645.240000000005], [1.699974871E12, 14260.880000000001], [1.699974852E12, 18.0], [1.699974873E12, 17160.48], [1.699974851E12, 107.32], [1.699974853E12, 550.84], [1.699974854E12, 1562.1399999999999], [1.699974856E12, 3392.8], [1.699974855E12, 2489.75], [1.699974857E12, 4402.360000000001], [1.699974858E12, 5376.880000000003], [1.69997486E12, 6935.490000000001], [1.699974859E12, 6506.03], [1.699974861E12, 8182.99], [1.699974862E12, 9404.060000000001], [1.699974864E12, 10375.02000000002], [1.699974863E12, 9251.659999999998], [1.699974865E12, 10772.660000000003], [1.699974866E12, 11524.049999999992], [1.699974868E12, 13465.810000000005], [1.699974867E12, 12462.799999999994], [1.699974869E12, 13770.61]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69997487E12, 13593.5], [1.699974872E12, 14845.6], [1.699974871E12, 13836.2], [1.699974852E12, 14.0], [1.699974873E12, 15585.599999999999], [1.699974851E12, 79.19999999999999], [1.699974853E12, 349.30000000000035], [1.699974854E12, 1427.5499999999995], [1.699974856E12, 3100.0], [1.699974855E12, 2373.0], [1.699974857E12, 4196.599999999999], [1.699974858E12, 4922.799999999999], [1.69997486E12, 6614.95], [1.699974859E12, 5959.450000000001], [1.699974861E12, 7239.4], [1.699974862E12, 7812.599999999999], [1.699974864E12, 9053.9], [1.699974863E12, 8616.7], [1.699974865E12, 10150.699999999999], [1.699974866E12, 10484.5], [1.699974868E12, 12134.4], [1.699974867E12, 11469.75], [1.699974869E12, 12677.949999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.69997487E12, 11717.0], [1.699974872E12, 13057.0], [1.699974871E12, 12365.0], [1.699974852E12, 5.0], [1.699974873E12, 13865.0], [1.699974851E12, 6.0], [1.699974853E12, 5.0], [1.699974854E12, 387.0], [1.699974856E12, 1929.0], [1.699974855E12, 1198.0], [1.699974857E12, 2658.0], [1.699974858E12, 3368.0], [1.69997486E12, 4815.0], [1.699974859E12, 4090.0], [1.699974861E12, 5537.0], [1.699974862E12, 6175.0], [1.699974864E12, 7562.0], [1.699974863E12, 6848.0], [1.699974865E12, 8262.0], [1.699974866E12, 8947.0], [1.699974868E12, 10359.0], [1.699974867E12, 9598.0], [1.699974869E12, 10954.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69997487E12, 12346.0], [1.699974872E12, 13654.0], [1.699974871E12, 12950.0], [1.699974852E12, 7.0], [1.699974873E12, 14509.0], [1.699974851E12, 10.0], [1.699974853E12, 21.0], [1.699974854E12, 879.0], [1.699974856E12, 2549.0], [1.699974855E12, 1756.5], [1.699974857E12, 3308.0], [1.699974858E12, 3930.0], [1.69997486E12, 5461.5], [1.699974859E12, 4768.0], [1.699974861E12, 6058.0], [1.699974862E12, 6805.0], [1.699974864E12, 8199.0], [1.699974863E12, 7416.0], [1.699974865E12, 8810.0], [1.699974866E12, 9530.5], [1.699974868E12, 10905.0], [1.699974867E12, 10177.5], [1.699974869E12, 11581.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699974873E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 7.0, "minX": 130.0, "maxY": 14509.0, "series": [{"data": [[130.0, 879.0], [139.0, 2549.0], [143.0, 3308.0], [140.0, 5461.5], [141.0, 8199.0], [144.0, 1756.5], [147.0, 9293.5], [146.0, 4768.0], [152.0, 9705.5], [153.0, 8810.0], [154.0, 12346.0], [155.0, 14509.0], [165.0, 6805.0], [161.0, 7416.0], [164.0, 9530.5], [160.0, 10177.5], [166.0, 12392.5], [177.0, 10.0], [293.0, 21.0], [506.0, 7.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 506.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 7.0, "minX": 130.0, "maxY": 14509.0, "series": [{"data": [[130.0, 879.0], [139.0, 2549.0], [143.0, 3308.0], [140.0, 5461.0], [141.0, 8199.0], [144.0, 1756.5], [147.0, 9293.5], [146.0, 4768.0], [152.0, 9704.5], [153.0, 8809.0], [154.0, 12346.0], [155.0, 14509.0], [165.0, 6805.0], [161.0, 7416.0], [164.0, 9530.0], [160.0, 10177.0], [166.0, 12392.5], [177.0, 10.0], [293.0, 21.0], [506.0, 7.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 506.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 103.0, "minX": 1.699974851E12, "maxY": 709.0, "series": [{"data": [[1.699974859E12, 103.0], [1.699974852E12, 509.0], [1.699974851E12, 180.0], [1.699974853E12, 709.0], [1.699974854E12, 499.0], [1.699974856E12, 499.0], [1.699974855E12, 501.0], [1.699974857E12, 501.0], [1.699974858E12, 500.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699974859E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 130.0, "minX": 1.699974851E12, "maxY": 506.0, "series": [{"data": [[1.69997487E12, 154.0], [1.699974872E12, 147.0], [1.699974871E12, 166.0], [1.699974852E12, 506.0], [1.699974873E12, 155.0], [1.699974851E12, 177.0], [1.699974853E12, 293.0], [1.699974854E12, 130.0], [1.699974856E12, 139.0], [1.699974855E12, 144.0], [1.699974857E12, 143.0], [1.699974858E12, 147.0], [1.69997486E12, 140.0], [1.699974859E12, 146.0], [1.699974861E12, 152.0], [1.699974862E12, 165.0], [1.699974864E12, 141.0], [1.699974863E12, 161.0], [1.699974865E12, 153.0], [1.699974866E12, 164.0], [1.699974868E12, 166.0], [1.699974867E12, 160.0], [1.699974869E12, 152.0]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699974873E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 130.0, "minX": 1.699974851E12, "maxY": 506.0, "series": [{"data": [[1.69997487E12, 154.0], [1.699974872E12, 147.0], [1.699974871E12, 166.0], [1.699974852E12, 506.0], [1.699974873E12, 155.0], [1.699974851E12, 177.0], [1.699974853E12, 293.0], [1.699974854E12, 130.0], [1.699974856E12, 139.0], [1.699974855E12, 144.0], [1.699974857E12, 143.0], [1.699974858E12, 147.0], [1.69997486E12, 140.0], [1.699974859E12, 146.0], [1.699974861E12, 152.0], [1.699974862E12, 165.0], [1.699974864E12, 141.0], [1.699974863E12, 161.0], [1.699974865E12, 153.0], [1.699974866E12, 164.0], [1.699974868E12, 166.0], [1.699974867E12, 160.0], [1.699974869E12, 152.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699974873E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 130.0, "minX": 1.699974851E12, "maxY": 506.0, "series": [{"data": [[1.69997487E12, 154.0], [1.699974872E12, 147.0], [1.699974871E12, 166.0], [1.699974852E12, 506.0], [1.699974873E12, 155.0], [1.699974851E12, 177.0], [1.699974853E12, 293.0], [1.699974854E12, 130.0], [1.699974856E12, 139.0], [1.699974855E12, 144.0], [1.699974857E12, 143.0], [1.699974858E12, 147.0], [1.69997486E12, 140.0], [1.699974859E12, 146.0], [1.699974861E12, 152.0], [1.699974862E12, 165.0], [1.699974864E12, 141.0], [1.699974863E12, 161.0], [1.699974865E12, 153.0], [1.699974866E12, 164.0], [1.699974868E12, 166.0], [1.699974867E12, 160.0], [1.699974869E12, 152.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699974873E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

