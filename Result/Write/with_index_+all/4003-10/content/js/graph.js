/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 15914.0, "series": [{"data": [[0.0, 5.0], [0.1, 6.0], [0.2, 6.0], [0.3, 6.0], [0.4, 6.0], [0.5, 6.0], [0.6, 6.0], [0.7, 6.0], [0.8, 6.0], [0.9, 6.0], [1.0, 6.0], [1.1, 7.0], [1.2, 7.0], [1.3, 7.0], [1.4, 7.0], [1.5, 7.0], [1.6, 7.0], [1.7, 7.0], [1.8, 7.0], [1.9, 7.0], [2.0, 7.0], [2.1, 7.0], [2.2, 7.0], [2.3, 7.0], [2.4, 7.0], [2.5, 7.0], [2.6, 7.0], [2.7, 7.0], [2.8, 7.0], [2.9, 7.0], [3.0, 7.0], [3.1, 7.0], [3.2, 7.0], [3.3, 7.0], [3.4, 7.0], [3.5, 7.0], [3.6, 7.0], [3.7, 7.0], [3.8, 7.0], [3.9, 7.0], [4.0, 7.0], [4.1, 7.0], [4.2, 7.0], [4.3, 7.0], [4.4, 7.0], [4.5, 7.0], [4.6, 7.0], [4.7, 7.0], [4.8, 7.0], [4.9, 7.0], [5.0, 7.0], [5.1, 7.0], [5.2, 8.0], [5.3, 8.0], [5.4, 8.0], [5.5, 8.0], [5.6, 8.0], [5.7, 8.0], [5.8, 8.0], [5.9, 8.0], [6.0, 8.0], [6.1, 8.0], [6.2, 8.0], [6.3, 8.0], [6.4, 8.0], [6.5, 8.0], [6.6, 8.0], [6.7, 8.0], [6.8, 8.0], [6.9, 8.0], [7.0, 8.0], [7.1, 8.0], [7.2, 8.0], [7.3, 8.0], [7.4, 8.0], [7.5, 8.0], [7.6, 8.0], [7.7, 8.0], [7.8, 8.0], [7.9, 8.0], [8.0, 8.0], [8.1, 8.0], [8.2, 8.0], [8.3, 8.0], [8.4, 8.0], [8.5, 8.0], [8.6, 8.0], [8.7, 8.0], [8.8, 8.0], [8.9, 8.0], [9.0, 8.0], [9.1, 8.0], [9.2, 8.0], [9.3, 8.0], [9.4, 8.0], [9.5, 8.0], [9.6, 9.0], [9.7, 9.0], [9.8, 9.0], [9.9, 9.0], [10.0, 9.0], [10.1, 9.0], [10.2, 9.0], [10.3, 9.0], [10.4, 9.0], [10.5, 9.0], [10.6, 9.0], [10.7, 9.0], [10.8, 9.0], [10.9, 9.0], [11.0, 9.0], [11.1, 9.0], [11.2, 9.0], [11.3, 9.0], [11.4, 9.0], [11.5, 9.0], [11.6, 9.0], [11.7, 9.0], [11.8, 9.0], [11.9, 9.0], [12.0, 9.0], [12.1, 9.0], [12.2, 9.0], [12.3, 9.0], [12.4, 9.0], [12.5, 9.0], [12.6, 9.0], [12.7, 9.0], [12.8, 9.0], [12.9, 9.0], [13.0, 9.0], [13.1, 10.0], [13.2, 10.0], [13.3, 10.0], [13.4, 10.0], [13.5, 10.0], [13.6, 10.0], [13.7, 10.0], [13.8, 10.0], [13.9, 10.0], [14.0, 10.0], [14.1, 10.0], [14.2, 10.0], [14.3, 10.0], [14.4, 10.0], [14.5, 10.0], [14.6, 10.0], [14.7, 10.0], [14.8, 10.0], [14.9, 10.0], [15.0, 10.0], [15.1, 10.0], [15.2, 10.0], [15.3, 10.0], [15.4, 10.0], [15.5, 11.0], [15.6, 11.0], [15.7, 11.0], [15.8, 11.0], [15.9, 11.0], [16.0, 11.0], [16.1, 11.0], [16.2, 11.0], [16.3, 11.0], [16.4, 11.0], [16.5, 11.0], [16.6, 11.0], [16.7, 11.0], [16.8, 11.0], [16.9, 11.0], [17.0, 11.0], [17.1, 11.0], [17.2, 12.0], [17.3, 12.0], [17.4, 12.0], [17.5, 12.0], [17.6, 12.0], [17.7, 12.0], [17.8, 12.0], [17.9, 12.0], [18.0, 13.0], [18.1, 13.0], [18.2, 13.0], [18.3, 13.0], [18.4, 13.0], [18.5, 13.0], [18.6, 13.0], [18.7, 14.0], [18.8, 14.0], [18.9, 14.0], [19.0, 14.0], [19.1, 15.0], [19.2, 15.0], [19.3, 16.0], [19.4, 16.0], [19.5, 17.0], [19.6, 17.0], [19.7, 18.0], [19.8, 18.0], [19.9, 19.0], [20.0, 19.0], [20.1, 21.0], [20.2, 21.0], [20.3, 23.0], [20.4, 25.0], [20.5, 27.0], [20.6, 28.0], [20.7, 29.0], [20.8, 32.0], [20.9, 34.0], [21.0, 36.0], [21.1, 39.0], [21.2, 40.0], [21.3, 41.0], [21.4, 43.0], [21.5, 45.0], [21.6, 46.0], [21.7, 49.0], [21.8, 51.0], [21.9, 52.0], [22.0, 55.0], [22.1, 59.0], [22.2, 62.0], [22.3, 67.0], [22.4, 68.0], [22.5, 71.0], [22.6, 75.0], [22.7, 78.0], [22.8, 79.0], [22.9, 81.0], [23.0, 85.0], [23.1, 92.0], [23.2, 94.0], [23.3, 98.0], [23.4, 101.0], [23.5, 104.0], [23.6, 111.0], [23.7, 115.0], [23.8, 123.0], [23.9, 138.0], [24.0, 151.0], [24.1, 162.0], [24.2, 169.0], [24.3, 182.0], [24.4, 192.0], [24.5, 220.0], [24.6, 251.0], [24.7, 263.0], [24.8, 266.0], [24.9, 282.0], [25.0, 357.0], [25.1, 378.0], [25.2, 432.0], [25.3, 447.0], [25.4, 453.0], [25.5, 473.0], [25.6, 492.0], [25.7, 516.0], [25.8, 563.0], [25.9, 602.0], [26.0, 608.0], [26.1, 672.0], [26.2, 683.0], [26.3, 716.0], [26.4, 745.0], [26.5, 786.0], [26.6, 837.0], [26.7, 849.0], [26.8, 877.0], [26.9, 885.0], [27.0, 896.0], [27.1, 918.0], [27.2, 937.0], [27.3, 963.0], [27.4, 995.0], [27.5, 1028.0], [27.6, 1082.0], [27.7, 1090.0], [27.8, 1103.0], [27.9, 1116.0], [28.0, 1135.0], [28.1, 1152.0], [28.2, 1158.0], [28.3, 1197.0], [28.4, 1224.0], [28.5, 1243.0], [28.6, 1253.0], [28.7, 1287.0], [28.8, 1292.0], [28.9, 1298.0], [29.0, 1340.0], [29.1, 1369.0], [29.2, 1401.0], [29.3, 1421.0], [29.4, 1444.0], [29.5, 1476.0], [29.6, 1502.0], [29.7, 1522.0], [29.8, 1547.0], [29.9, 1557.0], [30.0, 1599.0], [30.1, 1620.0], [30.2, 1639.0], [30.3, 1651.0], [30.4, 1682.0], [30.5, 1695.0], [30.6, 1713.0], [30.7, 1782.0], [30.8, 1820.0], [30.9, 1847.0], [31.0, 1861.0], [31.1, 1872.0], [31.2, 1888.0], [31.3, 1914.0], [31.4, 1939.0], [31.5, 1944.0], [31.6, 1958.0], [31.7, 1985.0], [31.8, 2015.0], [31.9, 2070.0], [32.0, 2078.0], [32.1, 2102.0], [32.2, 2141.0], [32.3, 2178.0], [32.4, 2189.0], [32.5, 2217.0], [32.6, 2233.0], [32.7, 2247.0], [32.8, 2287.0], [32.9, 2306.0], [33.0, 2322.0], [33.1, 2331.0], [33.2, 2348.0], [33.3, 2361.0], [33.4, 2390.0], [33.5, 2399.0], [33.6, 2412.0], [33.7, 2424.0], [33.8, 2436.0], [33.9, 2449.0], [34.0, 2468.0], [34.1, 2521.0], [34.2, 2547.0], [34.3, 2582.0], [34.4, 2620.0], [34.5, 2647.0], [34.6, 2657.0], [34.7, 2697.0], [34.8, 2715.0], [34.9, 2752.0], [35.0, 2789.0], [35.1, 2795.0], [35.2, 2805.0], [35.3, 2837.0], [35.4, 2856.0], [35.5, 2871.0], [35.6, 2881.0], [35.7, 2892.0], [35.8, 2900.0], [35.9, 2929.0], [36.0, 2943.0], [36.1, 2951.0], [36.2, 2967.0], [36.3, 2982.0], [36.4, 2988.0], [36.5, 3002.0], [36.6, 3013.0], [36.7, 3022.0], [36.8, 3052.0], [36.9, 3080.0], [37.0, 3111.0], [37.1, 3137.0], [37.2, 3161.0], [37.3, 3195.0], [37.4, 3228.0], [37.5, 3242.0], [37.6, 3253.0], [37.7, 3259.0], [37.8, 3288.0], [37.9, 3311.0], [38.0, 3322.0], [38.1, 3335.0], [38.2, 3350.0], [38.3, 3372.0], [38.4, 3394.0], [38.5, 3438.0], [38.6, 3456.0], [38.7, 3472.0], [38.8, 3475.0], [38.9, 3501.0], [39.0, 3518.0], [39.1, 3543.0], [39.2, 3561.0], [39.3, 3580.0], [39.4, 3597.0], [39.5, 3627.0], [39.6, 3645.0], [39.7, 3656.0], [39.8, 3674.0], [39.9, 3695.0], [40.0, 3712.0], [40.1, 3723.0], [40.2, 3754.0], [40.3, 3770.0], [40.4, 3791.0], [40.5, 3803.0], [40.6, 3829.0], [40.7, 3849.0], [40.8, 3861.0], [40.9, 3884.0], [41.0, 3891.0], [41.1, 3913.0], [41.2, 3936.0], [41.3, 3958.0], [41.4, 3974.0], [41.5, 3990.0], [41.6, 4020.0], [41.7, 4046.0], [41.8, 4062.0], [41.9, 4072.0], [42.0, 4108.0], [42.1, 4123.0], [42.2, 4126.0], [42.3, 4166.0], [42.4, 4197.0], [42.5, 4215.0], [42.6, 4223.0], [42.7, 4243.0], [42.8, 4257.0], [42.9, 4282.0], [43.0, 4295.0], [43.1, 4322.0], [43.2, 4338.0], [43.3, 4349.0], [43.4, 4367.0], [43.5, 4387.0], [43.6, 4410.0], [43.7, 4432.0], [43.8, 4456.0], [43.9, 4474.0], [44.0, 4502.0], [44.1, 4513.0], [44.2, 4522.0], [44.3, 4543.0], [44.4, 4567.0], [44.5, 4584.0], [44.6, 4620.0], [44.7, 4639.0], [44.8, 4643.0], [44.9, 4672.0], [45.0, 4705.0], [45.1, 4721.0], [45.2, 4742.0], [45.3, 4768.0], [45.4, 4820.0], [45.5, 4848.0], [45.6, 4858.0], [45.7, 4883.0], [45.8, 4889.0], [45.9, 4905.0], [46.0, 4911.0], [46.1, 4919.0], [46.2, 4941.0], [46.3, 4968.0], [46.4, 4977.0], [46.5, 4993.0], [46.6, 5018.0], [46.7, 5061.0], [46.8, 5078.0], [46.9, 5124.0], [47.0, 5148.0], [47.1, 5170.0], [47.2, 5191.0], [47.3, 5201.0], [47.4, 5219.0], [47.5, 5244.0], [47.6, 5259.0], [47.7, 5270.0], [47.8, 5283.0], [47.9, 5294.0], [48.0, 5324.0], [48.1, 5341.0], [48.2, 5357.0], [48.3, 5368.0], [48.4, 5407.0], [48.5, 5415.0], [48.6, 5430.0], [48.7, 5451.0], [48.8, 5468.0], [48.9, 5473.0], [49.0, 5511.0], [49.1, 5531.0], [49.2, 5546.0], [49.3, 5565.0], [49.4, 5567.0], [49.5, 5585.0], [49.6, 5601.0], [49.7, 5610.0], [49.8, 5628.0], [49.9, 5660.0], [50.0, 5666.0], [50.1, 5691.0], [50.2, 5714.0], [50.3, 5722.0], [50.4, 5747.0], [50.5, 5760.0], [50.6, 5781.0], [50.7, 5831.0], [50.8, 5844.0], [50.9, 5872.0], [51.0, 5905.0], [51.1, 5917.0], [51.2, 5948.0], [51.3, 5977.0], [51.4, 6006.0], [51.5, 6018.0], [51.6, 6039.0], [51.7, 6041.0], [51.8, 6049.0], [51.9, 6060.0], [52.0, 6079.0], [52.1, 6090.0], [52.2, 6104.0], [52.3, 6127.0], [52.4, 6132.0], [52.5, 6144.0], [52.6, 6203.0], [52.7, 6216.0], [52.8, 6228.0], [52.9, 6248.0], [53.0, 6265.0], [53.1, 6295.0], [53.2, 6316.0], [53.3, 6319.0], [53.4, 6325.0], [53.5, 6336.0], [53.6, 6355.0], [53.7, 6365.0], [53.8, 6388.0], [53.9, 6401.0], [54.0, 6430.0], [54.1, 6441.0], [54.2, 6449.0], [54.3, 6451.0], [54.4, 6461.0], [54.5, 6480.0], [54.6, 6501.0], [54.7, 6504.0], [54.8, 6514.0], [54.9, 6523.0], [55.0, 6539.0], [55.1, 6547.0], [55.2, 6566.0], [55.3, 6592.0], [55.4, 6625.0], [55.5, 6633.0], [55.6, 6656.0], [55.7, 6670.0], [55.8, 6685.0], [55.9, 6697.0], [56.0, 6703.0], [56.1, 6723.0], [56.2, 6744.0], [56.3, 6761.0], [56.4, 6780.0], [56.5, 6798.0], [56.6, 6809.0], [56.7, 6836.0], [56.8, 6848.0], [56.9, 6853.0], [57.0, 6889.0], [57.1, 6900.0], [57.2, 6918.0], [57.3, 6929.0], [57.4, 6940.0], [57.5, 6969.0], [57.6, 6978.0], [57.7, 6980.0], [57.8, 6996.0], [57.9, 7007.0], [58.0, 7037.0], [58.1, 7055.0], [58.2, 7075.0], [58.3, 7100.0], [58.4, 7106.0], [58.5, 7111.0], [58.6, 7133.0], [58.7, 7150.0], [58.8, 7175.0], [58.9, 7181.0], [59.0, 7190.0], [59.1, 7224.0], [59.2, 7244.0], [59.3, 7253.0], [59.4, 7272.0], [59.5, 7293.0], [59.6, 7320.0], [59.7, 7336.0], [59.8, 7357.0], [59.9, 7377.0], [60.0, 7397.0], [60.1, 7405.0], [60.2, 7418.0], [60.3, 7431.0], [60.4, 7455.0], [60.5, 7493.0], [60.6, 7512.0], [60.7, 7525.0], [60.8, 7534.0], [60.9, 7547.0], [61.0, 7558.0], [61.1, 7564.0], [61.2, 7577.0], [61.3, 7585.0], [61.4, 7618.0], [61.5, 7623.0], [61.6, 7634.0], [61.7, 7641.0], [61.8, 7673.0], [61.9, 7693.0], [62.0, 7703.0], [62.1, 7717.0], [62.2, 7768.0], [62.3, 7785.0], [62.4, 7810.0], [62.5, 7827.0], [62.6, 7850.0], [62.7, 7867.0], [62.8, 7901.0], [62.9, 7922.0], [63.0, 7943.0], [63.1, 7967.0], [63.2, 7975.0], [63.3, 7991.0], [63.4, 8010.0], [63.5, 8056.0], [63.6, 8076.0], [63.7, 8091.0], [63.8, 8128.0], [63.9, 8155.0], [64.0, 8167.0], [64.1, 8185.0], [64.2, 8198.0], [64.3, 8207.0], [64.4, 8225.0], [64.5, 8244.0], [64.6, 8252.0], [64.7, 8260.0], [64.8, 8290.0], [64.9, 8320.0], [65.0, 8341.0], [65.1, 8345.0], [65.2, 8377.0], [65.3, 8394.0], [65.4, 8424.0], [65.5, 8441.0], [65.6, 8457.0], [65.7, 8461.0], [65.8, 8470.0], [65.9, 8494.0], [66.0, 8499.0], [66.1, 8507.0], [66.2, 8529.0], [66.3, 8536.0], [66.4, 8555.0], [66.5, 8568.0], [66.6, 8580.0], [66.7, 8598.0], [66.8, 8623.0], [66.9, 8658.0], [67.0, 8674.0], [67.1, 8684.0], [67.2, 8703.0], [67.3, 8726.0], [67.4, 8734.0], [67.5, 8756.0], [67.6, 8777.0], [67.7, 8808.0], [67.8, 8818.0], [67.9, 8831.0], [68.0, 8858.0], [68.1, 8883.0], [68.2, 8897.0], [68.3, 8929.0], [68.4, 8954.0], [68.5, 8976.0], [68.6, 9005.0], [68.7, 9039.0], [68.8, 9070.0], [68.9, 9080.0], [69.0, 9092.0], [69.1, 9112.0], [69.2, 9158.0], [69.3, 9171.0], [69.4, 9193.0], [69.5, 9221.0], [69.6, 9258.0], [69.7, 9264.0], [69.8, 9290.0], [69.9, 9299.0], [70.0, 9315.0], [70.1, 9331.0], [70.2, 9339.0], [70.3, 9349.0], [70.4, 9367.0], [70.5, 9377.0], [70.6, 9410.0], [70.7, 9440.0], [70.8, 9456.0], [70.9, 9461.0], [71.0, 9500.0], [71.1, 9508.0], [71.2, 9530.0], [71.3, 9543.0], [71.4, 9555.0], [71.5, 9590.0], [71.6, 9612.0], [71.7, 9642.0], [71.8, 9652.0], [71.9, 9681.0], [72.0, 9687.0], [72.1, 9698.0], [72.2, 9705.0], [72.3, 9734.0], [72.4, 9744.0], [72.5, 9764.0], [72.6, 9806.0], [72.7, 9808.0], [72.8, 9820.0], [72.9, 9835.0], [73.0, 9852.0], [73.1, 9879.0], [73.2, 9913.0], [73.3, 9927.0], [73.4, 9937.0], [73.5, 9948.0], [73.6, 9981.0], [73.7, 10009.0], [73.8, 10021.0], [73.9, 10031.0], [74.0, 10045.0], [74.1, 10057.0], [74.2, 10061.0], [74.3, 10093.0], [74.4, 10101.0], [74.5, 10119.0], [74.6, 10138.0], [74.7, 10148.0], [74.8, 10163.0], [74.9, 10178.0], [75.0, 10203.0], [75.1, 10212.0], [75.2, 10226.0], [75.3, 10244.0], [75.4, 10287.0], [75.5, 10298.0], [75.6, 10336.0], [75.7, 10365.0], [75.8, 10374.0], [75.9, 10409.0], [76.0, 10428.0], [76.1, 10448.0], [76.2, 10468.0], [76.3, 10514.0], [76.4, 10526.0], [76.5, 10553.0], [76.6, 10564.0], [76.7, 10573.0], [76.8, 10581.0], [76.9, 10594.0], [77.0, 10614.0], [77.1, 10624.0], [77.2, 10635.0], [77.3, 10642.0], [77.4, 10649.0], [77.5, 10665.0], [77.6, 10674.0], [77.7, 10685.0], [77.8, 10700.0], [77.9, 10725.0], [78.0, 10740.0], [78.1, 10777.0], [78.2, 10780.0], [78.3, 10791.0], [78.4, 10803.0], [78.5, 10812.0], [78.6, 10831.0], [78.7, 10838.0], [78.8, 10851.0], [78.9, 10865.0], [79.0, 10896.0], [79.1, 10906.0], [79.2, 10922.0], [79.3, 10937.0], [79.4, 10946.0], [79.5, 10978.0], [79.6, 10995.0], [79.7, 11005.0], [79.8, 11013.0], [79.9, 11027.0], [80.0, 11056.0], [80.1, 11073.0], [80.2, 11084.0], [80.3, 11098.0], [80.4, 11120.0], [80.5, 11126.0], [80.6, 11140.0], [80.7, 11155.0], [80.8, 11159.0], [80.9, 11173.0], [81.0, 11205.0], [81.1, 11220.0], [81.2, 11232.0], [81.3, 11265.0], [81.4, 11287.0], [81.5, 11305.0], [81.6, 11322.0], [81.7, 11341.0], [81.8, 11349.0], [81.9, 11365.0], [82.0, 11387.0], [82.1, 11411.0], [82.2, 11433.0], [82.3, 11446.0], [82.4, 11478.0], [82.5, 11495.0], [82.6, 11508.0], [82.7, 11518.0], [82.8, 11548.0], [82.9, 11565.0], [83.0, 11581.0], [83.1, 11604.0], [83.2, 11608.0], [83.3, 11623.0], [83.4, 11633.0], [83.5, 11662.0], [83.6, 11668.0], [83.7, 11678.0], [83.8, 11686.0], [83.9, 11707.0], [84.0, 11738.0], [84.1, 11762.0], [84.2, 11780.0], [84.3, 11790.0], [84.4, 11806.0], [84.5, 11832.0], [84.6, 11856.0], [84.7, 11863.0], [84.8, 11880.0], [84.9, 11907.0], [85.0, 11910.0], [85.1, 11942.0], [85.2, 11949.0], [85.3, 11972.0], [85.4, 11987.0], [85.5, 12004.0], [85.6, 12015.0], [85.7, 12019.0], [85.8, 12048.0], [85.9, 12067.0], [86.0, 12100.0], [86.1, 12107.0], [86.2, 12134.0], [86.3, 12161.0], [86.4, 12208.0], [86.5, 12241.0], [86.6, 12251.0], [86.7, 12254.0], [86.8, 12279.0], [86.9, 12301.0], [87.0, 12309.0], [87.1, 12333.0], [87.2, 12358.0], [87.3, 12366.0], [87.4, 12379.0], [87.5, 12407.0], [87.6, 12420.0], [87.7, 12432.0], [87.8, 12455.0], [87.9, 12473.0], [88.0, 12500.0], [88.1, 12505.0], [88.2, 12513.0], [88.3, 12522.0], [88.4, 12542.0], [88.5, 12554.0], [88.6, 12561.0], [88.7, 12580.0], [88.8, 12611.0], [88.9, 12623.0], [89.0, 12641.0], [89.1, 12664.0], [89.2, 12705.0], [89.3, 12718.0], [89.4, 12725.0], [89.5, 12752.0], [89.6, 12773.0], [89.7, 12781.0], [89.8, 12795.0], [89.9, 12816.0], [90.0, 12827.0], [90.1, 12834.0], [90.2, 12851.0], [90.3, 12867.0], [90.4, 12878.0], [90.5, 12909.0], [90.6, 12941.0], [90.7, 12949.0], [90.8, 12988.0], [90.9, 12993.0], [91.0, 13010.0], [91.1, 13019.0], [91.2, 13036.0], [91.3, 13053.0], [91.4, 13068.0], [91.5, 13071.0], [91.6, 13096.0], [91.7, 13130.0], [91.8, 13141.0], [91.9, 13180.0], [92.0, 13210.0], [92.1, 13221.0], [92.2, 13241.0], [92.3, 13259.0], [92.4, 13272.0], [92.5, 13283.0], [92.6, 13292.0], [92.7, 13295.0], [92.8, 13309.0], [92.9, 13351.0], [93.0, 13376.0], [93.1, 13387.0], [93.2, 13411.0], [93.3, 13452.0], [93.4, 13496.0], [93.5, 13514.0], [93.6, 13541.0], [93.7, 13546.0], [93.8, 13579.0], [93.9, 13605.0], [94.0, 13641.0], [94.1, 13660.0], [94.2, 13687.0], [94.3, 13717.0], [94.4, 13768.0], [94.5, 13830.0], [94.6, 13853.0], [94.7, 13867.0], [94.8, 13891.0], [94.9, 13895.0], [95.0, 13909.0], [95.1, 13947.0], [95.2, 13966.0], [95.3, 13996.0], [95.4, 14017.0], [95.5, 14077.0], [95.6, 14086.0], [95.7, 14105.0], [95.8, 14117.0], [95.9, 14125.0], [96.0, 14136.0], [96.1, 14141.0], [96.2, 14148.0], [96.3, 14184.0], [96.4, 14205.0], [96.5, 14221.0], [96.6, 14240.0], [96.7, 14257.0], [96.8, 14271.0], [96.9, 14286.0], [97.0, 14298.0], [97.1, 14310.0], [97.2, 14320.0], [97.3, 14349.0], [97.4, 14356.0], [97.5, 14373.0], [97.6, 14410.0], [97.7, 14457.0], [97.8, 14476.0], [97.9, 14491.0], [98.0, 14499.0], [98.1, 14509.0], [98.2, 14537.0], [98.3, 14549.0], [98.4, 14568.0], [98.5, 14591.0], [98.6, 14608.0], [98.7, 14657.0], [98.8, 14689.0], [98.9, 14735.0], [99.0, 14765.0], [99.1, 14816.0], [99.2, 14847.0], [99.3, 14900.0], [99.4, 15019.0], [99.5, 15068.0], [99.6, 15162.0], [99.7, 15303.0], [99.8, 15538.0], [99.9, 15716.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 936.0, "series": [{"data": [[0.0, 936.0], [100.0, 41.0], [200.0, 21.0], [300.0, 9.0], [400.0, 18.0], [500.0, 11.0], [600.0, 16.0], [700.0, 11.0], [800.0, 19.0], [900.0, 15.0], [1000.0, 14.0], [1100.0, 23.0], [1200.0, 23.0], [1300.0, 11.0], [1400.0, 16.0], [1500.0, 17.0], [1600.0, 21.0], [1700.0, 9.0], [1800.0, 20.0], [1900.0, 19.0], [2000.0, 14.0], [2100.0, 15.0], [2200.0, 17.0], [2300.0, 26.0], [2400.0, 22.0], [2500.0, 13.0], [2600.0, 14.0], [2700.0, 15.0], [2800.0, 27.0], [2900.0, 27.0], [3000.0, 21.0], [3100.0, 14.0], [3200.0, 21.0], [3300.0, 23.0], [3400.0, 18.0], [3500.0, 21.0], [3700.0, 23.0], [3600.0, 20.0], [3800.0, 22.0], [3900.0, 21.0], [4000.0, 17.0], [4200.0, 26.0], [4300.0, 19.0], [4100.0, 17.0], [4600.0, 16.0], [4500.0, 23.0], [4400.0, 18.0], [4700.0, 15.0], [4800.0, 21.0], [5100.0, 19.0], [4900.0, 27.0], [5000.0, 11.0], [5300.0, 19.0], [5200.0, 25.0], [5500.0, 24.0], [5400.0, 24.0], [5600.0, 22.0], [5700.0, 21.0], [5800.0, 12.0], [6000.0, 32.0], [6100.0, 16.0], [5900.0, 17.0], [6200.0, 21.0], [6300.0, 30.0], [6500.0, 32.0], [6400.0, 28.0], [6600.0, 23.0], [6700.0, 24.0], [6900.0, 30.0], [6800.0, 22.0], [7000.0, 17.0], [7100.0, 31.0], [7300.0, 20.0], [7400.0, 22.0], [7200.0, 19.0], [7600.0, 25.0], [7500.0, 31.0], [7800.0, 18.0], [7900.0, 22.0], [7700.0, 15.0], [8000.0, 15.0], [8100.0, 21.0], [8300.0, 20.0], [8700.0, 19.0], [8500.0, 29.0], [8400.0, 26.0], [8200.0, 25.0], [8600.0, 19.0], [9000.0, 19.0], [8900.0, 14.0], [9200.0, 20.0], [8800.0, 22.0], [9100.0, 15.0], [9600.0, 23.0], [9700.0, 19.0], [9300.0, 27.0], [9500.0, 22.0], [9400.0, 16.0], [10000.0, 29.0], [10100.0, 25.0], [9900.0, 20.0], [9800.0, 22.0], [10200.0, 21.0], [10700.0, 23.0], [10400.0, 18.0], [10500.0, 25.0], [10300.0, 13.0], [10600.0, 35.0], [11200.0, 20.0], [10800.0, 27.0], [11000.0, 26.0], [10900.0, 25.0], [11100.0, 27.0], [11300.0, 22.0], [11600.0, 33.0], [11500.0, 21.0], [11400.0, 20.0], [11700.0, 18.0], [12200.0, 21.0], [11900.0, 25.0], [11800.0, 21.0], [12100.0, 14.0], [12000.0, 20.0], [12300.0, 24.0], [12400.0, 21.0], [12700.0, 25.0], [12500.0, 29.0], [12600.0, 19.0], [13000.0, 27.0], [12900.0, 19.0], [13200.0, 30.0], [12800.0, 26.0], [13300.0, 18.0], [13100.0, 14.0], [13700.0, 8.0], [13600.0, 15.0], [13500.0, 19.0], [13400.0, 10.0], [13800.0, 20.0], [14200.0, 27.0], [14100.0, 27.0], [14000.0, 14.0], [13900.0, 14.0], [14300.0, 22.0], [14500.0, 21.0], [14400.0, 18.0], [14800.0, 9.0], [14600.0, 11.0], [14700.0, 10.0], [15200.0, 1.0], [14900.0, 4.0], [15000.0, 6.0], [15100.0, 5.0], [15300.0, 2.0], [15400.0, 2.0], [15600.0, 2.0], [15800.0, 3.0], [15500.0, 2.0], [15700.0, 1.0], [15900.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 15900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 159.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2819.0, "series": [{"data": [[0.0, 1025.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 159.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2819.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 6.096874999999997, "minX": 1.699974476E12, "maxY": 2152.6041666666665, "series": [{"data": [[1.699974486E12, 1853.0931677018636], [1.699974488E12, 1526.0872483221478], [1.699974487E12, 1686.6104651162789], [1.699974489E12, 1379.117241379311], [1.69997449E12, 1231.6466666666665], [1.699974492E12, 926.0764331210195], [1.699974491E12, 1080.6118421052636], [1.699974493E12, 762.5941176470592], [1.699974494E12, 599.1019108280257], [1.699974496E12, 304.634328358209], [1.699974495E12, 446.10738255033556], [1.699974497E12, 143.20105820105817], [1.699974477E12, 7.13123844731978], [1.699974476E12, 6.096874999999997], [1.699974498E12, 24.666666666666675], [1.699974479E12, 734.4965986394558], [1.699974478E12, 194.71186440677963], [1.69997448E12, 1085.4748201438852], [1.699974481E12, 1441.143790849673], [1.699974482E12, 1787.1875], [1.699974484E12, 2152.6041666666665], [1.699974483E12, 2135.323943661973], [1.699974485E12, 2007.1496598639458]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699974498E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 9.416666666666666, "minX": 1.0, "maxY": 15865.0, "series": [{"data": [[2.0, 9.416666666666666], [3.0, 322.247311827957], [4.0, 116.41044776119404], [5.0, 9.73793103448276], [6.0, 214.25874125874128], [7.0, 156.33673469387753], [8.0, 230.35384615384615], [9.0, 331.91111111111115], [10.0, 785.6842105263157], [11.0, 1220.5], [12.0, 20.5], [13.0, 2758.636363636364], [14.0, 1605.5555555555557], [15.0, 17.2], [16.0, 41.333333333333336], [17.0, 3529.3846153846152], [18.0, 3738.5], [19.0, 2977.8], [20.0, 2450.4999999999995], [21.0, 7292.5], [22.0, 25.0], [23.0, 9519.666666666666], [24.0, 4870.333333333333], [25.0, 7261.5], [26.0, 14285.0], [27.0, 48.666666666666664], [28.0, 3861.625], [29.0, 4866.666666666667], [30.0, 2154.1428571428573], [31.0, 4006.5], [33.0, 1019.4666666666667], [32.0, 2491.166666666667], [34.0, 7125.5], [35.0, 4846.333333333333], [37.0, 7440.5], [36.0, 14416.0], [39.0, 4937.333333333333], [38.0, 7447.5], [41.0, 4824.0], [40.0, 4935.0], [42.0, 3635.25], [43.0, 7598.0], [45.0, 14342.0], [44.0, 14526.0], [47.0, 15109.0], [46.0, 14271.0], [49.0, 14494.0], [48.0, 14608.0], [51.0, 14301.0], [50.0, 14394.0], [53.0, 82.5], [52.0, 14506.0], [55.0, 2470.666666666667], [54.0, 9733.666666666666], [56.0, 7184.5], [57.0, 7092.0], [58.0, 28.0], [59.0, 14453.5], [61.0, 15024.5], [63.0, 14143.0], [62.0, 14135.0], [64.0, 7153.5], [67.0, 15865.0], [66.0, 14381.0], [65.0, 14128.0], [69.0, 7163.0], [71.0, 14491.0], [70.0, 14253.0], [68.0, 14124.0], [75.0, 14258.0], [74.0, 14106.0], [73.0, 15147.0], [72.0, 14240.0], [79.0, 15169.0], [77.0, 14551.0], [76.0, 14090.0], [83.0, 67.5], [82.0, 3639.0], [81.0, 14799.0], [80.0, 14630.5], [85.0, 4972.0], [84.0, 9864.666666666666], [86.0, 7593.0], [87.0, 14400.0], [88.0, 54.5], [90.0, 15019.0], [89.0, 14342.0], [95.0, 14701.0], [94.0, 15555.0], [93.0, 14873.5], [92.0, 14532.0], [97.0, 7210.0], [96.0, 7256.5], [99.0, 15831.0], [98.0, 14349.0], [103.0, 14929.0], [102.0, 14169.5], [100.0, 14210.0], [107.0, 92.0], [106.0, 2901.8], [105.0, 2888.6], [104.0, 4766.666666666667], [108.0, 7374.0], [111.0, 7547.0], [110.0, 14515.333333333334], [115.0, 14123.0], [114.0, 13895.0], [113.0, 14494.0], [112.0, 13909.0], [118.0, 6995.0], [117.0, 14542.0], [116.0, 14351.0], [123.0, 13879.0], [122.0, 14304.0], [121.0, 15162.0], [120.0, 14260.0], [127.0, 14687.0], [126.0, 14213.0], [125.0, 14458.0], [124.0, 14313.0], [130.0, 10530.0], [135.0, 4730.333333333333], [134.0, 14152.0], [133.0, 14689.0], [132.0, 13823.0], [131.0, 13964.0], [136.0, 2868.4], [138.0, 4760.333333333333], [137.0, 3735.5], [143.0, 13979.0], [142.0, 14252.0], [141.0, 14356.0], [140.0, 14750.0], [139.0, 14079.0], [145.0, 7866.0], [151.0, 15189.0], [150.0, 14230.5], [148.0, 13867.0], [147.0, 13842.0], [146.0, 13966.0], [144.0, 14842.0], [158.0, 7208.0], [159.0, 14108.0], [157.0, 14313.0], [155.0, 14107.5], [153.0, 14037.0], [152.0, 14841.0], [167.0, 14184.0], [166.0, 13751.0], [165.0, 14455.5], [163.0, 14142.0], [162.0, 14125.0], [161.0, 14479.5], [175.0, 15423.0], [174.0, 14148.0], [173.0, 14686.0], [172.0, 13688.0], [171.0, 13605.0], [170.0, 14293.0], [169.0, 13768.0], [168.0, 13897.0], [178.0, 4912.666666666667], [181.0, 7177.5], [180.0, 9848.666666666666], [179.0, 263.0], [177.0, 9338.0], [176.0, 149.0], [183.0, 14250.0], [182.0, 14295.0], [186.0, 6953.0], [185.0, 6901.5], [188.0, 5173.333333333333], [189.0, 4648.666666666667], [187.0, 4931.333333333333], [191.0, 4706.333333333333], [190.0, 13961.0], [184.0, 13894.0], [192.0, 7047.5], [199.0, 13541.0], [198.0, 13552.0], [197.0, 14948.0], [196.0, 13989.0], [195.0, 13507.0], [194.0, 13714.0], [193.0, 14558.0], [206.0, 14159.0], [205.0, 14351.0], [204.0, 14070.0], [203.0, 13370.0], [202.0, 13544.0], [201.0, 13589.0], [200.0, 13563.0], [215.0, 13292.0], [213.0, 13641.0], [212.0, 13484.5], [210.0, 13479.0], [209.0, 13613.0], [208.0, 13394.0], [223.0, 13281.0], [222.0, 14577.0], [221.0, 13726.0], [219.0, 13686.5], [217.0, 13406.0], [216.0, 14012.0], [227.0, 6718.0], [231.0, 14010.0], [230.0, 13276.0], [229.0, 13285.0], [226.0, 13289.0], [225.0, 14027.0], [224.0, 13287.0], [233.0, 6752.0], [238.0, 13772.0], [237.0, 13558.0], [236.0, 13721.0], [235.0, 13574.5], [232.0, 13543.0], [247.0, 13196.0], [246.0, 13745.0], [244.0, 13386.0], [243.0, 13262.0], [242.0, 13223.0], [241.0, 13215.0], [240.0, 13639.0], [255.0, 13156.0], [254.0, 14115.0], [252.0, 13717.0], [251.0, 13703.0], [249.0, 13141.0], [248.0, 13411.0], [270.0, 13068.0], [271.0, 13055.0], [269.0, 13070.0], [268.0, 13439.0], [267.0, 13664.0], [265.0, 15237.0], [264.0, 13507.0], [263.0, 13309.0], [257.0, 13257.0], [256.0, 13131.0], [259.0, 13871.0], [258.0, 13546.0], [262.0, 13062.0], [261.0, 13900.0], [260.0, 13335.0], [287.0, 13532.0], [276.0, 6678.5], [282.0, 3112.0], [283.0, 4742.0], [281.0, 7359.5], [286.0, 14096.0], [285.0, 13032.0], [280.0, 13756.5], [278.0, 12993.0], [273.0, 14103.0], [272.0, 13389.0], [275.0, 13024.0], [274.0, 13611.0], [277.0, 13272.0], [302.0, 13213.0], [293.0, 6526.5], [292.0, 12949.0], [303.0, 13130.0], [301.0, 12960.0], [300.0, 13109.0], [299.0, 13655.0], [297.0, 13106.0], [296.0, 13071.0], [295.0, 13011.0], [289.0, 13996.0], [288.0, 13257.0], [291.0, 12942.0], [290.0, 13009.0], [294.0, 13697.0], [318.0, 12833.0], [304.0, 6926.5], [308.0, 6669.0], [309.0, 13180.0], [311.0, 13294.0], [310.0, 12909.0], [319.0, 12833.0], [317.0, 13385.0], [316.0, 12851.0], [307.0, 13141.0], [306.0, 13379.0], [305.0, 14086.0], [315.0, 13387.0], [314.0, 13205.5], [312.0, 14117.0], [333.0, 13248.0], [335.0, 4527.666666666667], [322.0, 6641.5], [329.0, 6535.0], [334.0, 13853.0], [332.0, 12777.0], [323.0, 12815.0], [330.0, 12878.0], [328.0, 12787.0], [327.0, 13254.0], [321.0, 12821.0], [320.0, 13087.0], [325.0, 13133.0], [324.0, 12986.0], [350.0, 6567.5], [339.0, 6706.25], [337.0, 12721.0], [336.0, 12990.0], [351.0, 5018.333333333333], [349.0, 4823.0], [348.0, 13243.0], [346.0, 12716.0], [345.0, 12991.0], [344.0, 12729.0], [343.0, 12853.0], [342.0, 12705.0], [341.0, 13661.0], [340.0, 12864.0], [367.0, 13077.5], [354.0, 8738.0], [356.0, 6506.5], [357.0, 13366.0], [359.0, 12817.0], [352.0, 12621.0], [358.0, 14298.0], [355.0, 6480.0], [361.0, 6430.5], [360.0, 12554.0], [365.0, 12561.0], [364.0, 12555.0], [363.0, 13858.0], [362.0, 12830.0], [382.0, 12550.0], [383.0, 12691.0], [381.0, 12867.0], [380.0, 12746.5], [378.0, 13220.0], [377.0, 12508.0], [376.0, 12485.0], [375.0, 12787.0], [371.0, 12653.0], [369.0, 12587.0], [374.0, 12795.0], [373.0, 12513.0], [372.0, 12602.0], [398.0, 12425.0], [399.0, 12504.0], [397.0, 12611.0], [396.0, 12437.0], [395.0, 12436.0], [394.0, 12730.5], [392.0, 12472.5], [390.0, 12420.0], [385.0, 12580.0], [384.0, 13316.0], [387.0, 12777.0], [386.0, 12718.0], [389.0, 12425.0], [388.0, 12884.0], [415.0, 12419.0], [403.0, 6325.0], [406.0, 6625.0], [405.0, 13039.0], [407.0, 12815.5], [400.0, 12366.0], [402.0, 12637.0], [401.0, 12358.0], [408.0, 508.0], [414.0, 12550.0], [413.0, 12660.0], [411.0, 12348.0], [410.0, 12514.0], [409.0, 14055.5], [429.0, 12455.0], [418.0, 4428.666666666666], [417.0, 6525.5], [416.0, 12462.0], [419.0, 6545.0], [421.0, 6448.0], [420.0, 12458.0], [422.0, 12851.0], [423.0, 12306.0], [424.0, 6440.5], [425.0, 12301.0], [427.0, 12647.0], [426.0, 13231.0], [431.0, 12254.0], [430.0, 12253.0], [428.0, 13283.0], [446.0, 12279.0], [447.0, 12641.0], [445.0, 13015.0], [444.0, 13108.5], [442.0, 12241.0], [441.0, 13376.0], [440.0, 12407.0], [439.0, 12664.0], [432.0, 12252.0], [435.0, 12248.0], [434.0, 12287.0], [438.0, 12471.0], [436.0, 12245.0], [462.0, 12100.0], [463.0, 12824.0], [461.0, 12752.0], [460.0, 12551.0], [459.0, 13005.0], [458.0, 12510.0], [457.0, 12329.0], [456.0, 13532.0], [455.0, 12426.0], [449.0, 12641.0], [448.0, 12391.0], [451.0, 13452.0], [450.0, 12229.0], [454.0, 12201.0], [453.0, 12725.0], [452.0, 13084.0], [478.0, 12067.0], [479.0, 12580.0], [477.0, 12069.0], [476.0, 12060.0], [475.0, 12058.0], [474.0, 13594.0], [473.0, 12717.0], [472.0, 12606.0], [471.0, 13130.0], [464.0, 12534.0], [466.0, 12500.0], [465.0, 12321.0], [470.0, 13117.0], [469.0, 12127.0], [468.0, 12584.5], [493.0, 4457.333333333334], [485.0, 4584.333333333334], [484.0, 6405.5], [483.0, 4534.333333333334], [487.0, 12489.5], [482.0, 12107.0], [481.0, 12338.5], [489.0, 8548.333333333334], [491.0, 4767.333333333333], [490.0, 12015.0], [492.0, 6459.0], [495.0, 12109.0], [494.0, 12106.0], [511.0, 11902.0], [504.0, 8425.666666666666], [510.0, 12309.0], [509.0, 12176.0], [508.0, 12203.0], [499.0, 12282.0], [498.0, 12634.0], [497.0, 12134.0], [496.0, 13036.0], [507.0, 12004.0], [506.0, 11976.0], [505.0, 11974.0], [502.0, 11965.0], [501.0, 13046.0], [500.0, 12019.0], [538.0, 12159.0], [532.0, 4311.333333333334], [520.0, 6896.5], [522.0, 11854.0], [534.0, 6116.0], [542.0, 13210.0], [536.0, 12480.0], [518.0, 12812.0], [516.0, 11907.0], [514.0, 11909.0], [512.0, 11897.0], [530.0, 11880.0], [528.0, 12907.0], [526.0, 11889.0], [570.0, 12370.0], [560.0, 6387.0], [562.0, 2865.6], [568.0, 995.0], [550.0, 11942.0], [548.0, 11863.0], [546.0, 12067.0], [544.0, 12867.0], [574.0, 11856.0], [566.0, 11671.0], [564.0, 12015.0], [556.0, 11876.0], [554.0, 12308.0], [552.0, 11868.0], [604.0, 6518.5], [598.0, 3403.25], [596.0, 4365.333333333334], [606.0, 11718.0], [600.0, 12268.0], [580.0, 11630.0], [578.0, 12208.0], [594.0, 11604.0], [590.0, 12233.5], [588.0, 11663.0], [586.0, 11579.0], [584.0, 11949.0], [636.0, 11806.0], [628.0, 683.0], [610.0, 6229.0], [626.0, 4498.0], [616.0, 6171.5], [618.0, 11679.0], [622.0, 11582.0], [608.0, 11494.0], [620.0, 11609.0], [630.0, 3755.5], [638.0, 11495.0], [632.0, 11349.0], [614.0, 11453.0], [612.0, 12834.0], [624.0, 11404.0], [670.0, 6348.5], [664.0, 6209.0], [650.0, 6113.5], [648.0, 11340.0], [654.0, 11436.5], [642.0, 12374.0], [640.0, 11315.0], [646.0, 11617.0], [644.0, 13200.0], [652.0, 11233.0], [662.0, 4518.0], [668.0, 11219.0], [666.0, 11253.0], [660.0, 11340.0], [658.0, 11607.0], [656.0, 11964.0], [702.0, 6096.0], [690.0, 6081.5], [698.0, 4398.0], [700.0, 11165.0], [696.0, 11079.0], [678.0, 11173.0], [676.0, 11438.0], [674.0, 11471.0], [672.0, 11774.0], [694.0, 11119.5], [692.0, 11111.0], [688.0, 13754.0], [686.0, 11165.0], [684.0, 11790.0], [682.0, 11705.0], [680.0, 12542.0], [732.0, 11948.0], [706.0, 882.0], [704.0, 11562.0], [710.0, 11510.0], [708.0, 11495.0], [718.0, 11910.0], [716.0, 11710.0], [714.0, 11557.0], [712.0, 11039.0], [728.0, 5021.0], [722.0, 6467.0], [724.0, 4328.666666666666], [734.0, 10942.0], [730.0, 11287.0], [726.0, 11557.0], [720.0, 11130.0], [766.0, 11020.0], [760.0, 4842.333333333334], [742.0, 11833.0], [740.0, 11240.0], [738.0, 11070.0], [736.0, 11027.0], [762.0, 6445.0], [764.0, 6405.5], [758.0, 10832.0], [756.0, 10842.0], [754.0, 10837.0], [752.0, 11084.0], [750.0, 10858.0], [748.0, 11987.0], [746.0, 13068.0], [744.0, 10927.0], [796.0, 11056.5], [770.0, 5937.5], [768.0, 11990.0], [774.0, 10974.0], [772.0, 13262.0], [782.0, 10940.0], [780.0, 10765.0], [778.0, 10808.0], [776.0, 10779.0], [798.0, 11168.0], [794.0, 10697.0], [792.0, 11159.0], [790.0, 10838.0], [788.0, 10812.0], [786.0, 10812.0], [784.0, 11012.0], [824.0, 10581.0], [828.0, 10922.0], [800.0, 2820.833333333333], [814.0, 10815.0], [812.0, 13259.0], [810.0, 10978.0], [808.0, 10757.5], [806.0, 5871.0], [804.0, 11158.0], [802.0, 10813.0], [816.0, 10628.0], [818.0, 10797.0], [820.0, 11204.0], [822.0, 10644.0], [830.0, 10573.0], [826.0, 12494.0], [832.0, 5862.5], [834.0, 2631.5714285714284], [846.0, 10870.0], [844.0, 10554.0], [842.0, 10672.0], [840.0, 10678.0], [836.0, 4400.333333333334], [854.0, 11080.0], [852.0, 10945.0], [850.0, 10947.0], [848.0, 12298.0], [862.0, 5936.5], [860.0, 1284.0], [858.0, 6007.5], [856.0, 10449.0], [838.0, 11013.0], [864.0, 5873.5], [868.0, 6193.5], [878.0, 10674.0], [876.0, 10993.0], [874.0, 10409.0], [872.0, 10611.0], [866.0, 6506.0], [890.0, 3217.2], [888.0, 6684.0], [870.0, 10416.0], [886.0, 10638.0], [882.0, 10432.0], [880.0, 10642.0], [894.0, 10803.0], [892.0, 6482.0], [896.0, 10298.0], [898.0, 10297.0], [910.0, 10514.0], [908.0, 11428.0], [906.0, 10364.0], [904.0, 10648.0], [916.0, 10344.0], [914.0, 10212.0], [912.0, 10605.0], [918.0, 11421.0], [920.0, 3351.8], [902.0, 12360.0], [900.0, 10301.0], [922.0, 10163.5], [924.0, 10184.0], [926.0, 10223.0], [934.0, 10630.0], [928.0, 4644.666666666666], [942.0, 11073.0], [940.0, 10365.0], [938.0, 10130.0], [952.0, 3440.8], [930.0, 10131.0], [954.0, 5821.0], [958.0, 1557.0], [944.0, 10057.0], [946.0, 10056.0], [950.0, 10058.0], [956.0, 9985.0], [962.0, 4475.333333333334], [960.0, 11481.5], [964.0, 10012.0], [966.0, 11491.5], [986.0, 10244.0], [972.0, 5889.0], [970.0, 10564.0], [968.0, 10099.0], [974.0, 9937.0], [982.0, 6468.0], [980.0, 10098.0], [978.0, 10355.0], [990.0, 4439.333333333334], [988.0, 10800.0], [996.0, 5861.0], [998.0, 10070.0], [1000.0, 10635.0], [1002.0, 5951.5], [1004.0, 10045.0], [992.0, 10138.0], [994.0, 10021.0], [1008.0, 5713.0], [1010.0, 10115.0], [1012.0, 9817.0], [1014.0, 10023.0], [1016.0, 4465.333333333334], [1018.0, 4101.25], [1022.0, 10478.0], [1076.0, 9879.0], [1036.0, 5865.5], [1052.0, 7036.666666666667], [1032.0, 9731.0], [1028.0, 10099.0], [1024.0, 9948.0], [1080.0, 6089.5], [1072.0, 9847.0], [1060.0, 5845.0], [1056.0, 10039.0], [1084.0, 10876.0], [1064.0, 9571.0], [1068.0, 9590.0], [1044.0, 9929.0], [1040.0, 11126.0], [1048.0, 5849.0], [1092.0, 9615.0], [1136.0, 5602.5], [1100.0, 10068.0], [1096.0, 5939.5], [1088.0, 9899.0], [1116.0, 9446.0], [1112.0, 9377.0], [1108.0, 9508.0], [1128.0, 5659.0], [1132.0, 9501.0], [1124.0, 5612.0], [1120.0, 9518.0], [1140.0, 4411.333333333334], [1144.0, 9287.0], [1148.0, 9459.0], [1104.0, 4303.333333333334], [1156.0, 9530.0], [1200.0, 6134.5], [1152.0, 6478.5], [1180.0, 9161.0], [1176.0, 9081.0], [1172.0, 9380.0], [1168.0, 9449.0], [1164.0, 4427.0], [1160.0, 9110.0], [1204.0, 5986.5], [1196.0, 5528.5], [1184.0, 9366.0], [1212.0, 9315.0], [1208.0, 9651.0], [1220.0, 9295.0], [1276.0, 9171.0], [1228.0, 9175.0], [1264.0, 9205.0], [1268.0, 9686.0], [1232.0, 5640.0], [1236.0, 9193.0], [1240.0, 8879.0], [1224.0, 9264.0], [1244.0, 9508.0], [1248.0, 5664.0], [1252.0, 8674.0], [1256.0, 8665.0], [1260.0, 2261.8], [1288.0, 10448.0], [1280.0, 2349.0], [1304.0, 4442.0], [1284.0, 9150.0], [1292.0, 8929.0], [1308.0, 8597.0], [1336.0, 8297.0], [1340.0, 5483.0], [1324.0, 4369.0], [1312.0, 9253.0], [1316.0, 8394.5], [1332.0, 8424.0], [1328.0, 8529.0], [1296.0, 5332.5], [1392.0, 4567.333333333333], [1352.0, 5271.0], [1348.0, 8990.0], [1344.0, 8261.5], [1372.0, 8506.0], [1356.0, 2427.0], [1388.0, 7987.0], [1404.0, 7949.0], [1380.0, 8150.0], [1384.0, 8207.0], [1400.0, 2424.0], [1396.0, 8192.0], [1360.0, 8164.0], [1364.0, 8180.0], [1368.0, 5712.0], [1420.0, 5428.0], [1412.0, 7904.0], [1408.0, 8245.0], [1416.0, 8430.0], [1436.0, 8992.0], [1432.0, 5193.5], [1456.0, 7777.0], [1448.0, 5754.5], [1460.0, 4418.0], [1464.0, 7897.5], [1440.0, 7870.0], [1468.0, 7653.0], [1452.0, 7699.0], [1424.0, 5476.0], [1428.0, 4413.666666666667], [1532.0, 4842.0], [1520.0, 4776.0], [1524.0, 7391.0], [1528.0, 2978.0], [1508.0, 7552.0], [1504.0, 7700.0], [1512.0, 7384.0], [1516.0, 8562.0], [1484.0, 5708.0], [1488.0, 7512.0], [1492.0, 5678.0], [1496.0, 2643.0], [1472.0, 8422.5], [1476.0, 8945.0], [1480.0, 7564.0], [1500.0, 7418.0], [1548.0, 7687.0], [1544.0, 4489.666666666667], [1536.0, 8260.0], [1540.0, 7317.5], [1584.0, 7059.0], [1596.0, 5164.5], [1580.0, 7423.0], [1576.0, 7137.0], [1572.0, 7131.0], [1568.0, 7577.0], [1588.0, 4406.333333333333], [1592.0, 7403.0], [1552.0, 4380.666666666667], [1556.0, 7175.0], [1560.0, 7560.0], [1564.0, 5099.5], [1604.0, 7100.0], [1616.0, 6928.0], [1620.0, 7001.0], [1600.0, 7091.0], [1608.0, 7455.0], [1612.0, 7075.0], [1628.0, 7867.0], [1624.0, 6978.0], [1636.0, 8188.0], [1640.0, 5616.5], [1644.0, 7403.0], [1632.0, 4976.0], [1660.0, 5626.5], [1656.0, 6804.0], [1652.0, 6799.0], [1648.0, 6849.0], [1668.0, 7224.0], [1712.0, 6977.0], [1664.0, 3947.428571428571], [1672.0, 6928.0], [1676.0, 7623.0], [1684.0, 4960.0], [1680.0, 8369.0], [1688.0, 6670.0], [1692.0, 6936.0], [1696.0, 4826.0], [1724.0, 6690.0], [1716.0, 4849.0], [1704.0, 5128.5], [1708.0, 6720.5], [1700.0, 5025.5], [1728.0, 7498.0], [1740.0, 4957.0], [1776.0, 6324.0], [1732.0, 3472.0], [1756.0, 4798.0], [1748.0, 6485.333333333333], [1744.0, 6500.0], [1752.0, 6864.0], [1736.0, 3224.0], [1788.0, 3458.5], [1780.0, 4988.5], [1784.0, 6325.0], [1768.0, 4608.666666666667], [1772.0, 4982.5], [1764.0, 5046.0], [1796.0, 5005.0], [1792.0, 6269.0], [1832.0, 4436.333333333333], [1828.0, 7189.0], [1824.0, 6203.0], [1836.0, 6106.0], [1816.0, 6394.0], [1812.0, 6401.0], [1808.0, 6703.0], [1820.0, 4890.5], [1852.0, 6094.0], [1848.0, 6144.0], [1840.0, 6082.0], [1804.0, 7681.0], [1800.0, 6242.0], [1904.0, 5831.0], [1916.0, 6696.0], [1912.0, 6952.0], [1908.0, 6346.0], [1876.0, 5108.0], [1872.0, 6699.0], [1880.0, 5104.0], [1856.0, 6245.0], [1860.0, 6115.0], [1884.0, 6515.0], [1900.0, 5243.0], [1896.0, 6040.0], [1892.0, 5113.0], [1888.0, 6060.0], [1928.0, 6355.0], [1976.0, 6078.0], [1932.0, 4335.4], [1968.0, 5535.0], [1920.0, 5801.0], [1924.0, 6288.0], [1948.0, 6198.0], [1944.0, 5581.0], [1940.0, 5883.5], [1936.0, 5674.0], [1952.0, 6674.0], [1956.0, 4267.0], [1960.0, 6217.0], [1964.0, 6345.5], [1988.0, 5413.0], [2036.0, 5174.0], [1984.0, 5093.333333333333], [2012.0, 5278.0], [2008.0, 5277.0], [2004.0, 6063.0], [2000.0, 5666.0], [1992.0, 5490.5], [1996.0, 5355.0], [2020.0, 5631.0], [2028.0, 6333.0], [2016.0, 4312.5], [2032.0, 4737.0], [2040.0, 5565.0], [2044.0, 4115.5], [2056.0, 5148.0], [2152.0, 4752.0], [2048.0, 5447.0], [2072.0, 4218.0], [2096.0, 4972.0], [2088.0, 5283.0], [2080.0, 5220.0], [2104.0, 5062.0], [2144.0, 4728.5], [2160.0, 4703.0], [2168.0, 5170.0], [2112.0, 5453.0], [2120.0, 5396.0], [2128.0, 5720.0], [2136.0, 4812.0], [2232.0, 4355.0], [2200.0, 4765.0], [2192.0, 4403.0], [2184.0, 4663.0], [2216.0, 4402.0], [2208.0, 5451.0], [2224.0, 4243.0], [2176.0, 5040.0], [2240.0, 4639.0], [2057.0, 5246.0], [2073.0, 4511.25], [2049.0, 4621.5], [2065.0, 5204.0], [2105.0, 4889.0], [2097.0, 5235.0], [2089.0, 5367.0], [2081.0, 4973.0], [2113.0, 5370.0], [2121.0, 4858.0], [2145.0, 4750.0], [2161.0, 6128.0], [2169.0, 4472.666666666667], [2129.0, 5234.0], [2137.0, 5015.0], [2185.0, 4661.0], [2177.0, 4584.0], [2193.0, 4072.0], [2201.0, 4274.0], [2241.0, 4166.0], [2217.0, 4322.0], [2209.0, 5328.0], [2225.0, 4257.0], [2233.0, 4332.333333333333], [1073.0, 10519.0], [1057.0, 5646.5], [1085.0, 9790.0], [1081.0, 9830.0], [1061.0, 5832.5], [1065.0, 9949.0], [1033.0, 12339.0], [1029.0, 10183.0], [1037.0, 9698.0], [1077.0, 9806.0], [1025.0, 9674.0], [1053.0, 10712.0], [1049.0, 9852.0], [1045.0, 5735.5], [1041.0, 9941.0], [1141.0, 2411.0], [1097.0, 4674.0], [1093.0, 10100.0], [1089.0, 10906.0], [1101.0, 5929.5], [1125.0, 5670.5], [1129.0, 4413.0], [1133.0, 10160.0], [1121.0, 9565.0], [1145.0, 9286.0], [1137.0, 6282.5], [1105.0, 9501.0], [1109.0, 9349.0], [1113.0, 9339.0], [1117.0, 9290.0], [1213.0, 8818.0], [1157.0, 4594.666666666666], [1181.0, 9375.0], [1161.0, 9337.0], [1193.0, 6895.0], [1189.0, 9415.0], [1185.0, 9258.0], [1209.0, 9228.0], [1205.0, 9688.0], [1197.0, 6514.0], [1201.0, 8937.0], [1165.0, 9302.0], [1173.0, 4794.0], [1169.0, 9086.0], [1177.0, 5619.0], [1221.0, 9298.0], [1269.0, 8580.0], [1273.0, 2406.0], [1229.0, 9005.0], [1217.0, 8971.0], [1245.0, 8725.0], [1241.0, 5515.5], [1237.0, 9169.0], [1233.0, 8756.0], [1249.0, 8664.0], [1253.0, 10023.0], [1257.0, 8883.0], [1261.0, 9413.5], [1277.0, 8533.0], [1337.0, 4462.333333333334], [1341.0, 8251.0], [1305.0, 5437.5], [1333.0, 8623.0], [1329.0, 8341.0], [1321.0, 7378.333333333333], [1317.0, 8499.0], [1313.0, 9632.0], [1293.0, 4015.0], [1309.0, 8566.0], [1281.0, 9149.5], [1285.0, 8534.0], [1289.0, 9687.0], [1297.0, 8469.0], [1349.0, 8676.0], [1397.0, 8819.0], [1405.0, 8858.0], [1345.0, 4433.666666666667], [1353.0, 8203.0], [1357.0, 6788.333333333333], [1393.0, 8069.0], [1389.0, 8684.0], [1385.0, 5706.0], [1369.0, 8207.0], [1365.0, 9158.0], [1361.0, 8162.0], [1373.0, 8071.0], [1377.0, 8293.5], [1381.0, 8171.0], [1401.0, 8214.0], [1417.0, 7901.0], [1413.0, 5470.0], [1421.0, 7859.0], [1429.0, 2895.0], [1409.0, 8078.0], [1437.0, 9261.0], [1433.0, 7785.0], [1469.0, 4371.333333333333], [1465.0, 7997.0], [1461.0, 7883.0], [1457.0, 7634.0], [1449.0, 7717.0], [1445.0, 8208.5], [1441.0, 8344.0], [1453.0, 8792.0], [1425.0, 2453.0], [1485.0, 5520.0], [1477.0, 5732.5], [1473.0, 5244.5], [1481.0, 8296.0], [1533.0, 3931.2], [1505.0, 7534.0], [1525.0, 5471.5], [1529.0, 8451.5], [1521.0, 5287.5], [1509.0, 5343.5], [1517.0, 7375.0], [1513.0, 7768.0], [1493.0, 4491.666666666667], [1489.0, 7554.0], [1497.0, 8586.0], [1541.0, 7357.0], [1537.0, 7510.0], [1545.0, 7231.0], [1585.0, 2794.0], [1589.0, 5627.0], [1593.0, 5647.0], [1565.0, 3819.166666666667], [1561.0, 7423.0], [1557.0, 7274.0], [1553.0, 7446.0], [1573.0, 5555.5], [1569.0, 7353.0], [1597.0, 7810.0], [1581.0, 5384.5], [1577.0, 7282.0], [1605.0, 7533.0], [1625.0, 7584.0], [1629.0, 8507.0], [1649.0, 6886.0], [1601.0, 7465.0], [1653.0, 7320.0], [1617.0, 5159.0], [1621.0, 3067.3333333333335], [1633.0, 4920.0], [1637.0, 7047.0], [1641.0, 6979.0], [1645.0, 6890.0], [1661.0, 4844.333333333333], [1657.0, 6801.0], [1669.0, 6850.0], [1677.0, 6996.0], [1717.0, 5529.5], [1665.0, 4365.5], [1673.0, 7175.0], [1693.0, 4116.4], [1685.0, 6722.0], [1681.0, 8056.0], [1725.0, 5665.0], [1721.0, 6565.0], [1697.0, 7184.0], [1713.0, 3771.0], [1701.0, 4606.0], [1709.0, 6640.0], [1737.0, 6515.5], [1729.0, 6523.0], [1733.0, 6635.5], [1757.0, 7576.0], [1753.0, 4850.5], [1749.0, 6444.0], [1741.0, 6956.0], [1781.0, 7145.0], [1761.0, 6656.0], [1789.0, 6920.0], [1785.0, 4550.0], [1765.0, 3553.0], [1769.0, 6388.0], [1773.0, 6492.0], [1745.0, 5152.5], [1849.0, 6226.0], [1793.0, 3240.0], [1797.0, 5473.0], [1825.0, 6661.0], [1829.0, 6361.0], [1853.0, 6041.0], [1845.0, 6898.0], [1841.0, 6568.0], [1805.0, 6648.0], [1801.0, 6501.0], [1833.0, 4159.0], [1837.0, 7075.0], [1817.0, 4415.0], [1813.0, 6248.0], [1809.0, 7535.0], [1821.0, 6318.0], [1865.0, 6028.5], [1909.0, 5872.0], [1917.0, 5908.0], [1861.0, 4925.5], [1869.0, 6251.5], [1905.0, 5840.0], [1913.0, 6043.0], [1889.0, 5917.0], [1857.0, 6326.0], [1885.0, 6435.0], [1881.0, 5958.0], [1873.0, 4913.5], [1901.0, 4742.333333333333], [1897.0, 6090.0], [1925.0, 6811.0], [1929.0, 4265.0], [1921.0, 6546.0], [1933.0, 5660.0], [1969.0, 6083.0], [1973.0, 5629.5], [1977.0, 5469.0], [1945.0, 5777.0], [1941.0, 5696.0], [1949.0, 5700.0], [1953.0, 4972.0], [1957.0, 5034.5], [1965.0, 5771.0], [1961.0, 5722.0], [1993.0, 5511.0], [2045.0, 4691.333333333333], [2013.0, 5270.0], [2005.0, 5717.0], [2001.0, 5359.0], [1985.0, 4464.0], [1997.0, 5362.0], [2017.0, 4350.333333333333], [2025.0, 4769.25], [2021.0, 5604.0], [2029.0, 5660.0], [2033.0, 5625.0], [2037.0, 5452.0], [2041.0, 5289.0], [2050.0, 5330.0], [2074.0, 4861.666666666667], [2066.0, 5620.0], [2058.0, 6504.0], [2098.0, 4906.0], [2090.0, 5015.0], [2082.0, 6216.0], [2106.0, 4914.0], [2138.0, 4683.0], [2146.0, 5546.0], [2154.0, 4862.0], [2162.0, 6214.0], [2170.0, 4968.0], [2114.0, 4848.0], [2122.0, 4856.0], [2130.0, 4915.0], [2194.0, 4520.0], [2202.0, 4228.0], [2186.0, 4456.0], [2218.0, 4298.666666666667], [2210.0, 4306.0], [2234.0, 4495.0], [2178.0, 4579.0], [2059.0, 5201.0], [2051.0, 5137.0], [2067.0, 5018.0], [2107.0, 4410.0], [2099.0, 4995.0], [2091.0, 5124.0], [2083.0, 5934.0], [2115.0, 4477.666666666667], [2123.0, 4857.0], [2171.0, 5000.0], [2147.0, 4898.5], [2075.0, 5965.0], [2155.0, 4619.0], [2163.0, 4867.0], [2131.0, 4765.5], [2139.0, 4310.5], [2187.0, 4888.0], [2179.0, 4385.0], [2203.0, 4697.5], [2243.0, 4691.0], [2219.0, 4720.0], [2227.0, 4601.0], [2235.0, 4569.099999999999], [541.0, 11900.0], [529.0, 6328.5], [527.0, 6218.5], [515.0, 12364.0], [513.0, 13066.0], [519.0, 12827.0], [517.0, 11908.0], [525.0, 12132.0], [523.0, 12878.0], [521.0, 11857.0], [533.0, 3327.75], [535.0, 6305.0], [543.0, 12379.0], [539.0, 11804.0], [537.0, 12922.0], [531.0, 12048.0], [573.0, 8023.0], [561.0, 6597.0], [545.0, 6444.5], [547.0, 11933.0], [551.0, 12647.0], [549.0, 11972.0], [559.0, 11930.0], [557.0, 11746.0], [555.0, 12099.0], [553.0, 13040.0], [565.0, 4341.666666666666], [575.0, 6289.0], [571.0, 11688.0], [569.0, 11848.5], [567.0, 12019.0], [563.0, 11789.0], [605.0, 12161.0], [577.0, 8422.333333333334], [591.0, 6169.0], [587.0, 12503.0], [585.0, 13053.0], [593.0, 8650.0], [597.0, 6699.5], [595.0, 11821.0], [607.0, 11780.0], [603.0, 11691.5], [601.0, 11505.0], [583.0, 11786.0], [581.0, 11631.0], [579.0, 12279.0], [599.0, 11493.0], [637.0, 11769.0], [625.0, 6266.5], [613.0, 6325.0], [615.0, 11662.0], [623.0, 12120.0], [611.0, 12561.0], [609.0, 12412.0], [635.0, 11347.0], [633.0, 11400.0], [639.0, 11376.0], [627.0, 692.0], [617.0, 7230.5], [619.0, 11438.0], [621.0, 6109.5], [631.0, 2929.8], [629.0, 8817.25], [669.0, 4652.333333333334], [651.0, 6013.5], [649.0, 6281.5], [663.0, 6115.0], [661.0, 6166.5], [671.0, 11198.0], [667.0, 11220.0], [665.0, 11365.0], [655.0, 11520.0], [641.0, 11992.0], [647.0, 11341.0], [643.0, 11996.0], [659.0, 11664.0], [657.0, 11387.0], [699.0, 6246.5], [677.0, 6581.0], [697.0, 6311.0], [679.0, 11428.0], [673.0, 6348.5], [675.0, 11180.0], [687.0, 6377.0], [685.0, 11152.0], [683.0, 11496.0], [695.0, 6340.5], [689.0, 11107.0], [701.0, 3017.6], [703.0, 11738.0], [733.0, 11305.0], [719.0, 6085.5], [729.0, 6002.5], [711.0, 11289.0], [709.0, 11265.0], [707.0, 11175.0], [705.0, 11039.0], [731.0, 11356.0], [735.0, 10937.0], [713.0, 6521.0], [715.0, 6310.5], [717.0, 6120.0], [721.0, 6210.0], [723.0, 2827.3333333333335], [727.0, 11232.0], [725.0, 11686.0], [765.0, 10785.0], [759.0, 4307.0], [761.0, 6485.0], [763.0, 11016.0], [757.0, 11657.0], [755.0, 10843.0], [753.0, 11433.0], [751.0, 11122.0], [737.0, 11321.0], [743.0, 11013.0], [741.0, 10946.0], [749.0, 10857.0], [747.0, 11387.0], [745.0, 10911.0], [799.0, 1123.3333333333333], [769.0, 6469.5], [771.0, 6140.5], [797.0, 11411.0], [775.0, 11511.0], [773.0, 11013.0], [791.0, 10831.0], [789.0, 11155.0], [787.0, 11140.0], [785.0, 10963.0], [783.0, 11125.0], [779.0, 10687.0], [777.0, 10780.0], [825.0, 11030.0], [815.0, 11151.0], [811.0, 11812.0], [809.0, 10778.0], [801.0, 4481.0], [805.0, 11306.0], [803.0, 10984.0], [831.0, 10594.0], [817.0, 11058.0], [821.0, 10650.0], [823.0, 10696.0], [829.0, 10777.0], [827.0, 10555.0], [835.0, 6057.5], [859.0, 5941.0], [847.0, 10667.0], [843.0, 10589.0], [841.0, 10572.0], [833.0, 3687.75], [837.0, 6027.0], [863.0, 3830.25], [855.0, 10676.0], [853.0, 10737.0], [851.0, 10743.0], [849.0, 10792.0], [861.0, 5184.0], [857.0, 10553.0], [839.0, 10865.0], [865.0, 6169.0], [879.0, 10487.0], [877.0, 10624.0], [875.0, 10428.0], [873.0, 10646.0], [867.0, 10592.0], [891.0, 3773.25], [889.0, 3257.4], [871.0, 14455.0], [869.0, 10562.0], [887.0, 6611.0], [885.0, 11442.5], [883.0, 10568.0], [881.0, 12473.0], [895.0, 10310.0], [893.0, 10297.0], [897.0, 6004.5], [921.0, 1754.0], [911.0, 12994.0], [909.0, 10227.0], [907.0, 10520.0], [905.0, 10843.0], [899.0, 5989.0], [917.0, 5919.0], [915.0, 10617.0], [913.0, 10225.0], [919.0, 10376.0], [903.0, 14542.0], [901.0, 10367.0], [923.0, 5801.5], [927.0, 10420.0], [925.0, 11070.0], [929.0, 6236.0], [953.0, 6246.5], [943.0, 10423.0], [941.0, 10406.0], [939.0, 10336.0], [937.0, 10367.5], [935.0, 10137.0], [933.0, 10854.0], [931.0, 12842.0], [955.0, 10270.0], [959.0, 11000.0], [945.0, 10533.0], [949.0, 10330.5], [947.0, 13233.0], [951.0, 10405.0], [957.0, 10154.0], [961.0, 4656.333333333334], [987.0, 1790.0], [965.0, 1892.0], [963.0, 10451.0], [967.0, 10244.0], [985.0, 10053.5], [971.0, 9927.0], [969.0, 9975.0], [973.0, 9941.0], [975.0, 11185.0], [983.0, 5715.0], [981.0, 5790.5], [979.0, 9953.0], [977.0, 10334.0], [989.0, 10233.0], [991.0, 9869.0], [1007.0, 9917.5], [1021.0, 11141.0], [997.0, 5973.5], [999.0, 10209.0], [1001.0, 4422.333333333334], [1003.0, 7546.0], [1005.0, 4379.666666666666], [993.0, 11565.0], [995.0, 10004.0], [1009.0, 10468.0], [1011.0, 9816.0], [1013.0, 9916.0], [1015.0, 10713.0], [1017.0, 9794.0], [1019.0, 10526.0], [1023.0, 9744.0], [1074.0, 9542.0], [1050.0, 10154.0], [1034.0, 6363.5], [1026.0, 9806.0], [1054.0, 5904.0], [1078.0, 1853.0], [1058.0, 9867.0], [1086.0, 9541.0], [1082.0, 9931.0], [1062.0, 1856.0], [1066.0, 6019.5], [1070.0, 9874.5], [1046.0, 4760.333333333334], [1042.0, 11082.0], [1102.0, 5870.5], [1150.0, 6933.0], [1094.0, 9466.0], [1090.0, 9901.0], [1118.0, 10371.0], [1114.0, 9336.0], [1110.0, 9326.0], [1098.0, 5884.5], [1126.0, 2359.0], [1130.0, 4789.333333333334], [1134.0, 9546.0], [1138.0, 9705.0], [1142.0, 9304.5], [1146.0, 9524.0], [1106.0, 1958.75], [1154.0, 9771.0], [1158.0, 5748.0], [1182.0, 9009.0], [1178.0, 9032.0], [1174.0, 9092.0], [1170.0, 9080.0], [1162.0, 9112.0], [1166.0, 10023.0], [1202.0, 9511.0], [1206.0, 5691.5], [1198.0, 9370.0], [1194.0, 5558.5], [1214.0, 8897.0], [1190.0, 9828.0], [1186.0, 9080.0], [1210.0, 8909.0], [1218.0, 9764.0], [1266.0, 9229.5], [1230.0, 4645.0], [1226.0, 6643.333333333333], [1234.0, 8729.0], [1238.0, 9187.0], [1246.0, 8875.0], [1222.0, 8892.0], [1254.0, 5643.0], [1250.0, 9918.0], [1258.0, 8653.0], [1262.0, 8678.0], [1278.0, 8727.0], [1274.0, 8629.666666666666], [1270.0, 9087.0], [1338.0, 5570.0], [1334.0, 5454.5], [1282.0, 4581.333333333334], [1290.0, 8726.0], [1306.0, 6530.333333333333], [1310.0, 8540.0], [1326.0, 8470.0], [1342.0, 8490.0], [1314.0, 8686.0], [1322.0, 8656.0], [1318.0, 8777.0], [1294.0, 3748.0], [1330.0, 8314.0], [1298.0, 5471.0], [1302.0, 8619.5], [1354.0, 5461.5], [1350.0, 9324.0], [1346.0, 8225.0], [1374.0, 8590.0], [1370.0, 8244.0], [1358.0, 8547.0], [1390.0, 5273.5], [1386.0, 5233.5], [1402.0, 4577.666666666667], [1378.0, 8268.0], [1382.0, 8345.0], [1398.0, 8185.0], [1394.0, 8393.0], [1362.0, 5338.0], [1366.0, 8886.0], [1414.0, 2439.5], [1418.0, 4744.666666666667], [1410.0, 8007.0], [1438.0, 7830.0], [1434.0, 3264.0], [1430.0, 6943.0], [1422.0, 8155.0], [1458.0, 8562.0], [1466.0, 4490.333333333333], [1470.0, 7641.0], [1446.0, 7836.0], [1442.0, 7957.0], [1454.0, 5429.5], [1450.0, 2795.5], [1426.0, 6470.666666666667], [1530.0, 8126.0], [1522.0, 5143.0], [1486.0, 7609.0], [1526.0, 5298.0], [1510.0, 6813.0], [1506.0, 7431.0], [1514.0, 7602.0], [1518.0, 9755.0], [1534.0, 7413.0], [1490.0, 2789.0], [1494.0, 7520.0], [1498.0, 8188.0], [1502.0, 7634.0], [1474.0, 8497.0], [1478.0, 7922.0], [1482.0, 9681.0], [1586.0, 5934.333333333333], [1594.0, 4444.666666666667], [1566.0, 7132.0], [1538.0, 7377.0], [1542.0, 7303.0], [1550.0, 7844.5], [1546.0, 7227.0], [1598.0, 7823.0], [1582.0, 7272.0], [1578.0, 7133.0], [1574.0, 7540.0], [1570.0, 7109.0], [1590.0, 7070.0], [1554.0, 7201.0], [1558.0, 7190.0], [1602.0, 8492.0], [1614.0, 6744.333333333333], [1618.0, 5438.5], [1622.0, 5626.666666666667], [1630.0, 5155.5], [1606.0, 7555.0], [1610.0, 6980.5], [1626.0, 7055.0], [1634.0, 4445.333333333333], [1638.0, 4925.0], [1642.0, 8057.0], [1646.0, 7405.0], [1658.0, 7045.0], [1654.0, 7150.0], [1650.0, 7558.0], [1662.0, 8343.0], [1670.0, 6744.0], [1722.0, 3895.0], [1666.0, 5036.0], [1674.0, 7166.0], [1678.0, 7100.0], [1714.0, 7407.0], [1682.0, 7332.0], [1686.0, 6697.0], [1690.0, 5855.0], [1694.0, 4156.8], [1726.0, 6704.0], [1718.0, 6592.0], [1698.0, 5656.5], [1702.0, 5015.5], [1706.0, 5816.666666666667], [1710.0, 7190.0], [1742.0, 6464.0], [1738.0, 5598.0], [1778.0, 6708.5], [1758.0, 6353.0], [1730.0, 6508.0], [1750.0, 3304.0], [1754.0, 7432.0], [1734.0, 6504.0], [1786.0, 4903.0], [1782.0, 6764.0], [1770.0, 6952.0], [1774.0, 6691.0], [1762.0, 6647.0], [1766.0, 6424.0], [1790.0, 6319.0], [1850.0, 6685.0], [1794.0, 5288.25], [1830.0, 6127.0], [1826.0, 6248.0], [1838.0, 7270.0], [1818.0, 5139.5], [1814.0, 6365.0], [1810.0, 7037.0], [1854.0, 6441.0], [1806.0, 6889.0], [1802.0, 6482.0], [1798.0, 7113.0], [1870.0, 6199.0], [1906.0, 3987.0], [1866.0, 4750.5], [1918.0, 4995.5], [1914.0, 7407.0], [1910.0, 6265.0], [1874.0, 4666.0], [1878.0, 6371.5], [1882.0, 6333.0], [1886.0, 7197.0], [1858.0, 6739.0], [1862.0, 6046.0], [1894.0, 5475.5], [1898.0, 6090.0], [1902.0, 5203.5], [1890.0, 6317.0], [1922.0, 6277.0], [1930.0, 4682.333333333333], [1974.0, 5473.0], [1970.0, 5531.0], [1978.0, 5747.0], [1950.0, 4588.0], [1946.0, 6181.0], [1942.0, 5899.0], [1938.0, 6194.0], [1954.0, 4130.6], [1982.0, 5471.666666666667], [1962.0, 4565.5], [1958.0, 6132.0], [1966.0, 5534.0], [1990.0, 4802.0], [1994.0, 7337.0], [1986.0, 4534.5], [2014.0, 5415.0], [2010.0, 6031.0], [2006.0, 5759.0], [1998.0, 4952.0], [2018.0, 4299.25], [2022.0, 5199.0], [2026.0, 4067.0], [2034.0, 5585.0], [2038.0, 6022.0], [2046.0, 4717.0], [2068.0, 5206.0], [2148.0, 4664.5], [2052.0, 5643.0], [2100.0, 4780.5], [2092.0, 5061.0], [2084.0, 5244.0], [2108.0, 4849.0], [2076.0, 5565.0], [2156.0, 4543.0], [2164.0, 5466.333333333333], [2116.0, 5560.0], [2132.0, 4821.0], [2172.0, 4458.0], [2140.0, 4735.0], [2180.0, 3980.0], [2236.0, 4316.5], [2196.0, 4886.5], [2188.0, 4728.0], [2204.0, 4274.5], [2212.0, 4326.0], [2228.0, 4513.0], [2244.0, 4297.0], [2061.0, 4983.666666666667], [2165.0, 4911.0], [2053.0, 5112.0], [2069.0, 3936.0], [2101.0, 5605.0], [2093.0, 4959.0], [2085.0, 5293.0], [2109.0, 4328.333333333333], [2117.0, 5057.0], [2125.0, 4896.5], [2173.0, 5341.0], [2077.0, 4975.0], [2149.0, 6059.0], [2157.0, 5754.0], [2133.0, 5210.0], [2141.0, 4897.0], [2181.0, 5044.0], [2189.0, 4414.5], [2237.0, 4355.571428571429], [2197.0, 5104.5], [2205.0, 5063.0], [2245.0, 4296.0], [2213.0, 4345.0], [2229.0, 5526.0], [1087.0, 10093.0], [1079.0, 7294.666666666667], [1027.0, 1599.0], [1083.0, 10271.0], [1059.0, 4692.0], [1063.0, 9918.0], [1071.0, 9913.0], [1067.0, 11357.0], [1035.0, 5684.0], [1031.0, 10879.0], [1039.0, 10158.5], [1075.0, 9697.0], [1047.0, 4337.666666666666], [1055.0, 9744.0], [1043.0, 10828.0], [1103.0, 9820.0], [1095.0, 9721.0], [1091.0, 9530.0], [1099.0, 5786.0], [1127.0, 9598.5], [1131.0, 5993.5], [1135.0, 5770.0], [1151.0, 4709.333333333334], [1123.0, 9888.0], [1147.0, 9169.0], [1143.0, 10061.0], [1139.0, 9221.0], [1107.0, 7367.666666666667], [1115.0, 9455.0], [1203.0, 5698.0], [1155.0, 6154.5], [1183.0, 9143.0], [1179.0, 9052.0], [1159.0, 4583.333333333334], [1191.0, 9315.0], [1187.0, 10041.0], [1215.0, 9461.0], [1211.0, 11284.0], [1207.0, 9642.0], [1195.0, 4726.666666666666], [1199.0, 9483.0], [1163.0, 4465.333333333334], [1167.0, 9545.0], [1171.0, 9363.0], [1175.0, 9070.0], [1219.0, 8884.0], [1231.0, 5590.5], [1247.0, 8963.0], [1227.0, 8946.0], [1223.0, 8809.0], [1267.0, 8608.0], [1275.0, 5374.0], [1239.0, 8703.0], [1235.0, 8839.0], [1243.0, 6863.666666666667], [1279.0, 9702.0], [1251.0, 8771.0], [1255.0, 9362.0], [1259.0, 8713.0], [1263.0, 8814.0], [1271.0, 8574.0], [1331.0, 8446.0], [1295.0, 3492.2], [1335.0, 8368.0], [1323.0, 3891.25], [1327.0, 5690.0], [1319.0, 8580.0], [1283.0, 8512.0], [1287.0, 9064.5], [1291.0, 8461.0], [1299.0, 2837.0], [1359.0, 8198.0], [1347.0, 8858.0], [1351.0, 8212.0], [1355.0, 4237.75], [1395.0, 7966.0], [1399.0, 8167.0], [1387.0, 3724.4], [1391.0, 8010.0], [1371.0, 5442.5], [1367.0, 8744.0], [1363.0, 8555.0], [1375.0, 8133.0], [1407.0, 8057.0], [1379.0, 8243.0], [1383.0, 8252.0], [1403.0, 7970.0], [1419.0, 8427.0], [1423.0, 4933.333333333333], [1415.0, 5945.5], [1439.0, 8236.0], [1411.0, 8911.0], [1435.0, 7888.5], [1431.0, 8587.0], [1467.0, 7723.0], [1463.0, 7910.0], [1451.0, 6167.666666666667], [1447.0, 7708.0], [1443.0, 7708.0], [1455.0, 7699.0], [1427.0, 8377.0], [1487.0, 8199.0], [1475.0, 7597.0], [1479.0, 5166.0], [1483.0, 9700.0], [1531.0, 4050.75], [1535.0, 7303.0], [1507.0, 8468.0], [1527.0, 7693.0], [1523.0, 7383.0], [1519.0, 5319.0], [1515.0, 7353.0], [1511.0, 9003.0], [1491.0, 7709.0], [1495.0, 7426.0], [1499.0, 8258.0], [1503.0, 7631.0], [1543.0, 7251.0], [1587.0, 4429.666666666667], [1539.0, 2967.0], [1547.0, 7315.0], [1551.0, 5234.0], [1591.0, 4918.0], [1595.0, 4937.0], [1563.0, 7356.5], [1559.0, 7175.0], [1555.0, 8079.0], [1567.0, 7533.0], [1571.0, 7111.0], [1599.0, 7105.0], [1575.0, 4492.666666666667], [1579.0, 7624.0], [1583.0, 7111.0], [1607.0, 7362.0], [1655.0, 5381.5], [1623.0, 5061.5], [1627.0, 7260.0], [1615.0, 6940.0], [1611.0, 7244.0], [1603.0, 6994.0], [1631.0, 7459.0], [1651.0, 7227.0], [1635.0, 4242.0], [1639.0, 6853.0], [1643.0, 7150.0], [1647.0, 7564.0], [1663.0, 6839.0], [1659.0, 4482.0], [1671.0, 6227.0], [1667.0, 7005.0], [1675.0, 7521.0], [1679.0, 6979.0], [1691.0, 6712.0], [1687.0, 6664.0], [1683.0, 6700.0], [1695.0, 6758.0], [1723.0, 6719.5], [1719.0, 6561.0], [1727.0, 6633.0], [1715.0, 6929.0], [1699.0, 5077.0], [1707.0, 3660.0], [1711.0, 6895.0], [1703.0, 5529.0], [1739.0, 6582.0], [1735.0, 4914.5], [1731.0, 4605.0], [1759.0, 6355.0], [1755.0, 4933.0], [1751.0, 6952.0], [1743.0, 5627.0], [1779.0, 7536.0], [1763.0, 4755.5], [1791.0, 6316.0], [1787.0, 5178.5], [1783.0, 6595.0], [1767.0, 4818.5], [1771.0, 5674.0], [1775.0, 6325.0], [1747.0, 3245.0], [1847.0, 6490.5], [1799.0, 5146.5], [1795.0, 4284.333333333333], [1827.0, 4778.0], [1855.0, 6258.0], [1851.0, 6050.0], [1843.0, 6364.0], [1807.0, 6364.0], [1803.0, 6822.0], [1831.0, 5061.5], [1835.0, 6256.0], [1839.0, 7106.0], [1815.0, 6216.0], [1811.0, 6530.0], [1819.0, 6229.0], [1823.0, 6592.5], [1907.0, 5982.0], [1867.0, 4688.5], [1863.0, 6006.0], [1871.0, 6079.0], [1911.0, 6141.0], [1915.0, 6581.0], [1919.0, 6039.0], [1891.0, 5905.0], [1875.0, 4800.5], [1887.0, 5905.0], [1859.0, 6012.0], [1883.0, 6430.0], [1879.0, 5977.0], [1895.0, 4373.666666666667], [1899.0, 6435.0], [1903.0, 4408.2], [1927.0, 5806.5], [1971.0, 5839.0], [1983.0, 3627.0], [1931.0, 4642.333333333333], [1923.0, 5714.0], [1935.0, 5286.666666666667], [1979.0, 6449.0], [1947.0, 4958.0], [1943.0, 5588.0], [1951.0, 4614.0], [1955.0, 4549.0], [1959.0, 4792.0], [1967.0, 6091.0], [1991.0, 3992.0], [1987.0, 5415.0], [2015.0, 5267.0], [2011.0, 5761.0], [2003.0, 5681.0], [1995.0, 5368.0], [2019.0, 4519.666666666667], [2023.0, 5489.0], [2031.0, 5238.0], [2027.0, 6142.0], [1999.0, 5357.0], [2035.0, 5435.0], [2039.0, 5430.0], [2043.0, 5092.666666666667], [2047.0, 4404.666666666667], [2062.0, 5078.0], [2070.0, 5235.333333333333], [2054.0, 5665.0], [2094.0, 4956.0], [2086.0, 5294.0], [2102.0, 5449.0], [2110.0, 4619.0], [2078.0, 5334.0], [2150.0, 4919.0], [2158.0, 5913.0], [2166.0, 4228.0], [2174.0, 4051.0], [2126.0, 5067.0], [2134.0, 5627.0], [2142.0, 4757.0], [2190.0, 4874.0], [2198.0, 5061.0], [2182.0, 4445.0], [2206.0, 4322.0], [2214.0, 4293.0], [2222.0, 4638.333333333333], [2238.0, 5030.5], [2230.0, 4276.285714285714], [2055.0, 5110.0], [2071.0, 5244.0], [2111.0, 4903.0], [2063.0, 5276.0], [2103.0, 5865.0], [2095.0, 6521.0], [2087.0, 4966.0], [2119.0, 5200.0], [2127.0, 5324.0], [2175.0, 4770.5], [2079.0, 5309.0], [2151.0, 5123.0], [2159.0, 4628.0], [2167.0, 4507.0], [2135.0, 4908.0], [2183.0, 4986.0], [2239.0, 4185.0], [2191.0, 4384.0], [2199.0, 4620.0], [2207.0, 4426.0], [2223.0, 4428.0], [2231.0, 4215.5], [1.0, 7294.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[895.141144141892, 5890.221333999498]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2245.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 15497.0, "minX": 1.699974476E12, "maxY": 253228.0, "series": [{"data": [[1.699974486E12, 75333.0], [1.699974488E12, 69699.0], [1.699974487E12, 80460.0], [1.699974489E12, 67883.0], [1.69997449E12, 70174.0], [1.699974492E12, 73446.0], [1.699974491E12, 71107.0], [1.699974493E12, 79537.0], [1.699974494E12, 73433.0], [1.699974496E12, 62706.0], [1.699974495E12, 69705.0], [1.699974497E12, 88384.0], [1.699974477E12, 253228.0], [1.699974476E12, 149701.0], [1.699974498E12, 22457.0], [1.699974479E12, 68799.0], [1.699974478E12, 82842.0], [1.69997448E12, 65012.0], [1.699974481E12, 71542.0], [1.699974482E12, 74836.0], [1.699974484E12, 67328.0], [1.699974483E12, 66437.0], [1.699974485E12, 68710.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.699974486E12, 51988.0], [1.699974488E12, 48094.0], [1.699974487E12, 55520.0], [1.699974489E12, 46858.0], [1.69997449E12, 48424.0], [1.699974492E12, 50681.0], [1.699974491E12, 49067.0], [1.699974493E12, 54887.0], [1.699974494E12, 50668.0], [1.699974496E12, 43276.0], [1.699974495E12, 48100.0], [1.699974497E12, 60979.0], [1.699974477E12, 174783.0], [1.699974476E12, 103301.0], [1.699974498E12, 15497.0], [1.699974479E12, 47484.0], [1.699974478E12, 57177.0], [1.69997448E12, 44857.0], [1.699974481E12, 49357.0], [1.699974482E12, 51636.0], [1.699974484E12, 46448.0], [1.699974483E12, 45847.0], [1.699974485E12, 47395.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699974498E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 9.76524953789279, "minX": 1.699974476E12, "maxY": 14656.458333333334, "series": [{"data": [[1.699974486E12, 6409.006211180125], [1.699974488E12, 7713.161073825503], [1.699974487E12, 7056.110465116278], [1.699974489E12, 8405.206896551725], [1.69997449E12, 9120.66], [1.699974492E12, 10683.356687898086], [1.699974491E12, 9902.66447368421], [1.699974493E12, 11197.499999999998], [1.699974494E12, 11871.133757961781], [1.699974496E12, 13274.119402985076], [1.699974495E12, 12560.946308724831], [1.699974497E12, 14203.328042328045], [1.699974477E12, 9.76524953789279], [1.699974476E12, 17.037499999999987], [1.699974498E12, 14656.458333333334], [1.699974479E12, 1079.6802721088434], [1.699974478E12, 193.7966101694916], [1.69997448E12, 1934.5179856115112], [1.699974481E12, 2757.111111111111], [1.699974482E12, 3512.99375], [1.699974484E12, 4987.555555555558], [1.699974483E12, 4256.007042253517], [1.699974485E12, 5644.401360544218]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699974498E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 9.717190388170067, "minX": 1.699974476E12, "maxY": 14656.312499999998, "series": [{"data": [[1.699974486E12, 6408.944099378882], [1.699974488E12, 7713.10067114094], [1.699974487E12, 7056.063953488372], [1.699974489E12, 8405.151724137928], [1.69997449E12, 9120.599999999993], [1.699974492E12, 10683.29936305733], [1.699974491E12, 9902.618421052635], [1.699974493E12, 11197.423529411759], [1.699974494E12, 11871.101910828027], [1.699974496E12, 13274.09701492538], [1.699974495E12, 12560.906040268459], [1.699974497E12, 14203.174603174608], [1.699974477E12, 9.717190388170067], [1.699974476E12, 16.834375], [1.699974498E12, 14656.312499999998], [1.699974479E12, 1079.6258503401364], [1.699974478E12, 193.70621468926552], [1.69997448E12, 1934.4748201438847], [1.699974481E12, 2757.065359477124], [1.699974482E12, 3512.9249999999997], [1.699974484E12, 4987.486111111114], [1.699974483E12, 4255.957746478874], [1.699974485E12, 5644.319727891156]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699974498E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.7655172413793105, "minX": 1.699974476E12, "maxY": 5.5343749999999945, "series": [{"data": [[1.699974486E12, 1.1677018633540375], [1.699974488E12, 0.9395973154362416], [1.699974487E12, 0.779069767441861], [1.699974489E12, 0.7655172413793105], [1.69997449E12, 0.8866666666666663], [1.699974492E12, 1.0318471337579624], [1.699974491E12, 1.664473684210527], [1.699974493E12, 1.411764705882353], [1.699974494E12, 1.6751592356687903], [1.699974496E12, 0.8059701492537313], [1.699974495E12, 0.9395973154362416], [1.699974497E12, 1.0158730158730156], [1.699974477E12, 1.3807763401109057], [1.699974476E12, 5.5343749999999945], [1.699974498E12, 1.0], [1.699974479E12, 1.5986394557823136], [1.699974478E12, 1.4180790960451977], [1.69997448E12, 1.1007194244604315], [1.699974481E12, 0.9738562091503263], [1.699974482E12, 1.3750000000000002], [1.699974484E12, 1.2569444444444444], [1.699974483E12, 0.8521126760563382], [1.699974485E12, 1.7278911564625852]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699974498E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.699974476E12, "maxY": 15914.0, "series": [{"data": [[1.699974486E12, 7681.0], [1.699974488E12, 10079.0], [1.699974487E12, 9612.0], [1.699974489E12, 10734.0], [1.69997449E12, 11284.0], [1.699974492E12, 14542.0], [1.699974491E12, 12339.0], [1.699974493E12, 13754.0], [1.699974494E12, 13618.0], [1.699974496E12, 15237.0], [1.699974495E12, 14870.0], [1.699974497E12, 15914.0], [1.699974477E12, 41.0], [1.699974476E12, 112.0], [1.699974498E12, 15893.0], [1.699974479E12, 1872.0], [1.699974478E12, 880.0], [1.69997448E12, 2715.0], [1.699974481E12, 3729.0], [1.699974482E12, 4654.0], [1.699974484E12, 6521.0], [1.699974483E12, 5568.0], [1.699974485E12, 7337.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.699974486E12, 7067.400000000001], [1.699974488E12, 8468.0], [1.699974487E12, 7840.400000000001], [1.699974489E12, 8931.4], [1.69997449E12, 9687.9], [1.699974492E12, 11571.800000000001], [1.699974491E12, 10712.7], [1.699974493E12, 11832.9], [1.699974494E12, 12531.400000000001], [1.699974496E12, 14041.0], [1.699974495E12, 13117.0], [1.699974497E12, 14929.0], [1.699974477E12, 14.0], [1.699974476E12, 36.7000000000001], [1.699974498E12, 15326.5], [1.699974479E12, 1423.4], [1.699974478E12, 475.60000000000025], [1.69997448E12, 2361.0], [1.699974481E12, 3257.4], [1.699974482E12, 3995.5], [1.699974484E12, 5627.5], [1.699974483E12, 4880.200000000001], [1.699974485E12, 6262.200000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.699974486E12, 7664.88], [1.699974488E12, 9917.0], [1.699974487E12, 8990.040000000008], [1.699974489E12, 10476.859999999995], [1.69997449E12, 11042.770000000004], [1.699974492E12, 14491.539999999999], [1.699974491E12, 11983.369999999999], [1.699974493E12, 13404.679999999997], [1.699974494E12, 13487.499999999996], [1.699974496E12, 14978.700000000004], [1.699974495E12, 14232.0], [1.699974497E12, 15869.9], [1.699974477E12, 29.0], [1.699974476E12, 108.74000000000012], [1.699974498E12, 15893.0], [1.699974479E12, 1785.120000000002], [1.699974478E12, 775.4799999999998], [1.69997448E12, 2682.9999999999995], [1.699974481E12, 3699.3000000000006], [1.699974482E12, 4643.63], [1.699974484E12, 6383.750000000004], [1.699974483E12, 5564.99], [1.699974485E12, 7187.240000000003]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.699974486E12, 7328.5], [1.699974488E12, 8868.5], [1.699974487E12, 8063.65], [1.699974489E12, 9301.599999999999], [1.69997449E12, 10016.95], [1.699974492E12, 12509.899999999998], [1.699974491E12, 10957.55], [1.699974493E12, 12423.599999999999], [1.699974494E12, 12908.5], [1.699974496E12, 14266.25], [1.699974495E12, 13311.0], [1.699974497E12, 15179.0], [1.699974477E12, 18.0], [1.699974476E12, 80.94999999999999], [1.699974498E12, 15664.699999999999], [1.699974479E12, 1537.0], [1.699974478E12, 564.9999999999999], [1.69997448E12, 2417.0], [1.699974481E12, 3444.7999999999997], [1.699974482E12, 4224.5], [1.699974484E12, 6026.25], [1.699974483E12, 5120.499999999999], [1.699974485E12, 6529.2]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.699974486E12, 5660.0], [1.699974488E12, 6996.0], [1.699974487E12, 6350.0], [1.699974489E12, 7708.0], [1.69997449E12, 8457.0], [1.699974492E12, 9807.0], [1.699974491E12, 9169.0], [1.699974493E12, 10527.0], [1.699974494E12, 11180.0], [1.699974496E12, 12554.0], [1.699974495E12, 11897.0], [1.699974497E12, 13276.0], [1.699974477E12, 6.0], [1.699974476E12, 5.0], [1.699974498E12, 14200.0], [1.699974479E12, 516.0], [1.699974478E12, 14.0], [1.69997448E12, 1369.0], [1.699974481E12, 2183.0], [1.699974482E12, 2863.0], [1.699974484E12, 4243.0], [1.699974483E12, 3577.0], [1.699974485E12, 4975.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.699974486E12, 6325.0], [1.699974488E12, 7577.0], [1.699974487E12, 6932.5], [1.699974489E12, 8339.0], [1.69997449E12, 9076.0], [1.699974492E12, 10487.0], [1.699974491E12, 9807.0], [1.699974493E12, 11095.0], [1.699974494E12, 11774.0], [1.699974496E12, 13148.5], [1.699974495E12, 12505.0], [1.699974497E12, 14143.0], [1.699974477E12, 8.0], [1.699974476E12, 9.0], [1.699974498E12, 14553.5], [1.699974479E12, 1103.0], [1.699974478E12, 115.0], [1.69997448E12, 1930.0], [1.699974481E12, 2789.0], [1.699974482E12, 3473.0], [1.699974484E12, 4909.5], [1.699974483E12, 4198.5], [1.699974485E12, 5567.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699974498E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 48.0, "maxY": 14553.5, "series": [{"data": [[541.0, 8.0], [134.0, 13148.5], [139.0, 1930.0], [142.0, 4198.5], [147.0, 3423.5], [144.0, 4909.5], [149.0, 10988.0], [145.0, 8339.0], [150.0, 9076.0], [153.0, 2789.0], [152.0, 9807.0], [157.0, 11370.5], [160.0, 3473.0], [161.0, 6325.0], [172.0, 6932.5], [170.0, 11095.0], [177.0, 115.0], [189.0, 14143.0], [48.0, 14553.5], [320.0, 9.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 541.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 48.0, "maxY": 14553.5, "series": [{"data": [[541.0, 8.0], [134.0, 13148.5], [139.0, 1930.0], [142.0, 4198.5], [147.0, 3423.5], [144.0, 4909.0], [149.0, 10988.0], [145.0, 8338.0], [150.0, 9076.0], [153.0, 2789.0], [152.0, 9807.0], [157.0, 11370.5], [160.0, 3473.0], [161.0, 6325.0], [172.0, 6932.5], [170.0, 11095.0], [177.0, 115.0], [189.0, 14143.0], [48.0, 14553.5], [320.0, 9.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 541.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 29.0, "minX": 1.699974475E12, "maxY": 721.0, "series": [{"data": [[1.699974477E12, 555.0], [1.699974475E12, 29.0], [1.699974476E12, 292.0], [1.699974479E12, 499.0], [1.699974478E12, 721.0], [1.69997448E12, 497.0], [1.699974481E12, 504.0], [1.699974482E12, 500.0], [1.699974483E12, 406.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699974483E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 48.0, "minX": 1.699974476E12, "maxY": 541.0, "series": [{"data": [[1.699974486E12, 161.0], [1.699974488E12, 149.0], [1.699974487E12, 172.0], [1.699974489E12, 145.0], [1.69997449E12, 150.0], [1.699974492E12, 157.0], [1.699974491E12, 152.0], [1.699974493E12, 170.0], [1.699974494E12, 157.0], [1.699974496E12, 134.0], [1.699974495E12, 149.0], [1.699974497E12, 189.0], [1.699974477E12, 541.0], [1.699974476E12, 320.0], [1.699974498E12, 48.0], [1.699974479E12, 147.0], [1.699974478E12, 177.0], [1.69997448E12, 139.0], [1.699974481E12, 153.0], [1.699974482E12, 160.0], [1.699974484E12, 144.0], [1.699974483E12, 142.0], [1.699974485E12, 147.0]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699974498E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 48.0, "minX": 1.699974476E12, "maxY": 541.0, "series": [{"data": [[1.699974486E12, 161.0], [1.699974488E12, 149.0], [1.699974487E12, 172.0], [1.699974489E12, 145.0], [1.69997449E12, 150.0], [1.699974492E12, 157.0], [1.699974491E12, 152.0], [1.699974493E12, 170.0], [1.699974494E12, 157.0], [1.699974496E12, 134.0], [1.699974495E12, 149.0], [1.699974497E12, 189.0], [1.699974477E12, 541.0], [1.699974476E12, 320.0], [1.699974498E12, 48.0], [1.699974479E12, 147.0], [1.699974478E12, 177.0], [1.69997448E12, 139.0], [1.699974481E12, 153.0], [1.699974482E12, 160.0], [1.699974484E12, 144.0], [1.699974483E12, 142.0], [1.699974485E12, 147.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699974498E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 48.0, "minX": 1.699974476E12, "maxY": 541.0, "series": [{"data": [[1.699974486E12, 161.0], [1.699974488E12, 149.0], [1.699974487E12, 172.0], [1.699974489E12, 145.0], [1.69997449E12, 150.0], [1.699974492E12, 157.0], [1.699974491E12, 152.0], [1.699974493E12, 170.0], [1.699974494E12, 157.0], [1.699974496E12, 134.0], [1.699974495E12, 149.0], [1.699974497E12, 189.0], [1.699974477E12, 541.0], [1.699974476E12, 320.0], [1.699974498E12, 48.0], [1.699974479E12, 147.0], [1.699974478E12, 177.0], [1.69997448E12, 139.0], [1.699974481E12, 153.0], [1.699974482E12, 160.0], [1.699974484E12, 144.0], [1.699974483E12, 142.0], [1.699974485E12, 147.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699974498E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

