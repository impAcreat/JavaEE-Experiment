/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 13810.0, "series": [{"data": [[0.0, 5.0], [0.1, 5.0], [0.2, 5.0], [0.3, 5.0], [0.4, 6.0], [0.5, 6.0], [0.6, 6.0], [0.7, 6.0], [0.8, 6.0], [0.9, 6.0], [1.0, 6.0], [1.1, 6.0], [1.2, 6.0], [1.3, 6.0], [1.4, 6.0], [1.5, 6.0], [1.6, 6.0], [1.7, 6.0], [1.8, 6.0], [1.9, 6.0], [2.0, 6.0], [2.1, 6.0], [2.2, 6.0], [2.3, 6.0], [2.4, 6.0], [2.5, 6.0], [2.6, 6.0], [2.7, 6.0], [2.8, 6.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 6.0], [3.3, 6.0], [3.4, 7.0], [3.5, 7.0], [3.6, 7.0], [3.7, 7.0], [3.8, 7.0], [3.9, 7.0], [4.0, 7.0], [4.1, 7.0], [4.2, 7.0], [4.3, 7.0], [4.4, 7.0], [4.5, 7.0], [4.6, 7.0], [4.7, 7.0], [4.8, 7.0], [4.9, 7.0], [5.0, 7.0], [5.1, 7.0], [5.2, 7.0], [5.3, 7.0], [5.4, 7.0], [5.5, 7.0], [5.6, 7.0], [5.7, 7.0], [5.8, 7.0], [5.9, 7.0], [6.0, 7.0], [6.1, 7.0], [6.2, 7.0], [6.3, 7.0], [6.4, 7.0], [6.5, 7.0], [6.6, 7.0], [6.7, 7.0], [6.8, 7.0], [6.9, 7.0], [7.0, 7.0], [7.1, 7.0], [7.2, 7.0], [7.3, 7.0], [7.4, 7.0], [7.5, 7.0], [7.6, 7.0], [7.7, 7.0], [7.8, 7.0], [7.9, 7.0], [8.0, 7.0], [8.1, 7.0], [8.2, 7.0], [8.3, 7.0], [8.4, 7.0], [8.5, 7.0], [8.6, 7.0], [8.7, 7.0], [8.8, 7.0], [8.9, 7.0], [9.0, 7.0], [9.1, 7.0], [9.2, 7.0], [9.3, 7.0], [9.4, 7.0], [9.5, 7.0], [9.6, 7.0], [9.7, 7.0], [9.8, 7.0], [9.9, 7.0], [10.0, 7.0], [10.1, 7.0], [10.2, 8.0], [10.3, 8.0], [10.4, 8.0], [10.5, 8.0], [10.6, 8.0], [10.7, 8.0], [10.8, 8.0], [10.9, 8.0], [11.0, 8.0], [11.1, 8.0], [11.2, 8.0], [11.3, 8.0], [11.4, 8.0], [11.5, 8.0], [11.6, 8.0], [11.7, 8.0], [11.8, 8.0], [11.9, 8.0], [12.0, 8.0], [12.1, 8.0], [12.2, 8.0], [12.3, 8.0], [12.4, 8.0], [12.5, 8.0], [12.6, 8.0], [12.7, 8.0], [12.8, 8.0], [12.9, 8.0], [13.0, 8.0], [13.1, 8.0], [13.2, 8.0], [13.3, 8.0], [13.4, 8.0], [13.5, 8.0], [13.6, 8.0], [13.7, 8.0], [13.8, 8.0], [13.9, 8.0], [14.0, 8.0], [14.1, 8.0], [14.2, 8.0], [14.3, 8.0], [14.4, 8.0], [14.5, 8.0], [14.6, 8.0], [14.7, 8.0], [14.8, 8.0], [14.9, 8.0], [15.0, 8.0], [15.1, 8.0], [15.2, 8.0], [15.3, 8.0], [15.4, 8.0], [15.5, 8.0], [15.6, 8.0], [15.7, 8.0], [15.8, 8.0], [15.9, 8.0], [16.0, 8.0], [16.1, 8.0], [16.2, 8.0], [16.3, 8.0], [16.4, 8.0], [16.5, 8.0], [16.6, 8.0], [16.7, 8.0], [16.8, 8.0], [16.9, 8.0], [17.0, 8.0], [17.1, 8.0], [17.2, 8.0], [17.3, 9.0], [17.4, 9.0], [17.5, 9.0], [17.6, 9.0], [17.7, 9.0], [17.8, 9.0], [17.9, 9.0], [18.0, 9.0], [18.1, 9.0], [18.2, 9.0], [18.3, 9.0], [18.4, 9.0], [18.5, 9.0], [18.6, 9.0], [18.7, 9.0], [18.8, 9.0], [18.9, 9.0], [19.0, 9.0], [19.1, 9.0], [19.2, 9.0], [19.3, 9.0], [19.4, 9.0], [19.5, 9.0], [19.6, 9.0], [19.7, 9.0], [19.8, 9.0], [19.9, 9.0], [20.0, 9.0], [20.1, 9.0], [20.2, 9.0], [20.3, 9.0], [20.4, 9.0], [20.5, 9.0], [20.6, 9.0], [20.7, 9.0], [20.8, 9.0], [20.9, 9.0], [21.0, 9.0], [21.1, 9.0], [21.2, 9.0], [21.3, 9.0], [21.4, 9.0], [21.5, 9.0], [21.6, 9.0], [21.7, 9.0], [21.8, 9.0], [21.9, 9.0], [22.0, 9.0], [22.1, 9.0], [22.2, 10.0], [22.3, 10.0], [22.4, 10.0], [22.5, 10.0], [22.6, 10.0], [22.7, 10.0], [22.8, 10.0], [22.9, 10.0], [23.0, 10.0], [23.1, 10.0], [23.2, 10.0], [23.3, 10.0], [23.4, 10.0], [23.5, 10.0], [23.6, 10.0], [23.7, 10.0], [23.8, 10.0], [23.9, 10.0], [24.0, 10.0], [24.1, 10.0], [24.2, 10.0], [24.3, 10.0], [24.4, 10.0], [24.5, 10.0], [24.6, 10.0], [24.7, 10.0], [24.8, 10.0], [24.9, 10.0], [25.0, 10.0], [25.1, 11.0], [25.2, 11.0], [25.3, 11.0], [25.4, 11.0], [25.5, 11.0], [25.6, 11.0], [25.7, 11.0], [25.8, 11.0], [25.9, 11.0], [26.0, 11.0], [26.1, 11.0], [26.2, 11.0], [26.3, 11.0], [26.4, 11.0], [26.5, 11.0], [26.6, 12.0], [26.7, 12.0], [26.8, 12.0], [26.9, 12.0], [27.0, 12.0], [27.1, 12.0], [27.2, 12.0], [27.3, 12.0], [27.4, 12.0], [27.5, 12.0], [27.6, 12.0], [27.7, 13.0], [27.8, 13.0], [27.9, 13.0], [28.0, 13.0], [28.1, 13.0], [28.2, 13.0], [28.3, 13.0], [28.4, 13.0], [28.5, 14.0], [28.6, 14.0], [28.7, 14.0], [28.8, 14.0], [28.9, 15.0], [29.0, 15.0], [29.1, 15.0], [29.2, 15.0], [29.3, 16.0], [29.4, 16.0], [29.5, 16.0], [29.6, 16.0], [29.7, 17.0], [29.8, 17.0], [29.9, 17.0], [30.0, 18.0], [30.1, 18.0], [30.2, 18.0], [30.3, 19.0], [30.4, 19.0], [30.5, 20.0], [30.6, 21.0], [30.7, 21.0], [30.8, 22.0], [30.9, 22.0], [31.0, 23.0], [31.1, 24.0], [31.2, 24.0], [31.3, 25.0], [31.4, 26.0], [31.5, 26.0], [31.6, 27.0], [31.7, 29.0], [31.8, 30.0], [31.9, 31.0], [32.0, 32.0], [32.1, 34.0], [32.2, 37.0], [32.3, 38.0], [32.4, 39.0], [32.5, 41.0], [32.6, 42.0], [32.7, 45.0], [32.8, 47.0], [32.9, 48.0], [33.0, 49.0], [33.1, 51.0], [33.2, 52.0], [33.3, 53.0], [33.4, 53.0], [33.5, 55.0], [33.6, 58.0], [33.7, 61.0], [33.8, 63.0], [33.9, 68.0], [34.0, 68.0], [34.1, 70.0], [34.2, 71.0], [34.3, 72.0], [34.4, 75.0], [34.5, 77.0], [34.6, 79.0], [34.7, 80.0], [34.8, 82.0], [34.9, 83.0], [35.0, 86.0], [35.1, 91.0], [35.2, 92.0], [35.3, 94.0], [35.4, 95.0], [35.5, 99.0], [35.6, 102.0], [35.7, 103.0], [35.8, 104.0], [35.9, 108.0], [36.0, 111.0], [36.1, 115.0], [36.2, 119.0], [36.3, 124.0], [36.4, 128.0], [36.5, 130.0], [36.6, 132.0], [36.7, 134.0], [36.8, 143.0], [36.9, 146.0], [37.0, 149.0], [37.1, 157.0], [37.2, 165.0], [37.3, 168.0], [37.4, 172.0], [37.5, 177.0], [37.6, 183.0], [37.7, 197.0], [37.8, 205.0], [37.9, 223.0], [38.0, 231.0], [38.1, 237.0], [38.2, 246.0], [38.3, 256.0], [38.4, 266.0], [38.5, 275.0], [38.6, 290.0], [38.7, 296.0], [38.8, 309.0], [38.9, 329.0], [39.0, 344.0], [39.1, 358.0], [39.2, 377.0], [39.3, 396.0], [39.4, 413.0], [39.5, 432.0], [39.6, 448.0], [39.7, 461.0], [39.8, 476.0], [39.9, 485.0], [40.0, 500.0], [40.1, 504.0], [40.2, 524.0], [40.3, 539.0], [40.4, 581.0], [40.5, 617.0], [40.6, 625.0], [40.7, 650.0], [40.8, 673.0], [40.9, 691.0], [41.0, 702.0], [41.1, 736.0], [41.2, 748.0], [41.3, 762.0], [41.4, 775.0], [41.5, 792.0], [41.6, 804.0], [41.7, 809.0], [41.8, 829.0], [41.9, 853.0], [42.0, 865.0], [42.1, 909.0], [42.2, 927.0], [42.3, 937.0], [42.4, 950.0], [42.5, 969.0], [42.6, 992.0], [42.7, 1011.0], [42.8, 1051.0], [42.9, 1084.0], [43.0, 1107.0], [43.1, 1129.0], [43.2, 1157.0], [43.3, 1187.0], [43.4, 1200.0], [43.5, 1215.0], [43.6, 1233.0], [43.7, 1263.0], [43.8, 1302.0], [43.9, 1317.0], [44.0, 1337.0], [44.1, 1356.0], [44.2, 1381.0], [44.3, 1396.0], [44.4, 1408.0], [44.5, 1436.0], [44.6, 1446.0], [44.7, 1454.0], [44.8, 1461.0], [44.9, 1478.0], [45.0, 1492.0], [45.1, 1496.0], [45.2, 1546.0], [45.3, 1555.0], [45.4, 1577.0], [45.5, 1592.0], [45.6, 1600.0], [45.7, 1631.0], [45.8, 1646.0], [45.9, 1671.0], [46.0, 1678.0], [46.1, 1687.0], [46.2, 1705.0], [46.3, 1712.0], [46.4, 1736.0], [46.5, 1754.0], [46.6, 1767.0], [46.7, 1775.0], [46.8, 1793.0], [46.9, 1805.0], [47.0, 1821.0], [47.1, 1836.0], [47.2, 1847.0], [47.3, 1865.0], [47.4, 1893.0], [47.5, 1914.0], [47.6, 1944.0], [47.7, 1969.0], [47.8, 1977.0], [47.9, 1995.0], [48.0, 2011.0], [48.1, 2022.0], [48.2, 2051.0], [48.3, 2067.0], [48.4, 2104.0], [48.5, 2144.0], [48.6, 2165.0], [48.7, 2180.0], [48.8, 2201.0], [48.9, 2225.0], [49.0, 2231.0], [49.1, 2256.0], [49.2, 2283.0], [49.3, 2315.0], [49.4, 2335.0], [49.5, 2364.0], [49.6, 2400.0], [49.7, 2418.0], [49.8, 2437.0], [49.9, 2478.0], [50.0, 2482.0], [50.1, 2488.0], [50.2, 2493.0], [50.3, 2505.0], [50.4, 2556.0], [50.5, 2568.0], [50.6, 2579.0], [50.7, 2594.0], [50.8, 2605.0], [50.9, 2645.0], [51.0, 2661.0], [51.1, 2669.0], [51.2, 2682.0], [51.3, 2695.0], [51.4, 2700.0], [51.5, 2726.0], [51.6, 2732.0], [51.7, 2753.0], [51.8, 2786.0], [51.9, 2799.0], [52.0, 2815.0], [52.1, 2836.0], [52.2, 2858.0], [52.3, 2868.0], [52.4, 2882.0], [52.5, 2888.0], [52.6, 2902.0], [52.7, 2920.0], [52.8, 2950.0], [52.9, 2983.0], [53.0, 3008.0], [53.1, 3024.0], [53.2, 3049.0], [53.3, 3056.0], [53.4, 3070.0], [53.5, 3090.0], [53.6, 3111.0], [53.7, 3128.0], [53.8, 3158.0], [53.9, 3172.0], [54.0, 3198.0], [54.1, 3216.0], [54.2, 3233.0], [54.3, 3240.0], [54.4, 3257.0], [54.5, 3269.0], [54.6, 3291.0], [54.7, 3305.0], [54.8, 3328.0], [54.9, 3354.0], [55.0, 3380.0], [55.1, 3414.0], [55.2, 3441.0], [55.3, 3469.0], [55.4, 3492.0], [55.5, 3514.0], [55.6, 3521.0], [55.7, 3564.0], [55.8, 3567.0], [55.9, 3579.0], [56.0, 3609.0], [56.1, 3630.0], [56.2, 3640.0], [56.3, 3646.0], [56.4, 3666.0], [56.5, 3676.0], [56.6, 3692.0], [56.7, 3700.0], [56.8, 3717.0], [56.9, 3728.0], [57.0, 3735.0], [57.1, 3745.0], [57.2, 3752.0], [57.3, 3777.0], [57.4, 3791.0], [57.5, 3797.0], [57.6, 3847.0], [57.7, 3874.0], [57.8, 3912.0], [57.9, 3931.0], [58.0, 3941.0], [58.1, 3959.0], [58.2, 3983.0], [58.3, 3986.0], [58.4, 4002.0], [58.5, 4022.0], [58.6, 4037.0], [58.7, 4049.0], [58.8, 4059.0], [58.9, 4077.0], [59.0, 4084.0], [59.1, 4092.0], [59.2, 4114.0], [59.3, 4129.0], [59.4, 4162.0], [59.5, 4191.0], [59.6, 4202.0], [59.7, 4218.0], [59.8, 4233.0], [59.9, 4246.0], [60.0, 4270.0], [60.1, 4291.0], [60.2, 4302.0], [60.3, 4312.0], [60.4, 4321.0], [60.5, 4345.0], [60.6, 4367.0], [60.7, 4389.0], [60.8, 4396.0], [60.9, 4413.0], [61.0, 4431.0], [61.1, 4448.0], [61.2, 4482.0], [61.3, 4494.0], [61.4, 4507.0], [61.5, 4524.0], [61.6, 4532.0], [61.7, 4556.0], [61.8, 4564.0], [61.9, 4571.0], [62.0, 4579.0], [62.1, 4589.0], [62.2, 4601.0], [62.3, 4618.0], [62.4, 4625.0], [62.5, 4649.0], [62.6, 4662.0], [62.7, 4671.0], [62.8, 4712.0], [62.9, 4725.0], [63.0, 4739.0], [63.1, 4765.0], [63.2, 4791.0], [63.3, 4800.0], [63.4, 4826.0], [63.5, 4852.0], [63.6, 4864.0], [63.7, 4883.0], [63.8, 4894.0], [63.9, 4899.0], [64.0, 4920.0], [64.1, 4936.0], [64.2, 4958.0], [64.3, 4982.0], [64.4, 5002.0], [64.5, 5022.0], [64.6, 5045.0], [64.7, 5063.0], [64.8, 5078.0], [64.9, 5106.0], [65.0, 5131.0], [65.1, 5152.0], [65.2, 5176.0], [65.3, 5194.0], [65.4, 5215.0], [65.5, 5223.0], [65.6, 5228.0], [65.7, 5258.0], [65.8, 5273.0], [65.9, 5289.0], [66.0, 5318.0], [66.1, 5341.0], [66.2, 5357.0], [66.3, 5362.0], [66.4, 5379.0], [66.5, 5386.0], [66.6, 5395.0], [66.7, 5428.0], [66.8, 5443.0], [66.9, 5462.0], [67.0, 5471.0], [67.1, 5479.0], [67.2, 5502.0], [67.3, 5518.0], [67.4, 5537.0], [67.5, 5556.0], [67.6, 5577.0], [67.7, 5593.0], [67.8, 5621.0], [67.9, 5638.0], [68.0, 5659.0], [68.1, 5676.0], [68.2, 5697.0], [68.3, 5704.0], [68.4, 5711.0], [68.5, 5720.0], [68.6, 5738.0], [68.7, 5762.0], [68.8, 5774.0], [68.9, 5793.0], [69.0, 5809.0], [69.1, 5822.0], [69.2, 5844.0], [69.3, 5889.0], [69.4, 5922.0], [69.5, 5944.0], [69.6, 5960.0], [69.7, 5997.0], [69.8, 6002.0], [69.9, 6024.0], [70.0, 6057.0], [70.1, 6068.0], [70.2, 6074.0], [70.3, 6108.0], [70.4, 6133.0], [70.5, 6154.0], [70.6, 6166.0], [70.7, 6171.0], [70.8, 6192.0], [70.9, 6197.0], [71.0, 6222.0], [71.1, 6231.0], [71.2, 6239.0], [71.3, 6282.0], [71.4, 6289.0], [71.5, 6308.0], [71.6, 6334.0], [71.7, 6345.0], [71.8, 6368.0], [71.9, 6378.0], [72.0, 6386.0], [72.1, 6401.0], [72.2, 6417.0], [72.3, 6440.0], [72.4, 6451.0], [72.5, 6474.0], [72.6, 6482.0], [72.7, 6510.0], [72.8, 6552.0], [72.9, 6565.0], [73.0, 6583.0], [73.1, 6611.0], [73.2, 6627.0], [73.3, 6638.0], [73.4, 6649.0], [73.5, 6657.0], [73.6, 6666.0], [73.7, 6678.0], [73.8, 6694.0], [73.9, 6715.0], [74.0, 6739.0], [74.1, 6760.0], [74.2, 6771.0], [74.3, 6793.0], [74.4, 6849.0], [74.5, 6862.0], [74.6, 6870.0], [74.7, 6893.0], [74.8, 6915.0], [74.9, 6925.0], [75.0, 6929.0], [75.1, 6944.0], [75.2, 6977.0], [75.3, 6993.0], [75.4, 7010.0], [75.5, 7042.0], [75.6, 7055.0], [75.7, 7073.0], [75.8, 7082.0], [75.9, 7100.0], [76.0, 7116.0], [76.1, 7126.0], [76.2, 7145.0], [76.3, 7157.0], [76.4, 7175.0], [76.5, 7185.0], [76.6, 7206.0], [76.7, 7246.0], [76.8, 7272.0], [76.9, 7283.0], [77.0, 7293.0], [77.1, 7311.0], [77.2, 7322.0], [77.3, 7334.0], [77.4, 7342.0], [77.5, 7348.0], [77.6, 7351.0], [77.7, 7377.0], [77.8, 7391.0], [77.9, 7404.0], [78.0, 7422.0], [78.1, 7436.0], [78.2, 7464.0], [78.3, 7480.0], [78.4, 7493.0], [78.5, 7524.0], [78.6, 7545.0], [78.7, 7556.0], [78.8, 7571.0], [78.9, 7577.0], [79.0, 7582.0], [79.1, 7604.0], [79.2, 7629.0], [79.3, 7644.0], [79.4, 7657.0], [79.5, 7675.0], [79.6, 7692.0], [79.7, 7745.0], [79.8, 7758.0], [79.9, 7776.0], [80.0, 7803.0], [80.1, 7819.0], [80.2, 7870.0], [80.3, 7893.0], [80.4, 7909.0], [80.5, 7923.0], [80.6, 7933.0], [80.7, 7966.0], [80.8, 7995.0], [80.9, 8009.0], [81.0, 8028.0], [81.1, 8044.0], [81.2, 8061.0], [81.3, 8070.0], [81.4, 8088.0], [81.5, 8100.0], [81.6, 8107.0], [81.7, 8118.0], [81.8, 8134.0], [81.9, 8157.0], [82.0, 8178.0], [82.1, 8188.0], [82.2, 8194.0], [82.3, 8220.0], [82.4, 8232.0], [82.5, 8273.0], [82.6, 8295.0], [82.7, 8309.0], [82.8, 8320.0], [82.9, 8339.0], [83.0, 8360.0], [83.1, 8397.0], [83.2, 8403.0], [83.3, 8412.0], [83.4, 8417.0], [83.5, 8435.0], [83.6, 8438.0], [83.7, 8458.0], [83.8, 8471.0], [83.9, 8478.0], [84.0, 8503.0], [84.1, 8511.0], [84.2, 8534.0], [84.3, 8561.0], [84.4, 8574.0], [84.5, 8591.0], [84.6, 8613.0], [84.7, 8648.0], [84.8, 8663.0], [84.9, 8696.0], [85.0, 8707.0], [85.1, 8718.0], [85.2, 8738.0], [85.3, 8750.0], [85.4, 8758.0], [85.5, 8765.0], [85.6, 8770.0], [85.7, 8789.0], [85.8, 8806.0], [85.9, 8824.0], [86.0, 8841.0], [86.1, 8863.0], [86.2, 8873.0], [86.3, 8886.0], [86.4, 8894.0], [86.5, 8900.0], [86.6, 8914.0], [86.7, 8930.0], [86.8, 8941.0], [86.9, 8947.0], [87.0, 8956.0], [87.1, 8978.0], [87.2, 8990.0], [87.3, 9011.0], [87.4, 9021.0], [87.5, 9028.0], [87.6, 9033.0], [87.7, 9048.0], [87.8, 9067.0], [87.9, 9090.0], [88.0, 9108.0], [88.1, 9133.0], [88.2, 9154.0], [88.3, 9161.0], [88.4, 9170.0], [88.5, 9208.0], [88.6, 9223.0], [88.7, 9235.0], [88.8, 9262.0], [88.9, 9286.0], [89.0, 9290.0], [89.1, 9314.0], [89.2, 9332.0], [89.3, 9347.0], [89.4, 9387.0], [89.5, 9402.0], [89.6, 9423.0], [89.7, 9444.0], [89.8, 9464.0], [89.9, 9471.0], [90.0, 9508.0], [90.1, 9519.0], [90.2, 9530.0], [90.3, 9559.0], [90.4, 9583.0], [90.5, 9600.0], [90.6, 9627.0], [90.7, 9640.0], [90.8, 9650.0], [90.9, 9659.0], [91.0, 9684.0], [91.1, 9710.0], [91.2, 9728.0], [91.3, 9761.0], [91.4, 9787.0], [91.5, 9802.0], [91.6, 9830.0], [91.7, 9850.0], [91.8, 9864.0], [91.9, 9872.0], [92.0, 9879.0], [92.1, 9894.0], [92.2, 9913.0], [92.3, 9941.0], [92.4, 9953.0], [92.5, 9966.0], [92.6, 9985.0], [92.7, 9991.0], [92.8, 10011.0], [92.9, 10026.0], [93.0, 10038.0], [93.1, 10062.0], [93.2, 10087.0], [93.3, 10103.0], [93.4, 10122.0], [93.5, 10138.0], [93.6, 10176.0], [93.7, 10216.0], [93.8, 10218.0], [93.9, 10243.0], [94.0, 10253.0], [94.1, 10291.0], [94.2, 10302.0], [94.3, 10330.0], [94.4, 10350.0], [94.5, 10367.0], [94.6, 10391.0], [94.7, 10403.0], [94.8, 10427.0], [94.9, 10460.0], [95.0, 10465.0], [95.1, 10478.0], [95.2, 10492.0], [95.3, 10511.0], [95.4, 10546.0], [95.5, 10590.0], [95.6, 10608.0], [95.7, 10626.0], [95.8, 10641.0], [95.9, 10662.0], [96.0, 10673.0], [96.1, 10711.0], [96.2, 10723.0], [96.3, 10739.0], [96.4, 10751.0], [96.5, 10776.0], [96.6, 10796.0], [96.7, 10804.0], [96.8, 10828.0], [96.9, 10861.0], [97.0, 10871.0], [97.1, 10888.0], [97.2, 10908.0], [97.3, 10937.0], [97.4, 10951.0], [97.5, 10961.0], [97.6, 10983.0], [97.7, 10999.0], [97.8, 11020.0], [97.9, 11029.0], [98.0, 11042.0], [98.1, 11050.0], [98.2, 11085.0], [98.3, 11104.0], [98.4, 11158.0], [98.5, 11183.0], [98.6, 11238.0], [98.7, 11312.0], [98.8, 11364.0], [98.9, 11385.0], [99.0, 11394.0], [99.1, 11446.0], [99.2, 11541.0], [99.3, 11558.0], [99.4, 11619.0], [99.5, 11667.0], [99.6, 11694.0], [99.7, 11897.0], [99.8, 12085.0], [99.9, 12371.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1423.0, "series": [{"data": [[0.0, 1423.0], [100.0, 88.0], [200.0, 41.0], [300.0, 24.0], [400.0, 25.0], [500.0, 20.0], [600.0, 21.0], [700.0, 24.0], [800.0, 19.0], [900.0, 24.0], [1000.0, 12.0], [1100.0, 17.0], [1200.0, 16.0], [1300.0, 22.0], [1400.0, 31.0], [1500.0, 19.0], [1600.0, 24.0], [1700.0, 27.0], [1800.0, 22.0], [1900.0, 20.0], [2000.0, 19.0], [2100.0, 16.0], [2300.0, 13.0], [2200.0, 19.0], [2400.0, 26.0], [2500.0, 21.0], [2600.0, 24.0], [2700.0, 22.0], [2800.0, 26.0], [2900.0, 15.0], [3000.0, 25.0], [3100.0, 18.0], [3300.0, 15.0], [3200.0, 26.0], [3400.0, 15.0], [3500.0, 21.0], [3600.0, 30.0], [3700.0, 34.0], [3800.0, 9.0], [3900.0, 24.0], [4000.0, 32.0], [4200.0, 26.0], [4300.0, 27.0], [4100.0, 16.0], [4500.0, 32.0], [4400.0, 21.0], [4600.0, 21.0], [4800.0, 25.0], [4700.0, 23.0], [4900.0, 19.0], [5000.0, 20.0], [5100.0, 17.0], [5300.0, 28.0], [5200.0, 24.0], [5500.0, 23.0], [5400.0, 23.0], [5600.0, 19.0], [5700.0, 28.0], [5800.0, 16.0], [6000.0, 21.0], [6100.0, 25.0], [5900.0, 17.0], [6200.0, 22.0], [6300.0, 24.0], [6400.0, 24.0], [6500.0, 15.0], [6600.0, 31.0], [6900.0, 24.0], [6800.0, 16.0], [6700.0, 21.0], [7100.0, 28.0], [7000.0, 22.0], [7200.0, 17.0], [7400.0, 22.0], [7300.0, 34.0], [7600.0, 21.0], [7500.0, 27.0], [7800.0, 15.0], [7900.0, 20.0], [7700.0, 16.0], [8000.0, 25.0], [8100.0, 29.0], [8400.0, 34.0], [8200.0, 18.0], [8700.0, 34.0], [8500.0, 24.0], [8300.0, 19.0], [8600.0, 14.0], [8900.0, 32.0], [8800.0, 28.0], [9000.0, 25.0], [9200.0, 23.0], [9100.0, 23.0], [9400.0, 21.0], [9300.0, 16.0], [9500.0, 20.0], [9600.0, 23.0], [9700.0, 17.0], [10100.0, 15.0], [9900.0, 23.0], [10000.0, 23.0], [9800.0, 26.0], [10200.0, 20.0], [10400.0, 24.0], [10600.0, 22.0], [10700.0, 22.0], [10300.0, 18.0], [10500.0, 13.0], [11000.0, 23.0], [10800.0, 21.0], [10900.0, 22.0], [11100.0, 10.0], [11200.0, 6.0], [11600.0, 10.0], [11500.0, 8.0], [11300.0, 13.0], [11400.0, 6.0], [11700.0, 3.0], [11900.0, 2.0], [11800.0, 1.0], [12200.0, 3.0], [12000.0, 2.0], [12700.0, 1.0], [12300.0, 1.0], [12500.0, 1.0], [12400.0, 1.0], [13800.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 13800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 204.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2198.0, "series": [{"data": [[0.0, 1603.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 204.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2198.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 5.967741935483869, "minX": 1.699973321E12, "maxY": 1712.7857142857144, "series": [{"data": [[1.699973336E12, 655.0419161676651], [1.699973335E12, 821.1272727272728], [1.699973334E12, 981.589743589744], [1.699973338E12, 343.0967741935484], [1.699973337E12, 496.07284768211935], [1.69997334E12, 41.24691358024691], [1.699973339E12, 173.6902173913044], [1.699973322E12, 5.967741935483869], [1.699973321E12, 15.136690647482022], [1.699973325E12, 413.49315068493155], [1.699973324E12, 81.43251533742327], [1.699973323E12, 8.241379310344831], [1.699973328E12, 1459.9115646258508], [1.699973327E12, 1105.666666666666], [1.699973326E12, 782.1217948717948], [1.69997333E12, 1588.591463414634], [1.699973329E12, 1712.7857142857144], [1.699973333E12, 1131.0979020979023], [1.699973332E12, 1283.5740740740746], [1.699973331E12, 1435.6619718309867]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.69997334E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 6.0, "minX": 1.0, "maxY": 11985.0, "series": [{"data": [[2.0, 441.88461538461536], [3.0, 112.79245283018868], [4.0, 80.90322580645162], [5.0, 10.012345679012345], [6.0, 134.45977011494253], [7.0, 83.07272727272728], [8.0, 9.447761194029848], [9.0, 239.6020408163265], [10.0, 185.83076923076922], [11.0, 345.9189189189189], [12.0, 12.028571428571432], [13.0, 1011.7727272727274], [14.0, 727.7647058823529], [15.0, 19.72727272727273], [16.0, 2264.1], [17.0, 933.75], [18.0, 890.7692307692308], [19.0, 1812.2857142857142], [20.0, 1832.4285714285716], [21.0, 1870.8333333333333], [22.0, 2829.25], [23.0, 1612.142857142857], [24.0, 53.6], [25.0, 3246.7142857142853], [26.0, 56.666666666666664], [27.0, 2224.7], [28.0, 91.0], [29.0, 7472.333333333333], [30.0, 11558.0], [31.0, 10946.0], [32.0, 5438.0], [33.0, 10980.0], [34.0, 5878.5], [35.0, 10870.0], [36.0, 5921.0], [37.0, 5465.0], [39.0, 5605.5], [38.0, 5475.0], [41.0, 7384.333333333333], [40.0, 36.0], [42.0, 5594.5], [43.0, 33.5], [45.0, 11336.5], [44.0, 11738.0], [47.0, 3913.3333333333335], [46.0, 11151.0], [49.0, 3811.3333333333335], [48.0, 3717.6666666666665], [50.0, 571.9047619047619], [51.0, 2883.25], [52.0, 3782.3333333333335], [53.0, 11094.0], [55.0, 5645.25], [54.0, 52.5], [56.0, 68.0], [57.0, 7853.666666666666], [58.0, 1443.875], [59.0, 2774.75], [61.0, 2718.5], [60.0, 5421.0], [63.0, 1149.6000000000001], [62.0, 2169.8], [65.0, 95.0], [64.0, 2896.75], [67.0, 2994.0], [66.0, 7722.333333333334], [68.0, 50.75], [71.0, 3639.833333333333], [70.0, 82.5], [69.0, 11148.0], [73.0, 3931.0], [72.0, 2825.5], [74.0, 5539.0], [75.0, 11364.0], [78.0, 1432.25], [79.0, 207.5], [77.0, 7922.333333333333], [76.0, 92.5], [80.0, 205.0], [83.0, 5601.5], [82.0, 10951.0], [81.0, 10687.666666666666], [87.0, 3805.3333333333335], [86.0, 3879.0], [85.0, 5504.5], [89.0, 2830.5], [90.0, 2900.0], [91.0, 10664.5], [92.0, 5840.0], [95.0, 10620.0], [94.0, 11024.5], [99.0, 3638.833333333333], [97.0, 2795.5], [98.0, 120.0], [96.0, 76.0], [102.0, 5499.0], [103.0, 11104.0], [101.0, 10838.0], [106.0, 2742.25], [107.0, 3696.0], [105.0, 3606.3333333333335], [104.0, 6955.0], [109.0, 2326.8], [108.0, 2427.8], [111.0, 3844.333333333333], [110.0, 129.0], [112.0, 1909.4999999999998], [113.0, 2976.5], [114.0, 3601.0], [115.0, 5942.0], [119.0, 5716.5], [118.0, 11518.0], [117.0, 11385.0], [116.0, 10593.0], [123.0, 5253.5], [122.0, 10478.0], [121.0, 10557.0], [125.0, 124.33333333333333], [126.0, 4344.0], [124.0, 5344.0], [127.0, 50.0], [129.0, 3686.0], [131.0, 5492.5], [133.0, 161.0], [135.0, 10719.666666666666], [132.0, 10403.0], [128.0, 10754.5], [137.0, 2895.0], [136.0, 5406.5], [143.0, 10673.0], [142.0, 11686.0], [141.0, 11045.0], [140.0, 10656.0], [139.0, 10618.5], [150.0, 10400.0], [149.0, 10766.0], [148.0, 10548.0], [146.0, 10908.0], [145.0, 10961.0], [144.0, 10796.0], [154.0, 1848.625], [155.0, 1792.857142857143], [157.0, 231.0], [156.0, 3651.3333333333335], [153.0, 5863.5], [159.0, 10476.0], [158.0, 10288.0], [152.0, 10720.5], [167.0, 2408.2], [166.0, 5261.5], [165.0, 11400.0], [164.0, 10804.0], [163.0, 11667.0], [162.0, 10738.0], [161.0, 10358.0], [160.0, 10511.0], [168.0, 3487.3333333333335], [170.0, 5347.5], [171.0, 3513.0], [173.0, 5264.0], [172.0, 3721.3333333333335], [175.0, 10460.0], [174.0, 10109.0], [169.0, 10248.0], [183.0, 11189.0], [182.0, 10285.0], [181.0, 10151.0], [180.0, 10647.5], [179.0, 10864.0], [177.0, 10242.0], [176.0, 11057.0], [189.0, 5691.5], [188.0, 5852.5], [191.0, 10224.5], [186.0, 11542.0], [185.0, 10689.0], [184.0, 11389.0], [194.0, 174.8], [195.0, 3687.833333333333], [193.0, 5562.0], [196.0, 152.0], [197.0, 6981.666666666667], [199.0, 3808.3333333333335], [198.0, 5669.0], [192.0, 10048.0], [207.0, 10034.0], [206.0, 9978.0], [205.0, 9991.0], [204.0, 10181.0], [203.0, 10489.0], [202.0, 10212.0], [200.0, 10023.0], [213.0, 5140.0], [212.0, 5054.0], [215.0, 2977.0], [214.0, 10029.0], [211.0, 10874.0], [210.0, 10371.0], [209.0, 10018.0], [208.0, 10095.0], [216.0, 5087.5], [217.0, 3623.0], [219.0, 5262.5], [223.0, 10026.0], [222.0, 10318.0], [221.0, 9985.0], [220.0, 10146.0], [218.0, 10487.0], [228.0, 3948.6666666666665], [226.0, 5187.5], [229.0, 5111.5], [231.0, 4991.5], [230.0, 10996.0], [227.0, 9873.0], [225.0, 10038.0], [224.0, 11017.0], [233.0, 5172.5], [239.0, 10122.0], [238.0, 9836.0], [237.0, 10095.0], [236.0, 9966.0], [235.0, 10711.0], [234.0, 11064.0], [232.0, 9892.0], [244.0, 6926.0], [246.0, 463.5], [245.0, 5024.0], [247.0, 7164.333333333333], [242.0, 10363.0], [240.0, 10133.0], [249.0, 5465.0], [250.0, 294.0], [252.0, 5250.5], [253.0, 5071.0], [255.0, 10500.0], [254.0, 9877.0], [251.0, 10398.0], [248.0, 9868.0], [270.0, 5329.0], [262.0, 3459.0], [261.0, 5036.0], [260.0, 10218.0], [263.0, 2832.5], [257.0, 10906.0], [256.0, 10462.0], [259.0, 9908.0], [258.0, 9759.0], [266.0, 5057.5], [271.0, 10301.0], [265.0, 10789.0], [264.0, 10075.0], [269.0, 10007.0], [268.0, 11389.0], [267.0, 10341.0], [274.0, 6172.5], [272.0, 5042.0], [275.0, 3811.0], [285.0, 10103.0], [284.0, 9699.0], [273.0, 5204.0], [278.0, 160.0], [277.0, 9703.0], [276.0, 9860.0], [279.0, 6930.0], [280.0, 5065.0], [282.0, 6642.0], [283.0, 10203.0], [287.0, 5246.0], [286.0, 9796.0], [302.0, 9807.0], [289.0, 3481.6666666666665], [291.0, 6748.0], [295.0, 3594.3333333333335], [288.0, 9870.0], [294.0, 10218.0], [293.0, 9941.0], [292.0, 10122.0], [296.0, 3379.3333333333335], [299.0, 5029.5], [298.0, 9634.0], [303.0, 9633.0], [301.0, 9802.0], [300.0, 10403.0], [317.0, 9722.0], [304.0, 5059.0], [305.0, 10293.0], [306.0, 5149.0], [307.0, 5258.0], [312.0, 5211.0], [315.0, 10293.0], [314.0, 9623.0], [311.0, 5124.0], [310.0, 9810.5], [308.0, 10240.0], [319.0, 10475.0], [318.0, 10002.0], [316.0, 9576.0], [335.0, 9587.0], [328.0, 1107.0], [332.0, 5367.5], [334.0, 10160.0], [331.0, 9454.0], [330.0, 9531.0], [329.0, 9517.5], [327.0, 9521.0], [321.0, 10216.0], [320.0, 10427.0], [323.0, 9872.0], [322.0, 9659.0], [326.0, 9797.0], [325.0, 9917.0], [324.0, 9526.0], [348.0, 3602.0], [338.0, 4947.5], [343.0, 9559.0], [336.0, 9461.0], [337.0, 9979.0], [340.0, 6625.666666666667], [342.0, 6482.0], [347.0, 5012.0], [346.0, 5498.0], [349.0, 5267.0], [351.0, 9877.0], [345.0, 9648.0], [344.0, 9399.0], [350.0, 9589.0], [365.0, 9342.0], [353.0, 309.0], [355.0, 5147.5], [354.0, 9640.0], [358.0, 4917.0], [357.0, 10032.0], [356.0, 11985.0], [359.0, 9347.0], [352.0, 9404.0], [362.0, 4976.0], [361.0, 9346.0], [360.0, 9719.0], [367.0, 9402.0], [366.0, 9952.0], [364.0, 10218.0], [363.0, 9357.0], [382.0, 5096.5], [376.0, 4917.0], [372.0, 6991.666666666667], [373.0, 9907.0], [375.0, 9530.0], [368.0, 9657.0], [370.0, 9423.0], [369.0, 10845.0], [374.0, 9864.0], [379.0, 4397.333333333334], [383.0, 5352.0], [381.0, 9235.0], [380.0, 9340.0], [378.0, 9289.0], [377.0, 9293.0], [396.0, 4837.0], [384.0, 5485.5], [386.0, 5008.0], [385.0, 11606.0], [387.0, 9408.0], [390.0, 6591.666666666667], [388.0, 9627.0], [391.0, 3598.3333333333335], [392.0, 4849.5], [395.0, 3904.0], [394.0, 9289.0], [393.0, 9297.0], [399.0, 9493.0], [398.0, 9410.0], [397.0, 10253.0], [414.0, 9236.0], [407.0, 4997.0], [401.0, 9765.0], [400.0, 9952.0], [403.0, 9148.0], [402.0, 9163.0], [406.0, 9223.0], [405.0, 9159.5], [413.0, 4847.0], [412.0, 5069.0], [415.0, 934.0], [411.0, 9088.0], [410.0, 10502.0], [409.0, 10176.0], [408.0, 9090.0], [430.0, 4855.5], [423.0, 3689.6666666666665], [416.0, 6387.666666666667], [417.0, 9635.0], [419.0, 9436.0], [418.0, 9101.0], [422.0, 4953.0], [421.0, 10062.0], [420.0, 10306.0], [425.0, 5708.5], [431.0, 9475.0], [424.0, 9133.0], [429.0, 9033.0], [428.0, 9026.0], [427.0, 9059.0], [426.0, 9034.0], [445.0, 3580.3333333333335], [432.0, 5009.0], [447.0, 2217.333333333333], [446.0, 3645.3333333333335], [444.0, 11002.0], [435.0, 9248.0], [433.0, 9290.0], [443.0, 11694.0], [442.0, 8954.0], [441.0, 8955.5], [439.0, 8976.5], [437.0, 9106.0], [436.0, 10613.0], [460.0, 4977.0], [450.0, 4931.0], [451.0, 9029.0], [449.0, 4867.0], [452.0, 4869.5], [453.0, 8887.0], [455.0, 4861.5], [448.0, 9659.0], [454.0, 8897.0], [458.0, 6243.666666666667], [456.0, 8899.0], [459.0, 9034.0], [462.0, 5177.5], [463.0, 9018.0], [461.0, 9161.0], [478.0, 8988.0], [465.0, 923.0], [464.0, 8864.0], [467.0, 8841.0], [466.0, 8975.5], [477.0, 4713.5], [476.0, 5298.0], [479.0, 2694.8], [475.0, 8862.0], [474.0, 8985.0], [473.0, 8822.0], [471.0, 8824.0], [470.0, 9033.0], [469.0, 8813.0], [468.0, 9241.0], [493.0, 9055.0], [495.0, 8710.0], [480.0, 745.0], [488.0, 4992.0], [494.0, 8691.0], [492.0, 8798.0], [483.0, 8771.0], [482.0, 9370.0], [481.0, 9916.5], [491.0, 9508.0], [490.0, 8801.0], [487.0, 8973.0], [486.0, 9115.0], [485.0, 8932.0], [484.0, 9266.0], [511.0, 8738.0], [507.0, 5057.5], [510.0, 4861.0], [509.0, 9182.0], [508.0, 9879.0], [499.0, 9229.0], [498.0, 11098.0], [497.0, 9112.0], [496.0, 9193.0], [506.0, 8864.0], [505.0, 8873.0], [504.0, 9728.0], [503.0, 8696.0], [502.0, 9861.0], [501.0, 8863.0], [500.0, 8707.0], [514.0, 4934.5], [540.0, 4838.5], [512.0, 5241.0], [516.0, 10626.0], [518.0, 8943.0], [536.0, 9954.0], [538.0, 10460.0], [526.0, 8776.0], [522.0, 4808.0], [520.0, 8789.0], [524.0, 3514.0], [528.0, 8998.0], [530.0, 10087.0], [532.0, 8991.0], [534.0, 9031.0], [542.0, 8838.0], [546.0, 8755.0], [574.0, 4744.0], [544.0, 8509.0], [548.0, 8914.0], [550.0, 8789.0], [556.0, 8559.0], [554.0, 8571.0], [552.0, 8561.0], [568.0, 8450.0], [566.0, 2802.25], [564.0, 4893.5], [572.0, 766.0], [570.0, 8891.0], [560.0, 8499.0], [562.0, 8642.0], [580.0, 4974.5], [602.0, 5014.0], [576.0, 8613.0], [578.0, 8458.0], [592.0, 2692.75], [606.0, 8213.0], [604.0, 8448.0], [590.0, 4870.5], [588.0, 8339.0], [586.0, 8648.0], [584.0, 8649.0], [594.0, 2856.5], [598.0, 8785.0], [596.0, 8896.0], [600.0, 8478.0], [582.0, 8362.0], [608.0, 8738.0], [634.0, 8411.5], [614.0, 3342.6666666666665], [632.0, 8226.0], [618.0, 4825.25], [610.0, 8599.0], [612.0, 8371.0], [622.0, 8179.0], [620.0, 8201.0], [616.0, 8679.5], [636.0, 5118.5], [624.0, 8106.0], [626.0, 8547.0], [630.0, 8588.0], [638.0, 8518.0], [640.0, 9253.0], [664.0, 4980.5], [644.0, 8164.0], [646.0, 9027.0], [650.0, 8274.0], [648.0, 8101.0], [652.0, 8028.0], [642.0, 8078.0], [654.0, 8471.0], [662.0, 8100.0], [660.0, 2544.8], [658.0, 8132.0], [656.0, 8107.0], [670.0, 9320.0], [668.0, 8220.0], [666.0, 8400.0], [678.0, 4806.0], [674.0, 4691.0], [672.0, 9021.0], [676.0, 5448.5], [698.0, 8190.0], [700.0, 3760.3333333333335], [688.0, 8770.0], [702.0, 8876.0], [690.0, 8069.0], [692.0, 1631.0], [694.0, 7844.0], [680.0, 5647.0], [682.0, 3121.75], [684.0, 4490.5], [686.0, 8360.0], [706.0, 9067.0], [704.0, 7910.0], [708.0, 8620.0], [718.0, 9191.0], [716.0, 8116.0], [714.0, 7883.0], [712.0, 8092.0], [728.0, 8023.0], [710.0, 3579.6666666666665], [724.0, 8764.0], [722.0, 5229.0], [726.0, 9230.0], [730.0, 3865.6666666666665], [732.0, 7909.0], [734.0, 5134.5], [720.0, 9464.0], [738.0, 4710.5], [736.0, 8425.0], [740.0, 4399.0], [744.0, 8018.0], [746.0, 7835.0], [748.0, 7659.0], [750.0, 7655.0], [752.0, 8653.0], [754.0, 7612.0], [756.0, 7555.0], [758.0, 7576.0], [760.0, 5433.333333333333], [742.0, 7870.0], [764.0, 7554.0], [766.0, 4782.0], [770.0, 2727.5714285714284], [796.0, 7524.0], [768.0, 2718.2], [782.0, 7607.0], [780.0, 7710.0], [778.0, 7621.0], [774.0, 1969.0], [792.0, 7474.0], [794.0, 7595.5], [772.0, 1469.0], [784.0, 8412.0], [786.0, 8876.0], [788.0, 7739.0], [790.0, 7533.0], [798.0, 8157.0], [800.0, 8357.0], [824.0, 7334.0], [808.0, 7580.0], [810.0, 8044.0], [812.0, 7963.0], [802.0, 7618.0], [804.0, 7404.0], [806.0, 7406.0], [814.0, 8278.0], [818.0, 7492.0], [816.0, 7342.0], [820.0, 7711.0], [822.0, 7342.5], [830.0, 7310.0], [826.0, 7481.0], [832.0, 7880.0], [860.0, 1632.0], [834.0, 3289.333333333333], [836.0, 4886.25], [838.0, 7331.0], [856.0, 7408.0], [840.0, 3474.6666666666665], [842.0, 7675.0], [844.0, 7752.0], [846.0, 7942.0], [854.0, 7283.0], [862.0, 1409.3333333333333], [848.0, 7475.0], [850.0, 7995.0], [852.0, 7576.0], [858.0, 7577.0], [864.0, 7279.0], [888.0, 4952.0], [880.0, 5028.0], [866.0, 1675.0], [878.0, 7284.0], [876.0, 7555.0], [874.0, 8013.0], [872.0, 7251.5], [868.0, 7306.0], [870.0, 7184.0], [882.0, 7984.0], [884.0, 1747.0], [886.0, 4508.0], [890.0, 7589.0], [892.0, 7966.0], [894.0, 3196.5], [898.0, 8067.0], [926.0, 7047.0], [916.0, 1859.5], [900.0, 7637.5], [910.0, 7081.0], [908.0, 7191.0], [906.0, 7012.0], [904.0, 7798.0], [918.0, 2728.4], [920.0, 4693.0], [902.0, 7091.0], [914.0, 3035.5], [912.0, 7222.0], [924.0, 7390.0], [922.0, 7100.0], [928.0, 7113.0], [954.0, 7567.0], [936.0, 2837.75], [938.0, 3628.333333333333], [942.0, 4355.0], [930.0, 6914.0], [932.0, 7073.0], [934.0, 7631.0], [952.0, 8034.0], [956.0, 6705.0], [948.0, 4229.0], [946.0, 6986.0], [950.0, 6760.0], [944.0, 7076.0], [958.0, 7464.0], [964.0, 2978.75], [962.0, 3400.333333333333], [984.0, 6651.0], [968.0, 3466.333333333333], [960.0, 6793.0], [970.0, 4089.5], [976.0, 6694.0], [978.0, 7692.0], [980.0, 7998.0], [982.0, 7953.0], [990.0, 3410.333333333333], [986.0, 4397.5], [988.0, 2932.2], [994.0, 6836.0], [1020.0, 7043.0], [992.0, 7791.0], [996.0, 7145.0], [1006.0, 6651.0], [1004.0, 6870.0], [1002.0, 7499.0], [1000.0, 6587.0], [1012.0, 3197.25], [1014.0, 6967.0], [1010.0, 3321.666666666667], [1008.0, 6895.0], [1022.0, 6850.0], [1018.0, 6558.0], [1016.0, 6527.0], [1036.0, 3612.333333333333], [1024.0, 6428.0], [1028.0, 6849.0], [1032.0, 6730.0], [1056.0, 4898.666666666667], [1060.0, 4660.0], [1064.0, 2007.5], [1068.0, 6424.0], [1072.0, 6222.0], [1076.0, 6368.0], [1080.0, 6231.0], [1084.0, 6171.0], [1052.0, 4401.5], [1048.0, 7022.0], [1044.0, 6400.0], [1040.0, 6396.0], [1092.0, 6642.0], [1096.0, 7126.0], [1116.0, 4991.5], [1088.0, 6196.0], [1104.0, 5069.0], [1108.0, 7412.0], [1112.0, 6143.0], [1100.0, 4459.0], [1140.0, 6095.0], [1120.0, 4450.0], [1124.0, 6057.0], [1128.0, 6157.0], [1144.0, 3694.666666666667], [1148.0, 2466.5], [1156.0, 2228.0], [1152.0, 6239.0], [1184.0, 4332.0], [1196.0, 5913.0], [1176.0, 4357.5], [1172.0, 6014.0], [1168.0, 5818.0], [1180.0, 4023.0], [1212.0, 6762.0], [1208.0, 6374.0], [1204.0, 5716.0], [1200.0, 6066.0], [1164.0, 6771.0], [1160.0, 6705.0], [1216.0, 5725.0], [1236.0, 6401.0], [1232.0, 6110.0], [1240.0, 5956.0], [1220.0, 6166.0], [1224.0, 5660.0], [1228.0, 6307.0], [1244.0, 5686.0], [1260.0, 5386.0], [1256.0, 6504.0], [1252.0, 6678.0], [1248.0, 6510.0], [1264.0, 4167.0], [1276.0, 7075.0], [1272.0, 5881.0], [1268.0, 5697.0], [1336.0, 5393.0], [1280.0, 5469.0], [1284.0, 5386.0], [1308.0, 5223.0], [1304.0, 5348.0], [1312.0, 5502.5], [1316.0, 5233.0], [1340.0, 3860.75], [1332.0, 5663.0], [1328.0, 5277.0], [1292.0, 5302.0], [1288.0, 5556.0], [1320.0, 3475.0], [1324.0, 5194.0], [1300.0, 4097.5], [1296.0, 5324.0], [1400.0, 3119.75], [1396.0, 3202.8], [1392.0, 3672.0], [1356.0, 6197.0], [1352.0, 5468.5], [1368.0, 4678.0], [1404.0, 3296.0], [1376.0, 3877.5], [1384.0, 5522.0], [1380.0, 5996.0], [1388.0, 5152.0], [1364.0, 4338.5], [1372.0, 3847.5], [1344.0, 5045.0], [1348.0, 5060.0], [1420.0, 5011.0], [1456.0, 4891.0], [1416.0, 5206.0], [1412.0, 5583.0], [1408.0, 4800.0], [1464.0, 5010.0], [1468.0, 3720.0], [1460.0, 5707.0], [1436.0, 3862.5], [1428.0, 5479.0], [1424.0, 5523.0], [1440.0, 3549.8333333333335], [1448.0, 3898.6666666666665], [1444.0, 4794.5], [1484.0, 3709.0], [1520.0, 3414.5], [1480.0, 4744.0], [1488.0, 4398.0], [1492.0, 4442.5], [1496.0, 4613.0], [1500.0, 4579.0], [1516.0, 3564.0], [1524.0, 4606.0], [1532.0, 5560.0], [1504.0, 4295.0], [1508.0, 4739.0], [1512.0, 4524.0], [1528.0, 3675.0], [1548.0, 4244.0], [1544.0, 5059.5], [1568.0, 3742.0], [1540.0, 4731.0], [1536.0, 4532.0], [1584.0, 4270.0], [1588.0, 4321.0], [1592.0, 3634.0], [1596.0, 4128.5], [1564.0, 4000.6666666666665], [1556.0, 4037.0], [1552.0, 4651.0], [1576.0, 4256.0], [1580.0, 4278.0], [1632.0, 4896.0], [1600.0, 3986.0], [1628.0, 4115.0], [1644.0, 3637.6666666666665], [1640.0, 3703.0], [1636.0, 5692.0], [1656.0, 4311.5], [1648.0, 4057.0], [1652.0, 3286.3333333333335], [1612.0, 3924.0], [1608.0, 4580.0], [1616.0, 3780.0], [1620.0, 4089.3333333333335], [1624.0, 3775.6666666666665], [1668.0, 4430.0], [1664.0, 3646.0], [1692.0, 3514.0], [1688.0, 3664.0], [1672.0, 3567.0], [1684.0, 4122.75], [1680.0, 5796.0], [1700.0, 4511.0], [1724.0, 3637.0], [1720.0, 3365.6666666666665], [1716.0, 3862.0], [1712.0, 3950.0], [1676.0, 3778.0], [1704.0, 3460.5], [1708.0, 3348.5], [1736.0, 3380.0], [1732.0, 4921.0], [1740.0, 4106.0], [1748.0, 3602.0], [1744.0, 3847.0], [1752.0, 3363.5], [1756.0, 3564.0], [1073.0, 6226.0], [1037.0, 2877.2], [1029.0, 4229.0], [1033.0, 6608.0], [1025.0, 8703.0], [1065.0, 3439.6666666666665], [1069.0, 6291.0], [1057.0, 6346.0], [1061.0, 6368.0], [1085.0, 6499.0], [1081.0, 6320.0], [1045.0, 6535.0], [1041.0, 6397.0], [1049.0, 4705.0], [1089.0, 6169.0], [1093.0, 3272.0], [1117.0, 3363.666666666667], [1113.0, 4347.0], [1109.0, 6611.0], [1105.0, 6282.0], [1097.0, 4709.5], [1101.0, 3036.75], [1137.0, 6018.5], [1141.0, 6077.0], [1145.0, 5944.0], [1149.0, 3970.75], [1121.0, 6118.0], [1125.0, 4271.5], [1129.0, 4324.5], [1133.0, 5997.5], [1209.0, 5638.0], [1201.0, 4483.0], [1177.0, 4193.5], [1205.0, 5638.0], [1213.0, 4363.0], [1185.0, 5307.0], [1193.0, 5703.5], [1189.0, 5997.0], [1169.0, 5822.0], [1173.0, 3888.0], [1153.0, 7123.0], [1157.0, 7460.0], [1161.0, 6269.0], [1165.0, 6133.0], [1181.0, 5758.0], [1217.0, 5525.0], [1221.0, 4579.0], [1245.0, 5781.0], [1241.0, 5621.0], [1237.0, 5502.0], [1229.0, 3888.0], [1225.0, 5998.0], [1233.0, 4692.0], [1261.0, 4008.0], [1277.0, 3997.0], [1249.0, 5428.0], [1257.0, 5503.0], [1273.0, 5341.0], [1269.0, 5379.0], [1265.0, 5634.0], [1293.0, 4447.0], [1281.0, 5689.0], [1285.0, 5659.0], [1309.0, 5220.0], [1341.0, 4160.5], [1337.0, 5109.0], [1333.0, 5720.0], [1329.0, 5268.0], [1313.0, 5351.0], [1321.0, 3498.3333333333335], [1317.0, 5241.0], [1301.0, 4227.0], [1297.0, 5804.0], [1393.0, 4860.0], [1397.0, 3770.0], [1345.0, 3294.0], [1357.0, 5005.0], [1353.0, 5800.0], [1349.0, 5206.0], [1401.0, 4773.0], [1377.0, 5190.0], [1381.0, 4903.0], [1405.0, 5412.0], [1385.0, 4007.5], [1389.0, 3863.0], [1365.0, 4029.5], [1361.0, 5167.0], [1369.0, 2949.0], [1373.0, 4958.0], [1413.0, 3897.0], [1461.0, 3534.5], [1409.0, 5079.0], [1457.0, 3702.5], [1421.0, 5022.0], [1417.0, 4713.0], [1465.0, 5593.0], [1469.0, 3300.5], [1429.0, 4796.0], [1425.0, 5142.0], [1433.0, 4909.333333333333], [1437.0, 3668.0], [1449.0, 4657.0], [1453.0, 4691.5], [1441.0, 3031.8], [1445.0, 5228.0], [1477.0, 4646.0], [1481.0, 5711.0], [1473.0, 4579.5], [1489.0, 4304.0], [1493.0, 4982.0], [1501.0, 3449.0], [1485.0, 4712.0], [1521.0, 4571.0], [1525.0, 3458.0], [1529.0, 3236.0], [1533.0, 4141.0], [1505.0, 4883.0], [1509.0, 4322.0], [1513.0, 4214.0], [1545.0, 4546.0], [1585.0, 4168.0], [1541.0, 4565.0], [1537.0, 4089.0], [1549.0, 4663.0], [1589.0, 3397.5], [1593.0, 4066.5], [1597.0, 3674.5], [1561.0, 4112.5], [1557.0, 4092.0], [1553.0, 4078.0], [1565.0, 3416.75], [1573.0, 4637.5], [1569.0, 4201.0], [1577.0, 4710.0], [1581.0, 3804.5], [1657.0, 3799.0], [1601.0, 3555.3333333333335], [1625.0, 3891.3333333333335], [1629.0, 3899.0], [1641.0, 3700.0], [1637.0, 3912.0], [1633.0, 3772.0], [1661.0, 4985.0], [1649.0, 3936.0], [1653.0, 3555.5], [1645.0, 3003.0], [1613.0, 4320.0], [1609.0, 4054.0], [1605.0, 4059.5], [1617.0, 4640.5], [1621.0, 4157.0], [1669.0, 3673.0], [1665.0, 3771.0], [1693.0, 3640.0], [1689.0, 3521.0], [1673.0, 4312.0], [1685.0, 3374.25], [1681.0, 4002.0], [1701.0, 4740.0], [1697.0, 3868.5], [1725.0, 3858.0], [1721.0, 3717.0], [1713.0, 3674.0], [1677.0, 3959.0], [1717.0, 3542.0], [1705.0, 3270.0], [1709.0, 3777.0], [1733.0, 3291.0], [1737.0, 4625.0], [1729.0, 4222.5], [1741.0, 3795.0], [1749.0, 4765.0], [1753.0, 3165.0], [1757.0, 3340.5], [515.0, 8667.0], [513.0, 8791.0], [517.0, 8686.0], [519.0, 8703.0], [537.0, 9550.0], [539.0, 8901.0], [523.0, 2072.0], [525.0, 903.5], [527.0, 9331.0], [521.0, 9137.0], [543.0, 9309.0], [529.0, 8568.0], [531.0, 8587.0], [533.0, 8941.0], [535.0, 8907.0], [541.0, 8564.0], [545.0, 8503.0], [569.0, 3371.6666666666665], [551.0, 5024.5], [559.0, 8719.5], [547.0, 9523.0], [549.0, 8596.0], [557.0, 8476.0], [555.0, 8473.0], [553.0, 8574.0], [565.0, 2687.0], [567.0, 937.0], [571.0, 9088.0], [573.0, 8583.5], [575.0, 8711.0], [561.0, 8511.0], [563.0, 8417.0], [579.0, 8352.0], [577.0, 4918.5], [593.0, 8999.0], [607.0, 8894.0], [605.0, 8326.0], [603.0, 10492.0], [591.0, 4841.0], [589.0, 8298.0], [587.0, 8465.0], [585.0, 8765.0], [599.0, 5029.5], [597.0, 9987.0], [595.0, 8417.0], [601.0, 4763.5], [583.0, 8946.0], [581.0, 8754.0], [609.0, 8193.0], [615.0, 1161.0], [623.0, 8107.0], [611.0, 8328.0], [613.0, 8150.0], [621.0, 9400.0], [619.0, 8124.0], [617.0, 854.0], [639.0, 8111.0], [625.0, 8070.0], [629.0, 8622.5], [627.0, 8741.0], [631.0, 8330.0], [637.0, 8118.0], [635.0, 9654.0], [655.0, 7991.0], [643.0, 4822.5], [645.0, 5206.0], [647.0, 8184.0], [651.0, 3726.6666666666665], [649.0, 8403.0], [653.0, 8142.0], [641.0, 8663.0], [661.0, 2199.857142857143], [663.0, 8817.0], [659.0, 4654.0], [657.0, 8137.0], [671.0, 4806.0], [669.0, 8513.0], [667.0, 8518.0], [665.0, 8098.0], [679.0, 4834.5], [673.0, 3580.6666666666665], [675.0, 7971.0], [677.0, 8793.0], [697.0, 8616.5], [699.0, 8181.0], [703.0, 8547.0], [701.0, 8088.0], [689.0, 4752.0], [691.0, 4986.0], [695.0, 7913.0], [693.0, 8457.5], [681.0, 5844.5], [683.0, 7918.0], [685.0, 7893.0], [687.0, 5386.5], [707.0, 8456.0], [729.0, 4426.0], [705.0, 4925.0], [709.0, 8770.0], [719.0, 8901.0], [717.0, 8320.0], [715.0, 8222.0], [713.0, 8054.0], [711.0, 4794.0], [723.0, 4490.5], [725.0, 4990.5], [727.0, 8448.0], [731.0, 5169.0], [733.0, 5277.0], [735.0, 7753.0], [721.0, 7760.0], [739.0, 4771.0], [741.0, 4687.5], [737.0, 7713.0], [745.0, 4936.0], [747.0, 8591.0], [749.0, 8029.0], [751.0, 7661.0], [759.0, 1366.0], [767.0, 7651.0], [753.0, 8071.0], [755.0, 7925.0], [757.0, 7819.0], [761.0, 4848.5], [743.0, 8045.0], [763.0, 5464.666666666667], [765.0, 7803.0], [769.0, 2715.166666666667], [771.0, 3897.0], [783.0, 7774.0], [781.0, 8309.0], [779.0, 7808.0], [777.0, 7527.5], [773.0, 4879.25], [775.0, 8288.5], [795.0, 7535.0], [797.0, 8134.0], [799.0, 7395.0], [785.0, 8004.0], [787.0, 8956.0], [791.0, 8415.0], [815.0, 8108.0], [829.0, 7351.0], [809.0, 4752.0], [811.0, 8249.0], [813.0, 7479.0], [803.0, 7382.0], [805.0, 7402.0], [807.0, 7431.0], [819.0, 1439.0], [817.0, 7328.0], [823.0, 7816.0], [831.0, 3584.0], [827.0, 7765.0], [825.0, 7348.0], [847.0, 7932.0], [837.0, 7311.0], [839.0, 7493.0], [857.0, 7265.0], [841.0, 7340.0], [843.0, 7649.0], [845.0, 7512.0], [833.0, 7315.0], [853.0, 4439.0], [861.0, 4508.5], [863.0, 7275.0], [849.0, 7377.0], [851.0, 7293.0], [859.0, 7265.0], [867.0, 4447.25], [865.0, 4878.0], [879.0, 7150.0], [877.0, 7637.0], [875.0, 8748.0], [873.0, 7217.0], [869.0, 7437.0], [883.0, 4584.0], [885.0, 7385.0], [887.0, 3384.333333333333], [889.0, 3674.0], [891.0, 7355.0], [893.0, 7350.0], [895.0, 8178.0], [903.0, 7092.0], [901.0, 4250.0], [911.0, 6993.0], [897.0, 7974.5], [907.0, 6998.0], [905.0, 7012.0], [921.0, 3604.333333333333], [919.0, 3328.0], [917.0, 4691.75], [915.0, 2961.25], [913.0, 4833.0], [925.0, 7538.0], [923.0, 6919.0], [943.0, 7058.0], [939.0, 4172.5], [937.0, 2872.0], [941.0, 7085.5], [929.0, 7060.0], [931.0, 7177.0], [933.0, 7043.0], [935.0, 6869.0], [953.0, 7905.0], [955.0, 7272.0], [957.0, 7311.0], [945.0, 4659.5], [947.0, 6915.0], [949.0, 7206.0], [951.0, 7436.0], [959.0, 7175.0], [961.0, 7157.0], [987.0, 3564.666666666667], [963.0, 7379.0], [965.0, 7110.0], [967.0, 7162.0], [969.0, 6628.0], [971.0, 4100.0], [975.0, 6856.5], [973.0, 7804.5], [977.0, 4393.0], [979.0, 7776.0], [981.0, 6577.0], [983.0, 6666.0], [991.0, 7185.0], [985.0, 6794.0], [989.0, 3336.0], [995.0, 4468.0], [1009.0, 4280.0], [993.0, 6947.0], [997.0, 8045.0], [1007.0, 6638.0], [1005.0, 6583.0], [1003.0, 6725.0], [999.0, 5827.333333333333], [1013.0, 6683.0], [1015.0, 6977.0], [1011.0, 2719.3333333333335], [1023.0, 7571.0], [1021.0, 6862.0], [1019.0, 6692.0], [1017.0, 7579.0], [1078.0, 6233.0], [1086.0, 6197.0], [1026.0, 2594.0], [1030.0, 6446.0], [1034.0, 6749.0], [1062.0, 6343.0], [1066.0, 6297.0], [1070.0, 6448.0], [1038.0, 4948.0], [1074.0, 6823.0], [1082.0, 6168.0], [1050.0, 6573.0], [1046.0, 7008.0], [1054.0, 5269.0], [1090.0, 4450.0], [1094.0, 3619.333333333333], [1118.0, 3348.75], [1106.0, 6140.0], [1110.0, 6911.0], [1114.0, 3308.0], [1098.0, 4076.5], [1138.0, 5987.0], [1102.0, 6378.0], [1142.0, 7246.0], [1122.0, 6234.0], [1126.0, 6915.0], [1146.0, 6262.0], [1150.0, 6417.0], [1202.0, 6194.0], [1154.0, 4185.0], [1186.0, 5779.0], [1194.0, 5697.0], [1190.0, 6308.0], [1198.0, 6167.5], [1170.0, 5830.0], [1182.0, 2941.0], [1178.0, 5922.0], [1214.0, 5734.0], [1210.0, 6108.0], [1206.0, 6378.0], [1166.0, 6463.0], [1162.0, 6000.0], [1158.0, 6071.0], [1246.0, 5597.0], [1274.0, 5354.0], [1238.0, 2627.0], [1234.0, 5478.0], [1242.0, 5670.0], [1218.0, 6601.0], [1222.0, 5568.0], [1226.0, 5941.0], [1230.0, 5475.0], [1262.0, 3909.0], [1258.0, 5719.0], [1254.0, 5508.0], [1250.0, 7189.0], [1278.0, 5738.0], [1270.0, 5376.0], [1338.0, 3977.5], [1286.0, 3324.0], [1282.0, 3678.0], [1306.0, 5739.5], [1314.0, 3884.333333333333], [1318.0, 6458.0], [1342.0, 3357.0], [1330.0, 6555.0], [1294.0, 5460.0], [1290.0, 5357.0], [1326.0, 5265.5], [1322.0, 5933.0], [1298.0, 5227.0], [1302.0, 5378.0], [1354.0, 5443.0], [1358.0, 5002.0], [1350.0, 4207.5], [1398.0, 3595.0], [1402.0, 4755.0], [1386.0, 4231.0], [1390.0, 4852.0], [1362.0, 5372.0], [1370.0, 4309.0], [1374.0, 4968.0], [1346.0, 5176.0], [1422.0, 5032.0], [1462.0, 2556.0], [1418.0, 4709.0], [1414.0, 4898.0], [1410.0, 4987.0], [1466.0, 4875.0], [1470.0, 4505.0], [1458.0, 4664.0], [1434.0, 5143.0], [1426.0, 4794.0], [1438.0, 4932.0], [1442.0, 3412.0], [1446.0, 4558.0], [1450.0, 4585.0], [1454.0, 4748.0], [1478.0, 3891.0], [1526.0, 3796.5], [1474.0, 4436.0], [1502.0, 4310.0], [1482.0, 4345.0], [1490.0, 3593.0], [1494.0, 4438.0], [1498.0, 4438.0], [1518.0, 4281.5], [1486.0, 4662.0], [1522.0, 4448.0], [1506.0, 4579.0], [1510.0, 5023.0], [1514.0, 4899.0], [1534.0, 4218.0], [1550.0, 4058.0], [1546.0, 3276.6666666666665], [1542.0, 5393.0], [1538.0, 4569.0], [1566.0, 4005.0], [1586.0, 3941.0], [1590.0, 3916.0], [1594.0, 4488.0], [1598.0, 3871.0], [1562.0, 4625.0], [1558.0, 4084.0], [1554.0, 4894.0], [1574.0, 4274.0], [1570.0, 4035.0], [1578.0, 4182.0], [1582.0, 3736.0], [1662.0, 3986.0], [1658.0, 3847.5], [1602.0, 4199.0], [1622.0, 3457.5], [1630.0, 4413.0], [1642.0, 3696.0], [1638.0, 4538.0], [1634.0, 3988.0], [1654.0, 3669.3333333333335], [1650.0, 3599.5], [1646.0, 4594.0], [1614.0, 2920.0], [1610.0, 3791.0], [1606.0, 4114.0], [1618.0, 3937.0], [1670.0, 3619.0], [1718.0, 3418.8], [1666.0, 3683.0], [1694.0, 3791.0], [1690.0, 3743.0], [1686.0, 4431.0], [1674.0, 3757.0], [1682.0, 4663.0], [1702.0, 4375.0], [1698.0, 3647.0], [1722.0, 3378.0], [1678.0, 4499.0], [1706.0, 4316.0], [1710.0, 4713.0], [1734.0, 3874.0], [1754.0, 3183.0], [1738.0, 4465.0], [1730.0, 3721.0], [1766.0, 3430.4], [1750.0, 3198.25], [1746.0, 3216.5], [1758.0, 3292.5], [1075.0, 4522.0], [1035.0, 6928.0], [1031.0, 6565.0], [1051.0, 6334.0], [1027.0, 7187.0], [1039.0, 3441.333333333333], [1067.0, 6289.0], [1071.0, 6288.0], [1063.0, 4556.5], [1087.0, 7923.0], [1059.0, 6930.5], [1083.0, 6440.0], [1079.0, 6230.0], [1047.0, 4277.5], [1043.0, 6535.0], [1091.0, 1798.0], [1095.0, 4237.0], [1119.0, 6074.0], [1111.0, 7042.0], [1107.0, 6571.0], [1115.0, 3611.333333333333], [1099.0, 4735.5], [1103.0, 6552.0], [1139.0, 6091.0], [1143.0, 6925.0], [1151.0, 6212.0], [1123.0, 6058.0], [1147.0, 3622.0], [1127.0, 6002.0], [1131.0, 5285.333333333333], [1135.0, 6465.0], [1207.0, 5639.0], [1175.0, 6306.0], [1179.0, 5766.0], [1211.0, 3263.75], [1203.0, 5813.0], [1199.0, 6367.0], [1195.0, 5790.0], [1191.0, 6410.0], [1187.0, 5705.0], [1215.0, 5703.0], [1171.0, 3886.0], [1183.0, 3865.0], [1155.0, 5863.0], [1159.0, 6074.0], [1163.0, 5844.0], [1167.0, 5816.0], [1219.0, 4679.0], [1231.0, 4186.5], [1247.0, 5704.0], [1243.0, 5577.0], [1239.0, 6469.5], [1227.0, 5464.0], [1223.0, 5537.0], [1235.0, 3870.0], [1263.0, 4021.5], [1279.0, 5357.0], [1255.0, 5948.0], [1251.0, 5439.0], [1259.0, 5384.0], [1275.0, 3966.0], [1267.0, 6575.0], [1291.0, 3979.5], [1287.0, 3476.3333333333335], [1283.0, 3367.6666666666665], [1307.0, 4199.5], [1311.0, 3853.5], [1339.0, 3481.3333333333335], [1335.0, 6095.0], [1331.0, 5279.0], [1295.0, 5318.0], [1315.0, 3813.0], [1343.0, 6068.0], [1319.0, 5597.0], [1327.0, 5448.0], [1323.0, 5167.0], [1299.0, 5360.0], [1303.0, 4079.0], [1403.0, 5732.0], [1383.0, 4070.0], [1395.0, 4865.5], [1359.0, 5176.0], [1355.0, 5650.0], [1347.0, 5066.0], [1399.0, 3700.0], [1407.0, 5292.0], [1379.0, 4890.0], [1387.0, 3909.0], [1391.0, 4025.5], [1363.0, 5263.0], [1367.0, 4503.666666666667], [1371.0, 4952.0], [1375.0, 6226.0], [1419.0, 4715.0], [1439.0, 2567.5], [1411.0, 4710.0], [1423.0, 4739.0], [1415.0, 5712.0], [1467.0, 3121.333333333333], [1463.0, 4502.0], [1471.0, 5117.0], [1431.0, 3657.0], [1427.0, 6062.0], [1435.0, 3410.0], [1451.0, 4571.0], [1455.0, 6479.0], [1483.0, 3977.5], [1479.0, 3038.0], [1475.0, 5179.0], [1503.0, 4882.0], [1495.0, 4270.0], [1499.0, 5131.0], [1515.0, 3184.8], [1519.0, 4791.0], [1487.0, 4364.0], [1523.0, 3624.0], [1531.0, 4214.666666666667], [1535.0, 4987.0], [1507.0, 4224.0], [1511.0, 4367.0], [1527.0, 4129.0], [1547.0, 4129.0], [1587.0, 4423.0], [1539.0, 4081.0], [1567.0, 4280.0], [1551.0, 3458.5], [1591.0, 3669.0], [1599.0, 3716.0], [1559.0, 4593.0], [1555.0, 4077.0], [1575.0, 3394.5], [1571.0, 4021.0], [1583.0, 4342.0], [1579.0, 4398.0], [1659.0, 3612.0], [1627.0, 3832.5], [1631.0, 3752.0], [1615.0, 3583.333333333333], [1643.0, 3676.0], [1639.0, 3703.0], [1635.0, 4235.0], [1663.0, 4342.0], [1655.0, 3239.0], [1651.0, 4277.0], [1647.0, 3378.0], [1611.0, 3789.0], [1607.0, 4233.0], [1603.0, 3825.0], [1619.0, 4210.0], [1623.0, 3034.5], [1671.0, 3723.0], [1695.0, 3501.0], [1691.0, 3748.0], [1687.0, 3634.0], [1667.0, 4396.0], [1683.0, 3463.1666666666665], [1699.0, 3997.0], [1703.0, 4023.5], [1727.0, 4424.0], [1723.0, 3354.0], [1719.0, 4143.333333333333], [1715.0, 3707.0], [1679.0, 3645.0], [1675.0, 3567.0], [1707.0, 3343.1666666666665], [1711.0, 3393.5], [1735.0, 3287.0], [1731.0, 3634.5], [1739.0, 3572.0], [1759.0, 3556.0], [1743.0, 4089.0], [1763.0, 4202.0], [1747.0, 3255.0], [1751.0, 3332.0], [1755.0, 4057.0], [1.0, 6.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[569.9730337078663, 3624.331835205987]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1766.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 26159.0, "minX": 1.699973321E12, "maxY": 298360.0, "series": [{"data": [[1.699973336E12, 78145.0], [1.699973335E12, 77200.0], [1.699973334E12, 72990.0], [1.699973338E12, 72514.0], [1.699973337E12, 70675.0], [1.69997334E12, 37904.0], [1.699973339E12, 86058.0], [1.699973322E12, 217423.0], [1.699973321E12, 65044.0], [1.699973325E12, 68316.0], [1.699973324E12, 152509.0], [1.699973323E12, 298360.0], [1.699973328E12, 68818.0], [1.699973327E12, 70186.0], [1.699973326E12, 73019.0], [1.69997333E12, 76724.0], [1.699973329E12, 78540.0], [1.699973333E12, 66887.0], [1.699973332E12, 75836.0], [1.699973331E12, 66471.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.699973336E12, 53930.0], [1.699973335E12, 53275.0], [1.699973334E12, 50370.0], [1.699973338E12, 50039.0], [1.699973337E12, 48780.0], [1.69997334E12, 26159.0], [1.699973339E12, 59378.0], [1.699973322E12, 149998.0], [1.699973321E12, 44889.0], [1.699973325E12, 47146.0], [1.699973324E12, 105239.0], [1.699973323E12, 205850.0], [1.699973328E12, 47503.0], [1.699973327E12, 48436.0], [1.699973326E12, 50399.0], [1.69997333E12, 52944.0], [1.699973329E12, 54180.0], [1.699973333E12, 46152.0], [1.699973332E12, 52346.0], [1.699973331E12, 45881.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.69997334E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 8.787096774193552, "minX": 1.699973321E12, "maxY": 11218.20987654321, "series": [{"data": [[1.699973336E12, 8500.718562874255], [1.699973335E12, 7692.957575757579], [1.699973334E12, 7016.1346153846125], [1.699973338E12, 9793.322580645161], [1.699973337E12, 9075.059602649004], [1.69997334E12, 11218.20987654321], [1.699973339E12, 10591.88586956522], [1.699973322E12, 8.787096774193552], [1.699973321E12, 41.309352517985594], [1.699973325E12, 681.7054794520551], [1.699973324E12, 119.89877300613493], [1.699973323E12, 10.786833855799376], [1.699973328E12, 2887.8231292517003], [1.699973327E12, 2171.019999999999], [1.699973326E12, 1489.2500000000005], [1.69997333E12, 4297.542682926828], [1.699973329E12, 3662.5535714285716], [1.699973333E12, 6339.67132867133], [1.699973332E12, 5685.641975308641], [1.699973331E12, 4933.295774647887]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.69997334E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 8.74193548387096, "minX": 1.699973321E12, "maxY": 11218.172839506171, "series": [{"data": [[1.699973336E12, 8500.652694610784], [1.699973335E12, 7692.909090909094], [1.699973334E12, 7016.070512820512], [1.699973338E12, 9793.251612903226], [1.699973337E12, 9075.026490066226], [1.69997334E12, 11218.172839506171], [1.699973339E12, 10591.864130434786], [1.699973322E12, 8.74193548387096], [1.699973321E12, 40.94964028776979], [1.699973325E12, 681.6575342465753], [1.699973324E12, 119.86196319018406], [1.699973323E12, 10.746081504702195], [1.699973328E12, 2887.7823129251706], [1.699973327E12, 2170.880000000001], [1.699973326E12, 1489.1794871794868], [1.69997333E12, 4297.475609756098], [1.699973329E12, 3662.488095238096], [1.699973333E12, 6339.587412587411], [1.699973332E12, 5685.586419753085], [1.699973331E12, 4933.2394366197195]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.69997334E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.5308641975308642, "minX": 1.699973321E12, "maxY": 18.55395683453236, "series": [{"data": [[1.699973336E12, 0.9401197604790421], [1.699973335E12, 1.042424242424243], [1.699973334E12, 1.9487179487179482], [1.699973338E12, 0.870967741935484], [1.699973337E12, 0.9006622516556293], [1.69997334E12, 0.691358024691358], [1.699973339E12, 0.5869565217391303], [1.699973322E12, 1.5956989247311828], [1.699973321E12, 18.55395683453236], [1.699973325E12, 0.6506849315068496], [1.699973324E12, 1.0674846625766872], [1.699973323E12, 1.1802507836990601], [1.699973328E12, 0.6530612244897961], [1.699973327E12, 0.8800000000000003], [1.699973326E12, 0.9615384615384625], [1.69997333E12, 0.8231707317073176], [1.699973329E12, 0.7023809523809523], [1.699973333E12, 1.0979020979020986], [1.699973332E12, 0.5308641975308642], [1.699973331E12, 0.8450704225352116]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.69997334E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.699973321E12, "maxY": 13810.0, "series": [{"data": [[1.699973336E12, 10492.0], [1.699973335E12, 9042.0], [1.699973334E12, 8990.0], [1.699973338E12, 11985.0], [1.699973337E12, 11694.0], [1.69997334E12, 12589.0], [1.699973339E12, 13810.0], [1.699973322E12, 24.0], [1.699973321E12, 159.0], [1.699973325E12, 1495.0], [1.699973324E12, 784.0], [1.699973323E12, 78.0], [1.699973328E12, 4375.0], [1.699973327E12, 3354.0], [1.699973326E12, 2495.0], [1.69997333E12, 5793.0], [1.699973329E12, 5796.0], [1.699973333E12, 8438.0], [1.699973332E12, 7189.0], [1.699973331E12, 6929.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.699973336E12, 9070.800000000001], [1.699973335E12, 8298.2], [1.699973334E12, 7649.300000000001], [1.699973338E12, 10357.4], [1.699973337E12, 9650.6], [1.69997334E12, 11948.8], [1.699973339E12, 11343.5], [1.699973322E12, 11.400000000000034], [1.699973321E12, 125.0], [1.699973325E12, 1106.3], [1.699973324E12, 323.4000000000001], [1.699973323E12, 17.100000000000023], [1.699973328E12, 3613.2000000000003], [1.699973327E12, 2817.9], [1.699973326E12, 1994.9], [1.69997333E12, 4895.0], [1.699973329E12, 4468.4], [1.699973333E12, 7002.799999999999], [1.699973332E12, 6468.5], [1.699973331E12, 5520.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.699973336E12, 10235.639999999998], [1.699973335E12, 8985.24], [1.699973334E12, 8826.410000000002], [1.699973338E12, 11935.72], [1.699973337E12, 11384.079999999994], [1.69997334E12, 12589.0], [1.699973339E12, 12928.550000000007], [1.699973322E12, 21.0], [1.699973321E12, 154.99999999999994], [1.699973325E12, 1462.1000000000001], [1.699973324E12, 731.4100000000003], [1.699973323E12, 46.05000000000007], [1.699973328E12, 4311.160000000002], [1.699973327E12, 3310.6500000000005], [1.699973326E12, 2443.7000000000007], [1.69997333E12, 5727.349999999999], [1.699973329E12, 5649.030000000001], [1.699973333E12, 8214.480000000001], [1.699973332E12, 7175.14], [1.699973331E12, 6735.499999999997]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.699973336E12, 9415.0], [1.699973335E12, 8634.4], [1.699973334E12, 7959.75], [1.699973338E12, 10629.8], [1.699973337E12, 10521.2], [1.69997334E12, 12256.8], [1.699973339E12, 11548.75], [1.699973322E12, 14.699999999999989], [1.699973321E12, 134.0], [1.699973325E12, 1207.6], [1.699973324E12, 430.4999999999998], [1.699973323E12, 24.0], [1.699973328E12, 3748.0], [1.699973327E12, 3021.25], [1.699973326E12, 2239.2], [1.69997333E12, 5432.0], [1.699973329E12, 4727.849999999999], [1.699973333E12, 7331.5999999999985], [1.699973332E12, 6674.849999999999], [1.699973331E12, 5797.45]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.699973336E12, 7713.0], [1.699973335E12, 7072.0], [1.699973334E12, 6330.0], [1.699973338E12, 9088.0], [1.699973337E12, 8397.0], [1.69997334E12, 10628.0], [1.699973339E12, 9759.0], [1.699973322E12, 5.0], [1.699973321E12, 5.0], [1.699973325E12, 95.0], [1.699973324E12, 5.0], [1.699973323E12, 5.0], [1.699973328E12, 2225.0], [1.699973327E12, 1543.0], [1.699973326E12, 833.0], [1.69997333E12, 3612.0], [1.699973329E12, 2911.0], [1.699973333E12, 5697.0], [1.699973332E12, 4999.0], [1.699973331E12, 4270.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.699973336E12, 8403.0], [1.699973335E12, 7579.0], [1.699973334E12, 6927.5], [1.699973338E12, 9684.0], [1.699973337E12, 8956.0], [1.69997334E12, 11085.0], [1.699973339E12, 10507.5], [1.699973322E12, 8.0], [1.699973321E12, 12.0], [1.699973325E12, 682.5], [1.699973324E12, 70.0], [1.699973323E12, 8.0], [1.699973328E12, 2799.0], [1.699973327E12, 2066.0], [1.699973326E12, 1454.5], [1.69997333E12, 4216.0], [1.699973329E12, 3569.5], [1.699973333E12, 6231.0], [1.699973332E12, 5572.0], [1.699973331E12, 4874.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.69997334E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 81.0, "maxY": 11085.0, "series": [{"data": [[139.0, 12.0], [142.0, 4874.5], [143.0, 6231.0], [146.0, 682.5], [150.0, 2066.0], [147.0, 2799.0], [151.0, 8956.0], [638.0, 8.0], [156.0, 4412.5], [155.0, 9684.0], [164.0, 4216.0], [162.0, 5572.0], [165.0, 7579.0], [167.0, 8403.0], [168.0, 3569.5], [184.0, 10507.5], [326.0, 70.0], [81.0, 11085.0], [465.0, 8.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 638.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 81.0, "maxY": 11085.0, "series": [{"data": [[139.0, 12.0], [142.0, 4874.5], [143.0, 6231.0], [146.0, 682.5], [150.0, 2066.0], [147.0, 2799.0], [151.0, 8956.0], [638.0, 8.0], [156.0, 4412.5], [155.0, 9684.0], [164.0, 4215.5], [162.0, 5572.0], [165.0, 7579.0], [167.0, 8403.0], [168.0, 3569.5], [184.0, 10507.5], [326.0, 70.0], [81.0, 11085.0], [465.0, 8.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 638.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 140.0, "minX": 1.699973321E12, "maxY": 636.0, "series": [{"data": [[1.699973325E12, 500.0], [1.699973324E12, 562.0], [1.699973323E12, 636.0], [1.699973328E12, 501.0], [1.699973327E12, 499.0], [1.699973326E12, 501.0], [1.699973329E12, 194.0], [1.699973322E12, 472.0], [1.699973321E12, 140.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699973329E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 81.0, "minX": 1.699973321E12, "maxY": 638.0, "series": [{"data": [[1.699973336E12, 167.0], [1.699973335E12, 165.0], [1.699973334E12, 156.0], [1.699973338E12, 155.0], [1.699973337E12, 151.0], [1.69997334E12, 81.0], [1.699973339E12, 184.0], [1.699973322E12, 465.0], [1.699973321E12, 139.0], [1.699973325E12, 146.0], [1.699973324E12, 326.0], [1.699973323E12, 638.0], [1.699973328E12, 147.0], [1.699973327E12, 150.0], [1.699973326E12, 156.0], [1.69997333E12, 164.0], [1.699973329E12, 168.0], [1.699973333E12, 143.0], [1.699973332E12, 162.0], [1.699973331E12, 142.0]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.69997334E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 81.0, "minX": 1.699973321E12, "maxY": 638.0, "series": [{"data": [[1.699973336E12, 167.0], [1.699973335E12, 165.0], [1.699973334E12, 156.0], [1.699973338E12, 155.0], [1.699973337E12, 151.0], [1.69997334E12, 81.0], [1.699973339E12, 184.0], [1.699973322E12, 465.0], [1.699973321E12, 139.0], [1.699973325E12, 146.0], [1.699973324E12, 326.0], [1.699973323E12, 638.0], [1.699973328E12, 147.0], [1.699973327E12, 150.0], [1.699973326E12, 156.0], [1.69997333E12, 164.0], [1.699973329E12, 168.0], [1.699973333E12, 143.0], [1.699973332E12, 162.0], [1.699973331E12, 142.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.69997334E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 81.0, "minX": 1.699973321E12, "maxY": 638.0, "series": [{"data": [[1.699973336E12, 167.0], [1.699973335E12, 165.0], [1.699973334E12, 156.0], [1.699973338E12, 155.0], [1.699973337E12, 151.0], [1.69997334E12, 81.0], [1.699973339E12, 184.0], [1.699973322E12, 465.0], [1.699973321E12, 139.0], [1.699973325E12, 146.0], [1.699973324E12, 326.0], [1.699973323E12, 638.0], [1.699973328E12, 147.0], [1.699973327E12, 150.0], [1.699973326E12, 156.0], [1.69997333E12, 164.0], [1.699973329E12, 168.0], [1.699973333E12, 143.0], [1.699973332E12, 162.0], [1.699973331E12, 142.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.69997334E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

