/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 15628.0, "series": [{"data": [[0.0, 5.0], [0.1, 5.0], [0.2, 5.0], [0.3, 5.0], [0.4, 6.0], [0.5, 6.0], [0.6, 6.0], [0.7, 6.0], [0.8, 6.0], [0.9, 6.0], [1.0, 6.0], [1.1, 6.0], [1.2, 6.0], [1.3, 6.0], [1.4, 6.0], [1.5, 6.0], [1.6, 6.0], [1.7, 6.0], [1.8, 6.0], [1.9, 6.0], [2.0, 6.0], [2.1, 6.0], [2.2, 6.0], [2.3, 6.0], [2.4, 6.0], [2.5, 6.0], [2.6, 6.0], [2.7, 6.0], [2.8, 6.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 7.0], [3.3, 7.0], [3.4, 7.0], [3.5, 7.0], [3.6, 7.0], [3.7, 7.0], [3.8, 7.0], [3.9, 7.0], [4.0, 7.0], [4.1, 7.0], [4.2, 7.0], [4.3, 7.0], [4.4, 7.0], [4.5, 7.0], [4.6, 7.0], [4.7, 7.0], [4.8, 7.0], [4.9, 7.0], [5.0, 7.0], [5.1, 7.0], [5.2, 7.0], [5.3, 7.0], [5.4, 7.0], [5.5, 7.0], [5.6, 7.0], [5.7, 7.0], [5.8, 7.0], [5.9, 7.0], [6.0, 7.0], [6.1, 7.0], [6.2, 7.0], [6.3, 7.0], [6.4, 7.0], [6.5, 7.0], [6.6, 7.0], [6.7, 7.0], [6.8, 7.0], [6.9, 7.0], [7.0, 7.0], [7.1, 7.0], [7.2, 7.0], [7.3, 7.0], [7.4, 7.0], [7.5, 7.0], [7.6, 7.0], [7.7, 7.0], [7.8, 7.0], [7.9, 7.0], [8.0, 7.0], [8.1, 7.0], [8.2, 7.0], [8.3, 8.0], [8.4, 8.0], [8.5, 8.0], [8.6, 8.0], [8.7, 8.0], [8.8, 8.0], [8.9, 8.0], [9.0, 8.0], [9.1, 8.0], [9.2, 8.0], [9.3, 8.0], [9.4, 8.0], [9.5, 8.0], [9.6, 8.0], [9.7, 8.0], [9.8, 8.0], [9.9, 8.0], [10.0, 8.0], [10.1, 8.0], [10.2, 8.0], [10.3, 8.0], [10.4, 8.0], [10.5, 8.0], [10.6, 8.0], [10.7, 8.0], [10.8, 8.0], [10.9, 8.0], [11.0, 8.0], [11.1, 8.0], [11.2, 8.0], [11.3, 8.0], [11.4, 8.0], [11.5, 8.0], [11.6, 8.0], [11.7, 8.0], [11.8, 8.0], [11.9, 8.0], [12.0, 8.0], [12.1, 8.0], [12.2, 9.0], [12.3, 9.0], [12.4, 9.0], [12.5, 9.0], [12.6, 9.0], [12.7, 9.0], [12.8, 9.0], [12.9, 9.0], [13.0, 9.0], [13.1, 9.0], [13.2, 9.0], [13.3, 9.0], [13.4, 9.0], [13.5, 9.0], [13.6, 9.0], [13.7, 9.0], [13.8, 9.0], [13.9, 9.0], [14.0, 9.0], [14.1, 9.0], [14.2, 9.0], [14.3, 9.0], [14.4, 9.0], [14.5, 10.0], [14.6, 10.0], [14.7, 10.0], [14.8, 10.0], [14.9, 10.0], [15.0, 10.0], [15.1, 10.0], [15.2, 10.0], [15.3, 10.0], [15.4, 10.0], [15.5, 10.0], [15.6, 10.0], [15.7, 10.0], [15.8, 10.0], [15.9, 11.0], [16.0, 11.0], [16.1, 11.0], [16.2, 11.0], [16.3, 11.0], [16.4, 11.0], [16.5, 11.0], [16.6, 11.0], [16.7, 11.0], [16.8, 11.0], [16.9, 11.0], [17.0, 12.0], [17.1, 12.0], [17.2, 12.0], [17.3, 12.0], [17.4, 13.0], [17.5, 13.0], [17.6, 13.0], [17.7, 13.0], [17.8, 13.0], [17.9, 14.0], [18.0, 14.0], [18.1, 14.0], [18.2, 14.0], [18.3, 15.0], [18.4, 15.0], [18.5, 15.0], [18.6, 16.0], [18.7, 17.0], [18.8, 18.0], [18.9, 19.0], [19.0, 20.0], [19.1, 21.0], [19.2, 21.0], [19.3, 22.0], [19.4, 23.0], [19.5, 25.0], [19.6, 26.0], [19.7, 26.0], [19.8, 29.0], [19.9, 31.0], [20.0, 33.0], [20.1, 34.0], [20.2, 34.0], [20.3, 35.0], [20.4, 38.0], [20.5, 39.0], [20.6, 41.0], [20.7, 42.0], [20.8, 45.0], [20.9, 47.0], [21.0, 48.0], [21.1, 50.0], [21.2, 51.0], [21.3, 53.0], [21.4, 54.0], [21.5, 57.0], [21.6, 58.0], [21.7, 58.0], [21.8, 61.0], [21.9, 62.0], [22.0, 64.0], [22.1, 67.0], [22.2, 71.0], [22.3, 73.0], [22.4, 74.0], [22.5, 76.0], [22.6, 79.0], [22.7, 82.0], [22.8, 83.0], [22.9, 85.0], [23.0, 91.0], [23.1, 96.0], [23.2, 98.0], [23.3, 102.0], [23.4, 107.0], [23.5, 111.0], [23.6, 112.0], [23.7, 116.0], [23.8, 126.0], [23.9, 134.0], [24.0, 138.0], [24.1, 146.0], [24.2, 161.0], [24.3, 164.0], [24.4, 167.0], [24.5, 180.0], [24.6, 183.0], [24.7, 190.0], [24.8, 194.0], [24.9, 203.0], [25.0, 223.0], [25.1, 230.0], [25.2, 235.0], [25.3, 251.0], [25.4, 286.0], [25.5, 305.0], [25.6, 307.0], [25.7, 335.0], [25.8, 360.0], [25.9, 368.0], [26.0, 378.0], [26.1, 406.0], [26.2, 444.0], [26.3, 462.0], [26.4, 476.0], [26.5, 515.0], [26.6, 525.0], [26.7, 545.0], [26.8, 620.0], [26.9, 697.0], [27.0, 712.0], [27.1, 724.0], [27.2, 768.0], [27.3, 828.0], [27.4, 841.0], [27.5, 858.0], [27.6, 880.0], [27.7, 897.0], [27.8, 935.0], [27.9, 949.0], [28.0, 978.0], [28.1, 989.0], [28.2, 1006.0], [28.3, 1022.0], [28.4, 1045.0], [28.5, 1067.0], [28.6, 1083.0], [28.7, 1100.0], [28.8, 1143.0], [28.9, 1152.0], [29.0, 1170.0], [29.1, 1177.0], [29.2, 1210.0], [29.3, 1218.0], [29.4, 1243.0], [29.5, 1261.0], [29.6, 1282.0], [29.7, 1320.0], [29.8, 1339.0], [29.9, 1352.0], [30.0, 1370.0], [30.1, 1402.0], [30.2, 1430.0], [30.3, 1457.0], [30.4, 1466.0], [30.5, 1473.0], [30.6, 1488.0], [30.7, 1529.0], [30.8, 1546.0], [30.9, 1589.0], [31.0, 1624.0], [31.1, 1638.0], [31.2, 1663.0], [31.3, 1679.0], [31.4, 1698.0], [31.5, 1707.0], [31.6, 1732.0], [31.7, 1739.0], [31.8, 1764.0], [31.9, 1776.0], [32.0, 1791.0], [32.1, 1821.0], [32.2, 1837.0], [32.3, 1863.0], [32.4, 1877.0], [32.5, 1902.0], [32.6, 1933.0], [32.7, 1967.0], [32.8, 1999.0], [32.9, 2010.0], [33.0, 2041.0], [33.1, 2059.0], [33.2, 2077.0], [33.3, 2085.0], [33.4, 2101.0], [33.5, 2113.0], [33.6, 2123.0], [33.7, 2153.0], [33.8, 2174.0], [33.9, 2190.0], [34.0, 2201.0], [34.1, 2234.0], [34.2, 2257.0], [34.3, 2288.0], [34.4, 2319.0], [34.5, 2349.0], [34.6, 2397.0], [34.7, 2414.0], [34.8, 2426.0], [34.9, 2439.0], [35.0, 2458.0], [35.1, 2468.0], [35.2, 2510.0], [35.3, 2523.0], [35.4, 2536.0], [35.5, 2557.0], [35.6, 2585.0], [35.7, 2600.0], [35.8, 2642.0], [35.9, 2649.0], [36.0, 2670.0], [36.1, 2689.0], [36.2, 2710.0], [36.3, 2720.0], [36.4, 2735.0], [36.5, 2750.0], [36.6, 2789.0], [36.7, 2800.0], [36.8, 2831.0], [36.9, 2854.0], [37.0, 2882.0], [37.1, 2899.0], [37.2, 2914.0], [37.3, 2931.0], [37.4, 2941.0], [37.5, 2962.0], [37.6, 2975.0], [37.7, 3005.0], [37.8, 3008.0], [37.9, 3018.0], [38.0, 3034.0], [38.1, 3046.0], [38.2, 3083.0], [38.3, 3095.0], [38.4, 3111.0], [38.5, 3127.0], [38.6, 3149.0], [38.7, 3160.0], [38.8, 3191.0], [38.9, 3204.0], [39.0, 3227.0], [39.1, 3256.0], [39.2, 3266.0], [39.3, 3282.0], [39.4, 3296.0], [39.5, 3304.0], [39.6, 3330.0], [39.7, 3344.0], [39.8, 3360.0], [39.9, 3392.0], [40.0, 3410.0], [40.1, 3413.0], [40.2, 3430.0], [40.3, 3439.0], [40.4, 3450.0], [40.5, 3472.0], [40.6, 3485.0], [40.7, 3508.0], [40.8, 3521.0], [40.9, 3534.0], [41.0, 3571.0], [41.1, 3593.0], [41.2, 3620.0], [41.3, 3641.0], [41.4, 3651.0], [41.5, 3658.0], [41.6, 3667.0], [41.7, 3692.0], [41.8, 3716.0], [41.9, 3728.0], [42.0, 3760.0], [42.1, 3780.0], [42.2, 3791.0], [42.3, 3811.0], [42.4, 3827.0], [42.5, 3850.0], [42.6, 3862.0], [42.7, 3884.0], [42.8, 3895.0], [42.9, 3912.0], [43.0, 3919.0], [43.1, 3924.0], [43.2, 3941.0], [43.3, 3959.0], [43.4, 3973.0], [43.5, 3997.0], [43.6, 4029.0], [43.7, 4035.0], [43.8, 4055.0], [43.9, 4084.0], [44.0, 4100.0], [44.1, 4106.0], [44.2, 4122.0], [44.3, 4140.0], [44.4, 4152.0], [44.5, 4160.0], [44.6, 4178.0], [44.7, 4184.0], [44.8, 4207.0], [44.9, 4227.0], [45.0, 4266.0], [45.1, 4287.0], [45.2, 4296.0], [45.3, 4311.0], [45.4, 4359.0], [45.5, 4373.0], [45.6, 4382.0], [45.7, 4402.0], [45.8, 4409.0], [45.9, 4424.0], [46.0, 4432.0], [46.1, 4459.0], [46.2, 4483.0], [46.3, 4511.0], [46.4, 4521.0], [46.5, 4524.0], [46.6, 4534.0], [46.7, 4572.0], [46.8, 4594.0], [46.9, 4599.0], [47.0, 4608.0], [47.1, 4620.0], [47.2, 4656.0], [47.3, 4689.0], [47.4, 4712.0], [47.5, 4724.0], [47.6, 4731.0], [47.7, 4764.0], [47.8, 4793.0], [47.9, 4801.0], [48.0, 4811.0], [48.1, 4823.0], [48.2, 4837.0], [48.3, 4865.0], [48.4, 4891.0], [48.5, 4927.0], [48.6, 4948.0], [48.7, 4974.0], [48.8, 4999.0], [48.9, 5014.0], [49.0, 5036.0], [49.1, 5073.0], [49.2, 5112.0], [49.3, 5125.0], [49.4, 5154.0], [49.5, 5164.0], [49.6, 5181.0], [49.7, 5206.0], [49.8, 5230.0], [49.9, 5252.0], [50.0, 5272.0], [50.1, 5297.0], [50.2, 5314.0], [50.3, 5326.0], [50.4, 5335.0], [50.5, 5358.0], [50.6, 5373.0], [50.7, 5382.0], [50.8, 5390.0], [50.9, 5404.0], [51.0, 5434.0], [51.1, 5451.0], [51.2, 5473.0], [51.3, 5484.0], [51.4, 5518.0], [51.5, 5523.0], [51.6, 5531.0], [51.7, 5545.0], [51.8, 5553.0], [51.9, 5559.0], [52.0, 5573.0], [52.1, 5600.0], [52.2, 5608.0], [52.3, 5634.0], [52.4, 5666.0], [52.5, 5690.0], [52.6, 5703.0], [52.7, 5736.0], [52.8, 5758.0], [52.9, 5768.0], [53.0, 5790.0], [53.1, 5860.0], [53.2, 5870.0], [53.3, 5884.0], [53.4, 5891.0], [53.5, 5905.0], [53.6, 5927.0], [53.7, 5958.0], [53.8, 5975.0], [53.9, 5981.0], [54.0, 6018.0], [54.1, 6029.0], [54.2, 6041.0], [54.3, 6044.0], [54.4, 6050.0], [54.5, 6054.0], [54.6, 6063.0], [54.7, 6095.0], [54.8, 6111.0], [54.9, 6134.0], [55.0, 6141.0], [55.1, 6150.0], [55.2, 6163.0], [55.3, 6184.0], [55.4, 6202.0], [55.5, 6215.0], [55.6, 6226.0], [55.7, 6252.0], [55.8, 6263.0], [55.9, 6278.0], [56.0, 6285.0], [56.1, 6302.0], [56.2, 6321.0], [56.3, 6329.0], [56.4, 6339.0], [56.5, 6352.0], [56.6, 6370.0], [56.7, 6383.0], [56.8, 6405.0], [56.9, 6419.0], [57.0, 6429.0], [57.1, 6446.0], [57.2, 6469.0], [57.3, 6489.0], [57.4, 6495.0], [57.5, 6516.0], [57.6, 6536.0], [57.7, 6558.0], [57.8, 6568.0], [57.9, 6589.0], [58.0, 6604.0], [58.1, 6638.0], [58.2, 6650.0], [58.3, 6664.0], [58.4, 6683.0], [58.5, 6705.0], [58.6, 6723.0], [58.7, 6737.0], [58.8, 6745.0], [58.9, 6781.0], [59.0, 6786.0], [59.1, 6808.0], [59.2, 6836.0], [59.3, 6855.0], [59.4, 6870.0], [59.5, 6883.0], [59.6, 6902.0], [59.7, 6967.0], [59.8, 6981.0], [59.9, 7003.0], [60.0, 7025.0], [60.1, 7031.0], [60.2, 7043.0], [60.3, 7049.0], [60.4, 7058.0], [60.5, 7074.0], [60.6, 7103.0], [60.7, 7117.0], [60.8, 7136.0], [60.9, 7146.0], [61.0, 7163.0], [61.1, 7183.0], [61.2, 7204.0], [61.3, 7218.0], [61.4, 7229.0], [61.5, 7257.0], [61.6, 7279.0], [61.7, 7294.0], [61.8, 7296.0], [61.9, 7315.0], [62.0, 7324.0], [62.1, 7337.0], [62.2, 7358.0], [62.3, 7364.0], [62.4, 7378.0], [62.5, 7389.0], [62.6, 7408.0], [62.7, 7422.0], [62.8, 7428.0], [62.9, 7435.0], [63.0, 7438.0], [63.1, 7458.0], [63.2, 7464.0], [63.3, 7472.0], [63.4, 7491.0], [63.5, 7506.0], [63.6, 7530.0], [63.7, 7554.0], [63.8, 7579.0], [63.9, 7593.0], [64.0, 7611.0], [64.1, 7627.0], [64.2, 7637.0], [64.3, 7649.0], [64.4, 7658.0], [64.5, 7677.0], [64.6, 7696.0], [64.7, 7721.0], [64.8, 7736.0], [64.9, 7747.0], [65.0, 7809.0], [65.1, 7829.0], [65.2, 7839.0], [65.3, 7862.0], [65.4, 7864.0], [65.5, 7889.0], [65.6, 7895.0], [65.7, 7914.0], [65.8, 7931.0], [65.9, 7956.0], [66.0, 7971.0], [66.1, 7988.0], [66.2, 7998.0], [66.3, 8020.0], [66.4, 8056.0], [66.5, 8098.0], [66.6, 8117.0], [66.7, 8147.0], [66.8, 8176.0], [66.9, 8210.0], [67.0, 8229.0], [67.1, 8246.0], [67.2, 8272.0], [67.3, 8285.0], [67.4, 8306.0], [67.5, 8324.0], [67.6, 8343.0], [67.7, 8349.0], [67.8, 8372.0], [67.9, 8389.0], [68.0, 8404.0], [68.1, 8431.0], [68.2, 8449.0], [68.3, 8473.0], [68.4, 8486.0], [68.5, 8505.0], [68.6, 8519.0], [68.7, 8532.0], [68.8, 8549.0], [68.9, 8575.0], [69.0, 8606.0], [69.1, 8614.0], [69.2, 8627.0], [69.3, 8632.0], [69.4, 8653.0], [69.5, 8659.0], [69.6, 8670.0], [69.7, 8685.0], [69.8, 8698.0], [69.9, 8706.0], [70.0, 8733.0], [70.1, 8743.0], [70.2, 8769.0], [70.3, 8779.0], [70.4, 8787.0], [70.5, 8822.0], [70.6, 8838.0], [70.7, 8864.0], [70.8, 8885.0], [70.9, 8898.0], [71.0, 8915.0], [71.1, 8918.0], [71.2, 8940.0], [71.3, 8953.0], [71.4, 8974.0], [71.5, 8990.0], [71.6, 9003.0], [71.7, 9017.0], [71.8, 9032.0], [71.9, 9052.0], [72.0, 9073.0], [72.1, 9088.0], [72.2, 9105.0], [72.3, 9112.0], [72.4, 9130.0], [72.5, 9147.0], [72.6, 9167.0], [72.7, 9177.0], [72.8, 9195.0], [72.9, 9212.0], [73.0, 9230.0], [73.1, 9250.0], [73.2, 9260.0], [73.3, 9263.0], [73.4, 9273.0], [73.5, 9295.0], [73.6, 9307.0], [73.7, 9326.0], [73.8, 9341.0], [73.9, 9355.0], [74.0, 9372.0], [74.1, 9424.0], [74.2, 9453.0], [74.3, 9487.0], [74.4, 9495.0], [74.5, 9510.0], [74.6, 9528.0], [74.7, 9539.0], [74.8, 9570.0], [74.9, 9593.0], [75.0, 9610.0], [75.1, 9634.0], [75.2, 9650.0], [75.3, 9676.0], [75.4, 9686.0], [75.5, 9705.0], [75.6, 9713.0], [75.7, 9730.0], [75.8, 9743.0], [75.9, 9786.0], [76.0, 9799.0], [76.1, 9833.0], [76.2, 9838.0], [76.3, 9845.0], [76.4, 9847.0], [76.5, 9863.0], [76.6, 9880.0], [76.7, 9919.0], [76.8, 9932.0], [76.9, 9938.0], [77.0, 9953.0], [77.1, 9979.0], [77.2, 9992.0], [77.3, 9996.0], [77.4, 10023.0], [77.5, 10055.0], [77.6, 10072.0], [77.7, 10081.0], [77.8, 10125.0], [77.9, 10151.0], [78.0, 10166.0], [78.1, 10200.0], [78.2, 10205.0], [78.3, 10216.0], [78.4, 10230.0], [78.5, 10242.0], [78.6, 10253.0], [78.7, 10276.0], [78.8, 10286.0], [78.9, 10319.0], [79.0, 10335.0], [79.1, 10349.0], [79.2, 10365.0], [79.3, 10369.0], [79.4, 10380.0], [79.5, 10419.0], [79.6, 10436.0], [79.7, 10456.0], [79.8, 10465.0], [79.9, 10478.0], [80.0, 10499.0], [80.1, 10535.0], [80.2, 10559.0], [80.3, 10588.0], [80.4, 10594.0], [80.5, 10614.0], [80.6, 10638.0], [80.7, 10662.0], [80.8, 10687.0], [80.9, 10723.0], [81.0, 10742.0], [81.1, 10753.0], [81.2, 10777.0], [81.3, 10784.0], [81.4, 10796.0], [81.5, 10808.0], [81.6, 10832.0], [81.7, 10853.0], [81.8, 10884.0], [81.9, 10900.0], [82.0, 10916.0], [82.1, 10942.0], [82.2, 10956.0], [82.3, 10974.0], [82.4, 10995.0], [82.5, 11011.0], [82.6, 11036.0], [82.7, 11058.0], [82.8, 11068.0], [82.9, 11082.0], [83.0, 11098.0], [83.1, 11113.0], [83.2, 11152.0], [83.3, 11176.0], [83.4, 11186.0], [83.5, 11201.0], [83.6, 11221.0], [83.7, 11238.0], [83.8, 11248.0], [83.9, 11259.0], [84.0, 11281.0], [84.1, 11308.0], [84.2, 11336.0], [84.3, 11349.0], [84.4, 11356.0], [84.5, 11372.0], [84.6, 11384.0], [84.7, 11395.0], [84.8, 11408.0], [84.9, 11416.0], [85.0, 11428.0], [85.1, 11446.0], [85.2, 11464.0], [85.3, 11481.0], [85.4, 11486.0], [85.5, 11490.0], [85.6, 11521.0], [85.7, 11535.0], [85.8, 11549.0], [85.9, 11555.0], [86.0, 11576.0], [86.1, 11597.0], [86.2, 11636.0], [86.3, 11654.0], [86.4, 11667.0], [86.5, 11684.0], [86.6, 11696.0], [86.7, 11733.0], [86.8, 11763.0], [86.9, 11797.0], [87.0, 11808.0], [87.1, 11821.0], [87.2, 11834.0], [87.3, 11853.0], [87.4, 11878.0], [87.5, 11896.0], [87.6, 11908.0], [87.7, 11932.0], [87.8, 11968.0], [87.9, 11982.0], [88.0, 12024.0], [88.1, 12035.0], [88.2, 12048.0], [88.3, 12062.0], [88.4, 12069.0], [88.5, 12079.0], [88.6, 12084.0], [88.7, 12113.0], [88.8, 12130.0], [88.9, 12146.0], [89.0, 12151.0], [89.1, 12168.0], [89.2, 12182.0], [89.3, 12205.0], [89.4, 12209.0], [89.5, 12227.0], [89.6, 12244.0], [89.7, 12256.0], [89.8, 12287.0], [89.9, 12293.0], [90.0, 12298.0], [90.1, 12310.0], [90.2, 12324.0], [90.3, 12334.0], [90.4, 12346.0], [90.5, 12384.0], [90.6, 12400.0], [90.7, 12410.0], [90.8, 12425.0], [90.9, 12440.0], [91.0, 12445.0], [91.1, 12470.0], [91.2, 12474.0], [91.3, 12476.0], [91.4, 12493.0], [91.5, 12525.0], [91.6, 12546.0], [91.7, 12559.0], [91.8, 12575.0], [91.9, 12583.0], [92.0, 12603.0], [92.1, 12613.0], [92.2, 12622.0], [92.3, 12631.0], [92.4, 12663.0], [92.5, 12672.0], [92.6, 12700.0], [92.7, 12725.0], [92.8, 12728.0], [92.9, 12731.0], [93.0, 12743.0], [93.1, 12762.0], [93.2, 12775.0], [93.3, 12791.0], [93.4, 12812.0], [93.5, 12829.0], [93.6, 12870.0], [93.7, 12885.0], [93.8, 12915.0], [93.9, 12951.0], [94.0, 12973.0], [94.1, 12984.0], [94.2, 13012.0], [94.3, 13024.0], [94.4, 13036.0], [94.5, 13052.0], [94.6, 13090.0], [94.7, 13119.0], [94.8, 13144.0], [94.9, 13171.0], [95.0, 13192.0], [95.1, 13219.0], [95.2, 13228.0], [95.3, 13247.0], [95.4, 13255.0], [95.5, 13269.0], [95.6, 13299.0], [95.7, 13310.0], [95.8, 13327.0], [95.9, 13349.0], [96.0, 13362.0], [96.1, 13369.0], [96.2, 13398.0], [96.3, 13414.0], [96.4, 13449.0], [96.5, 13464.0], [96.6, 13481.0], [96.7, 13501.0], [96.8, 13512.0], [96.9, 13526.0], [97.0, 13544.0], [97.1, 13559.0], [97.2, 13564.0], [97.3, 13577.0], [97.4, 13596.0], [97.5, 13607.0], [97.6, 13617.0], [97.7, 13636.0], [97.8, 13659.0], [97.9, 13678.0], [98.0, 13701.0], [98.1, 13725.0], [98.2, 13746.0], [98.3, 13798.0], [98.4, 13827.0], [98.5, 13849.0], [98.6, 13854.0], [98.7, 13867.0], [98.8, 13896.0], [98.9, 13928.0], [99.0, 13990.0], [99.1, 14057.0], [99.2, 14105.0], [99.3, 14190.0], [99.4, 14374.0], [99.5, 14411.0], [99.6, 14567.0], [99.7, 14708.0], [99.8, 14980.0], [99.9, 15223.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 930.0, "series": [{"data": [[0.0, 930.0], [100.0, 65.0], [200.0, 25.0], [300.0, 22.0], [400.0, 16.0], [500.0, 14.0], [600.0, 5.0], [700.0, 14.0], [800.0, 18.0], [900.0, 19.0], [1000.0, 20.0], [1100.0, 19.0], [1200.0, 20.0], [1300.0, 17.0], [1400.0, 22.0], [1500.0, 11.0], [1600.0, 21.0], [1700.0, 24.0], [1800.0, 17.0], [1900.0, 14.0], [2000.0, 22.0], [2100.0, 24.0], [2200.0, 15.0], [2300.0, 12.0], [2400.0, 22.0], [2500.0, 20.0], [2600.0, 19.0], [2700.0, 21.0], [2800.0, 18.0], [2900.0, 22.0], [3000.0, 27.0], [3100.0, 20.0], [3200.0, 23.0], [3300.0, 21.0], [3400.0, 27.0], [3500.0, 20.0], [3600.0, 24.0], [3700.0, 21.0], [3800.0, 23.0], [3900.0, 27.0], [4000.0, 19.0], [4100.0, 31.0], [4200.0, 19.0], [4300.0, 17.0], [4600.0, 17.0], [4400.0, 24.0], [4500.0, 26.0], [4700.0, 20.0], [4800.0, 23.0], [5100.0, 19.0], [4900.0, 16.0], [5000.0, 15.0], [5200.0, 20.0], [5300.0, 29.0], [5500.0, 30.0], [5400.0, 19.0], [5600.0, 19.0], [5700.0, 18.0], [5800.0, 17.0], [5900.0, 20.0], [6000.0, 33.0], [6100.0, 25.0], [6200.0, 25.0], [6300.0, 31.0], [6500.0, 22.0], [6400.0, 25.0], [6600.0, 21.0], [6800.0, 22.0], [6900.0, 11.0], [6700.0, 22.0], [7100.0, 25.0], [7000.0, 28.0], [7300.0, 29.0], [7400.0, 36.0], [7200.0, 25.0], [7600.0, 28.0], [7500.0, 19.0], [7700.0, 15.0], [7900.0, 25.0], [7800.0, 25.0], [8000.0, 11.0], [8100.0, 13.0], [8200.0, 21.0], [8400.0, 19.0], [8500.0, 22.0], [8700.0, 25.0], [8600.0, 33.0], [8300.0, 24.0], [8900.0, 27.0], [9100.0, 29.0], [8800.0, 19.0], [9200.0, 28.0], [9000.0, 21.0], [9500.0, 20.0], [9300.0, 21.0], [9400.0, 16.0], [9700.0, 24.0], [9600.0, 19.0], [10100.0, 14.0], [9800.0, 23.0], [10200.0, 31.0], [9900.0, 28.0], [10000.0, 17.0], [10700.0, 24.0], [10300.0, 24.0], [10400.0, 22.0], [10600.0, 13.0], [10500.0, 19.0], [11200.0, 24.0], [11000.0, 23.0], [10800.0, 19.0], [10900.0, 22.0], [11100.0, 19.0], [11300.0, 26.0], [11500.0, 23.0], [11700.0, 13.0], [11600.0, 20.0], [11400.0, 32.0], [12000.0, 28.0], [11900.0, 15.0], [12200.0, 31.0], [11800.0, 25.0], [12100.0, 25.0], [12400.0, 33.0], [12300.0, 22.0], [12700.0, 30.0], [12600.0, 25.0], [12500.0, 22.0], [13000.0, 20.0], [13100.0, 19.0], [13200.0, 21.0], [12800.0, 17.0], [13300.0, 24.0], [12900.0, 14.0], [13600.0, 20.0], [13500.0, 32.0], [13400.0, 19.0], [13700.0, 13.0], [13800.0, 20.0], [14000.0, 7.0], [14100.0, 5.0], [14200.0, 3.0], [13900.0, 8.0], [14300.0, 3.0], [14500.0, 5.0], [14600.0, 2.0], [14700.0, 2.0], [14400.0, 2.0], [15200.0, 2.0], [14900.0, 5.0], [15300.0, 1.0], [15100.0, 1.0], [15600.0, 1.0], [15400.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 15600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 168.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2776.0, "series": [{"data": [[0.0, 1058.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 168.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2776.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 6.517605633802818, "minX": 1.699973416E12, "maxY": 2120.3049645390056, "series": [{"data": [[1.699973421E12, 1304.0340136054422], [1.69997342E12, 948.4000000000001], [1.699973419E12, 623.0785714285713], [1.699973424E12, 2120.3049645390056], [1.699973423E12, 2001.6352201257869], [1.699973422E12, 1657.2777777777778], [1.699973426E12, 1820.6075949367091], [1.699973425E12, 1975.1721854304635], [1.699973429E12, 1339.587837837838], [1.699973428E12, 1492.0509554140126], [1.699973427E12, 1656.081871345029], [1.699973431E12, 1027.138364779874], [1.699973432E12, 871.6052631578948], [1.69997343E12, 1186.5220125786166], [1.699973434E12, 573.0946745562135], [1.699973433E12, 726.6159420289857], [1.699973416E12, 11.98529411764705], [1.699973437E12, 79.21019108280254], [1.699973435E12, 406.0848484848487], [1.699973436E12, 240.5963855421686], [1.699973418E12, 156.28508771929825], [1.699973417E12, 6.517605633802818]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699973437E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 7.757575757575758, "minX": 1.0, "maxY": 15628.0, "series": [{"data": [[2.0, 7.757575757575758], [3.0, 350.7529411764706], [4.0, 9.009345794392525], [5.0, 207.875], [6.0, 124.83193277310924], [7.0, 119.9090909090909], [8.0, 240.38983050847457], [9.0, 10.208333333333334], [10.0, 1272.590909090909], [11.0, 683.952380952381], [12.0, 11.583333333333334], [13.0, 1875.9333333333334], [14.0, 1376.8000000000002], [15.0, 1753.5], [16.0, 1787.875], [17.0, 21.8], [18.0, 3893.142857142857], [19.0, 1893.5], [20.0, 4910.333333333333], [21.0, 1517.7], [22.0, 2828.6], [23.0, 3511.75], [24.0, 31.0], [25.0, 4801.333333333333], [26.0, 9470.666666666666], [27.0, 13569.0], [28.0, 2755.4], [29.0, 71.75], [30.0, 3626.75], [31.0, 46.0], [33.0, 1561.3333333333333], [32.0, 4616.5], [35.0, 45.77777777777778], [34.0, 3626.5], [37.0, 4658.333333333333], [36.0, 4789.333333333334], [38.0, 2283.5000000000005], [39.0, 6742.5], [41.0, 13475.0], [40.0, 13559.0], [43.0, 14374.0], [42.0, 14024.0], [44.0, 3681.25], [45.0, 13403.0], [46.0, 4613.0], [47.0, 4602.333333333333], [49.0, 1431.6], [48.0, 72.0], [51.0, 14040.0], [50.0, 13636.0], [53.0, 33.0], [52.0, 4598.666666666667], [54.0, 6954.0], [55.0, 34.0], [56.0, 5541.6], [57.0, 13693.0], [59.0, 6755.5], [58.0, 14535.0], [63.0, 13702.0], [62.0, 14105.0], [65.0, 6738.0], [67.0, 6889.0], [66.0, 13526.0], [64.0, 13398.0], [69.0, 63.25], [68.0, 6868.0], [71.0, 14411.0], [70.0, 13593.5], [75.0, 86.0], [74.0, 3509.5], [72.0, 4750.0], [73.0, 13847.0], [78.0, 5469.8], [79.0, 88.25], [76.0, 13586.5], [80.0, 3679.125], [81.0, 2794.0], [83.0, 4572.333333333333], [82.0, 3574.25], [87.0, 4560.333333333333], [86.0, 6848.25], [85.0, 83.0], [84.0, 123.33333333333333], [89.0, 3390.0], [88.0, 4007.0], [91.0, 3426.0], [90.0, 13450.0], [95.0, 13765.0], [94.0, 13327.0], [93.0, 13853.0], [92.0, 13854.0], [99.0, 13301.0], [98.0, 13735.0], [96.0, 13362.0], [102.0, 82.0], [103.0, 14152.0], [101.0, 13464.0], [100.0, 13413.0], [107.0, 3449.25], [106.0, 13379.0], [105.0, 13857.0], [104.0, 13377.0], [109.0, 4524.666666666667], [111.0, 13266.0], [110.0, 13254.0], [108.0, 14022.0], [115.0, 13245.0], [114.0, 13975.0], [113.0, 13522.0], [112.0, 13849.0], [119.0, 13449.0], [118.0, 13338.0], [117.0, 14688.0], [116.0, 13546.0], [123.0, 15300.0], [122.0, 13804.0], [121.0, 13310.0], [120.0, 13798.0], [127.0, 13193.0], [126.0, 13679.0], [125.0, 13392.0], [124.0, 13990.0], [129.0, 6602.5], [128.0, 6737.0], [130.0, 6949.5], [135.0, 13142.0], [134.0, 13269.0], [133.0, 13597.0], [132.0, 13890.0], [131.0, 13125.0], [142.0, 4895.0], [141.0, 6806.5], [143.0, 13144.0], [140.0, 13109.0], [139.0, 14032.5], [137.0, 13297.0], [136.0, 13607.0], [144.0, 4596.0], [151.0, 6791.25], [149.0, 13228.0], [148.0, 13006.0], [147.0, 14457.0], [145.0, 13661.0], [157.0, 6973.75], [159.0, 15628.0], [158.0, 13362.0], [155.0, 13024.0], [154.0, 13247.0], [153.0, 15434.0], [152.0, 13701.0], [161.0, 4446.333333333333], [165.0, 7113.0], [167.0, 12975.0], [166.0, 12951.0], [164.0, 13130.0], [163.0, 13003.0], [162.0, 13564.0], [160.0, 13187.0], [175.0, 2811.6], [174.0, 3443.0], [173.0, 6682.0], [172.0, 7195.75], [170.0, 13033.0], [169.0, 13052.0], [168.0, 13225.0], [177.0, 180.0], [176.0, 6664.5], [179.0, 6686.0], [183.0, 6481.5], [182.0, 13176.0], [181.0, 13369.0], [178.0, 12981.5], [184.0, 6538.5], [191.0, 4440.333333333333], [190.0, 9491.333333333334], [188.0, 12955.0], [187.0, 12877.0], [186.0, 13004.0], [185.0, 13249.0], [192.0, 4350.0], [194.0, 6520.5], [198.0, 6767.5], [199.0, 12730.0], [197.0, 12727.0], [196.0, 12736.0], [195.0, 12772.0], [193.0, 13115.0], [207.0, 12721.0], [206.0, 13855.0], [205.0, 13699.0], [204.0, 13276.5], [202.0, 12725.0], [201.0, 13027.0], [200.0, 12728.0], [215.0, 13081.0], [214.0, 13264.0], [213.0, 12829.0], [212.0, 12853.0], [210.0, 13726.0], [209.0, 13195.0], [208.0, 13026.0], [223.0, 2228.166666666667], [222.0, 12814.0], [221.0, 12915.0], [220.0, 12803.0], [218.0, 12668.0], [217.0, 12671.0], [216.0, 13255.0], [225.0, 6710.0], [230.0, 152.0], [228.0, 7206.5], [231.0, 6745.75], [229.0, 13195.0], [227.0, 12743.0], [226.0, 13014.0], [224.0, 12700.0], [236.0, 6836.5], [238.0, 6439.5], [239.0, 12984.0], [237.0, 12965.0], [235.0, 12628.0], [234.0, 13476.0], [233.0, 12631.0], [232.0, 12607.0], [247.0, 12520.0], [246.0, 12613.0], [245.0, 12744.0], [244.0, 13219.0], [243.0, 12559.0], [241.0, 13295.0], [240.0, 12791.0], [249.0, 4417.333333333333], [248.0, 6485.0], [255.0, 12613.0], [254.0, 12740.0], [253.0, 12462.0], [252.0, 12885.0], [251.0, 12887.0], [250.0, 12559.0], [271.0, 12471.0], [258.0, 4272.0], [257.0, 8409.666666666666], [263.0, 12815.0], [262.0, 13158.0], [261.0, 12708.0], [260.0, 13583.0], [267.0, 6635.0], [270.0, 12569.5], [268.0, 12416.0], [259.0, 12492.0], [266.0, 12419.0], [265.0, 12475.0], [264.0, 12566.0], [286.0, 12471.0], [282.0, 4446.666666666667], [273.0, 8604.666666666666], [275.0, 12750.0], [274.0, 12616.0], [278.0, 12914.0], [277.0, 13832.0], [276.0, 12894.0], [283.0, 231.0], [287.0, 12663.0], [285.0, 12672.0], [284.0, 12691.0], [281.0, 12332.0], [280.0, 12852.5], [302.0, 12445.0], [294.0, 8357.0], [295.0, 6331.5], [289.0, 12407.0], [288.0, 12410.0], [291.0, 12400.0], [290.0, 12725.0], [293.0, 406.0], [292.0, 12744.0], [303.0, 12287.0], [297.0, 12783.0], [296.0, 12605.0], [301.0, 12475.0], [300.0, 12295.0], [299.0, 12603.0], [298.0, 12295.0], [317.0, 4254.666666666666], [305.0, 6296.5], [304.0, 3459.75], [312.0, 3696.0], [310.0, 4530.333333333333], [309.0, 12325.0], [308.0, 12973.0], [311.0, 6401.0], [316.0, 6616.5], [307.0, 12690.0], [306.0, 12397.0], [315.0, 6369.5], [314.0, 6434.5], [313.0, 12209.0], [319.0, 12583.0], [318.0, 12595.0], [333.0, 6536.0], [321.0, 391.0], [335.0, 12812.0], [334.0, 12292.0], [332.0, 12182.0], [323.0, 12440.0], [322.0, 12270.5], [331.0, 12473.0], [329.0, 12227.0], [328.0, 12630.0], [327.0, 12231.0], [320.0, 12227.0], [326.0, 12664.0], [325.0, 12462.0], [324.0, 12476.0], [350.0, 12223.0], [337.0, 6903.0], [336.0, 6391.0], [338.0, 6493.5], [339.0, 12126.0], [349.0, 12269.0], [348.0, 12766.0], [343.0, 4340.666666666666], [342.0, 6608.5], [341.0, 12298.0], [340.0, 12315.0], [345.0, 7220.0], [347.0, 12426.0], [346.0, 12251.0], [344.0, 6249.0], [351.0, 13299.0], [367.0, 12027.0], [358.0, 4372.0], [357.0, 12081.0], [356.0, 12118.0], [359.0, 6455.0], [362.0, 6223.5], [365.0, 12575.0], [364.0, 12730.0], [354.0, 12434.0], [353.0, 12241.0], [352.0, 12249.0], [363.0, 12075.0], [361.0, 12493.0], [360.0, 12079.0], [382.0, 4311.0], [379.0, 8574.666666666666], [381.0, 411.5], [380.0, 6232.0], [383.0, 12915.0], [377.0, 12783.0], [376.0, 12146.0], [375.0, 12158.0], [370.0, 13852.0], [369.0, 12448.0], [374.0, 12100.0], [373.0, 12775.0], [372.0, 12232.5], [398.0, 6222.0], [385.0, 6266.5], [384.0, 12022.0], [386.0, 13225.0], [390.0, 12622.0], [389.0, 12066.0], [388.0, 12042.0], [387.0, 6842.0], [395.0, 6565.0], [394.0, 8875.333333333334], [396.0, 6709.5], [399.0, 6428.5], [397.0, 11947.0], [392.0, 12269.5], [413.0, 12409.0], [414.0, 11849.0], [412.0, 12191.0], [403.0, 12200.0], [402.0, 13408.0], [401.0, 12314.0], [400.0, 12549.0], [411.0, 12181.0], [410.0, 11834.0], [409.0, 11953.0], [408.0, 11870.0], [407.0, 12206.0], [406.0, 13598.0], [405.0, 11968.0], [404.0, 12128.0], [430.0, 6596.0], [418.0, 6707.0], [419.0, 3504.75], [420.0, 6614.0], [421.0, 12069.0], [423.0, 6421.5], [417.0, 11897.0], [416.0, 12082.0], [422.0, 13352.0], [425.0, 6906.5], [427.0, 11857.0], [426.0, 12557.0], [431.0, 11801.0], [424.0, 11832.0], [429.0, 11797.0], [428.0, 12443.0], [446.0, 2707.5], [434.0, 6432.5], [433.0, 12327.0], [432.0, 13015.0], [435.0, 12206.0], [439.0, 11908.0], [438.0, 12244.0], [437.0, 12504.0], [436.0, 13192.0], [444.0, 528.0], [447.0, 6318.0], [445.0, 11901.5], [443.0, 11763.0], [442.0, 12474.0], [441.0, 11745.0], [440.0, 12031.0], [462.0, 13325.0], [463.0, 13224.0], [461.0, 12543.0], [460.0, 12578.0], [459.0, 12191.0], [457.0, 13607.0], [456.0, 11635.0], [455.0, 11636.0], [449.0, 11656.0], [448.0, 12131.0], [451.0, 11896.0], [450.0, 12180.0], [454.0, 11667.0], [453.0, 12156.0], [452.0, 12187.0], [478.0, 12084.0], [477.0, 6396.0], [479.0, 12111.0], [476.0, 11555.0], [474.0, 11555.0], [473.0, 12476.0], [472.0, 11559.0], [471.0, 12081.0], [465.0, 12168.0], [464.0, 12575.0], [467.0, 12056.0], [466.0, 12433.0], [470.0, 12879.0], [469.0, 12479.0], [468.0, 11885.0], [494.0, 12308.0], [481.0, 6418.5], [480.0, 6488.5], [486.0, 11853.0], [485.0, 11488.0], [484.0, 11671.0], [483.0, 4411.333333333334], [482.0, 11818.0], [495.0, 12600.0], [489.0, 11875.0], [488.0, 11488.0], [493.0, 11533.0], [492.0, 11472.0], [491.0, 11635.0], [490.0, 12157.0], [509.0, 11910.0], [503.0, 8141.333333333333], [500.0, 6255.0], [499.0, 8153.0], [497.0, 11811.0], [496.0, 11687.0], [502.0, 856.0], [501.0, 11464.0], [511.0, 11776.0], [504.0, 11532.0], [508.0, 11843.5], [506.0, 12139.0], [505.0, 11414.0], [526.0, 6202.5], [520.0, 6458.5], [522.0, 949.0], [524.0, 6113.5], [538.0, 5992.5], [518.0, 11349.0], [516.0, 13512.0], [514.0, 11430.0], [512.0, 11408.0], [540.0, 6101.5], [542.0, 11654.0], [530.0, 11759.5], [528.0, 13615.0], [534.0, 11281.0], [532.0, 11446.0], [572.0, 6454.5], [568.0, 6702.0], [570.0, 6097.0], [554.0, 6464.5], [552.0, 11576.0], [558.0, 11800.0], [546.0, 11537.0], [544.0, 11483.5], [550.0, 11780.0], [548.0, 11420.0], [556.0, 11422.0], [564.0, 6116.0], [574.0, 12289.0], [566.0, 13019.0], [562.0, 11733.0], [560.0, 12952.0], [604.0, 11205.0], [586.0, 6113.5], [584.0, 11587.0], [590.0, 12130.0], [578.0, 11352.0], [576.0, 11196.0], [582.0, 11373.0], [580.0, 12224.0], [588.0, 11155.0], [606.0, 6075.0], [602.0, 11157.5], [600.0, 11186.0], [598.0, 11076.0], [596.0, 11105.0], [594.0, 11085.0], [592.0, 11082.0], [636.0, 12737.0], [612.0, 6092.0], [614.0, 8189.333333333333], [616.0, 4460.333333333334], [618.0, 11228.0], [622.0, 939.0], [610.0, 11371.0], [608.0, 11336.0], [620.0, 11709.0], [638.0, 11669.0], [624.0, 11582.0], [634.0, 11461.0], [632.0, 11052.0], [630.0, 11028.0], [628.0, 12324.0], [666.0, 10953.0], [642.0, 6021.5], [644.0, 6510.5], [664.0, 11046.0], [646.0, 12075.0], [648.0, 4553.333333333334], [650.0, 3512.5], [652.0, 897.0], [654.0, 10896.0], [640.0, 10939.0], [658.0, 6575.0], [660.0, 10792.0], [670.0, 12256.0], [668.0, 10800.0], [702.0, 10808.0], [684.0, 1035.0], [682.0, 10963.0], [680.0, 11251.0], [690.0, 6241.0], [698.0, 7683.0], [696.0, 6553.0], [676.0, 11486.0], [674.0, 11071.0], [672.0, 11823.0], [686.0, 10736.0], [692.0, 5858.5], [694.0, 8053.0], [700.0, 10646.0], [688.0, 10760.0], [732.0, 3893.25], [704.0, 4491.666666666666], [706.0, 5815.0], [710.0, 10997.0], [708.0, 11259.0], [712.0, 4396.0], [714.0, 10915.0], [718.0, 10535.0], [716.0, 10775.0], [734.0, 10923.0], [722.0, 12039.0], [730.0, 10591.0], [728.0, 10531.0], [726.0, 11448.0], [724.0, 10816.0], [762.0, 4986.6], [742.0, 4447.0], [740.0, 7605.333333333333], [738.0, 11090.0], [736.0, 10462.0], [750.0, 10420.0], [748.0, 10821.0], [744.0, 10412.0], [764.0, 4777.333333333334], [760.0, 3593.25], [766.0, 10373.0], [758.0, 10358.0], [756.0, 11684.0], [754.0, 11071.0], [752.0, 10421.0], [792.0, 4594.666666666666], [772.0, 5883.0], [770.0, 11416.0], [774.0, 10279.0], [768.0, 7333.666666666667], [778.0, 6906.0], [782.0, 10671.0], [780.0, 10474.0], [790.0, 1586.0], [796.0, 10465.0], [788.0, 10330.0], [786.0, 11022.0], [784.0, 10537.0], [802.0, 10349.0], [824.0, 5631.0], [800.0, 10846.0], [804.0, 10202.0], [806.0, 10072.0], [814.0, 10588.0], [812.0, 10228.0], [810.0, 10078.0], [808.0, 10380.0], [822.0, 9996.0], [820.0, 10451.0], [818.0, 10293.0], [816.0, 10257.0], [826.0, 5898.5], [830.0, 9993.0], [828.0, 10183.0], [834.0, 10319.0], [838.0, 10181.0], [858.0, 5981.5], [832.0, 4721.666666666666], [836.0, 10081.0], [856.0, 9841.0], [842.0, 10436.0], [840.0, 10340.0], [846.0, 5929.5], [848.0, 5630.5], [850.0, 9979.0], [862.0, 9772.0], [860.0, 9853.5], [866.0, 10125.0], [888.0, 6319.0], [876.0, 6176.0], [864.0, 10537.0], [868.0, 4267.333333333333], [870.0, 9810.0], [872.0, 5683.0], [874.0, 5922.5], [878.0, 10450.0], [880.0, 10248.0], [882.0, 9731.0], [886.0, 10386.0], [892.0, 9788.0], [890.0, 6565.5], [900.0, 9659.0], [898.0, 10658.0], [902.0, 10347.0], [920.0, 9992.0], [922.0, 11508.0], [904.0, 5079.0], [906.0, 1690.5], [908.0, 10229.0], [910.0, 1925.0], [924.0, 10074.0], [912.0, 11335.0], [914.0, 9880.0], [916.0, 9604.0], [918.0, 9610.0], [926.0, 9923.0], [932.0, 9565.0], [956.0, 5789.0], [930.0, 5829.5], [934.0, 3443.8], [936.0, 5854.5], [938.0, 5651.0], [942.0, 5983.5], [940.0, 9847.0], [952.0, 6084.0], [944.0, 9493.0], [946.0, 9699.0], [948.0, 9701.0], [950.0, 9415.0], [958.0, 9424.0], [960.0, 9424.0], [964.0, 3031.333333333333], [966.0, 9833.0], [962.0, 9764.0], [968.0, 5695.0], [970.0, 7085.666666666667], [972.0, 9283.0], [974.0, 10483.0], [982.0, 5619.0], [980.0, 9838.0], [978.0, 9359.5], [976.0, 9271.0], [990.0, 9705.0], [984.0, 5737.5], [988.0, 6851.0], [994.0, 9713.0], [1018.0, 5741.0], [996.0, 2188.0], [998.0, 6164.5], [1016.0, 10140.0], [1000.0, 4440.333333333334], [1002.0, 4536.333333333334], [992.0, 9255.0], [1006.0, 10161.0], [1020.0, 9204.0], [1022.0, 9135.0], [1008.0, 9315.0], [1010.0, 9538.0], [1012.0, 9182.0], [1014.0, 9177.0], [1076.0, 9672.0], [1028.0, 6750.666666666667], [1024.0, 9121.5], [1040.0, 7175.666666666667], [1044.0, 9502.0], [1052.0, 9273.0], [1056.0, 4527.666666666666], [1084.0, 5805.0], [1080.0, 10638.0], [1072.0, 10098.5], [1064.0, 5868.0], [1068.0, 9017.0], [1060.0, 8981.0], [1092.0, 8983.0], [1100.0, 4299.666666666666], [1136.0, 9300.0], [1140.0, 8621.0], [1144.0, 8630.0], [1104.0, 6780.333333333333], [1108.0, 9212.0], [1088.0, 8894.0], [1116.0, 8898.0], [1112.0, 8984.0], [1120.0, 5462.0], [1124.0, 9111.0], [1128.0, 9014.0], [1148.0, 5452.0], [1132.0, 2896.714285714286], [1164.0, 8635.0], [1200.0, 5356.5], [1152.0, 8991.0], [1156.0, 8891.0], [1160.0, 8917.0], [1204.0, 4550.333333333333], [1208.0, 8685.0], [1184.0, 8467.0], [1188.0, 8617.0], [1212.0, 8542.0], [1168.0, 9528.0], [1172.0, 8671.0], [1176.0, 2190.0], [1180.0, 8532.0], [1192.0, 5258.5], [1196.0, 8460.0], [1276.0, 8876.0], [1220.0, 8352.0], [1216.0, 9880.0], [1228.0, 2089.0], [1256.0, 5699.5], [1252.0, 8704.0], [1248.0, 8284.0], [1272.0, 5850.5], [1268.0, 8264.0], [1264.0, 4742.333333333333], [1240.0, 5583.0], [1236.0, 8285.0], [1244.0, 9003.0], [1260.0, 8250.0], [1280.0, 8627.0], [1284.0, 8691.0], [1308.0, 7948.0], [1304.0, 8143.0], [1300.0, 7902.5], [1296.0, 8764.0], [1328.0, 7817.0], [1292.0, 8787.0], [1288.0, 8320.0], [1316.0, 8535.0], [1312.0, 8319.0], [1320.0, 5130.5], [1324.0, 5065.0], [1340.0, 8084.0], [1336.0, 7892.0], [1332.0, 9130.0], [1348.0, 7971.0], [1400.0, 7318.0], [1384.0, 5540.5], [1352.0, 4319.0], [1344.0, 7720.0], [1372.0, 7486.0], [1368.0, 7891.0], [1360.0, 9034.0], [1392.0, 7665.0], [1376.0, 7461.0], [1380.0, 8304.0], [1404.0, 7554.0], [1388.0, 5535.0], [1408.0, 7632.0], [1416.0, 7385.0], [1420.0, 7585.0], [1456.0, 7306.0], [1460.0, 7192.0], [1428.0, 5165.0], [1424.0, 7444.0], [1432.0, 9539.0], [1412.0, 7437.0], [1436.0, 7933.0], [1452.0, 2842.0], [1448.0, 7206.0], [1444.0, 7278.0], [1440.0, 7452.0], [1468.0, 7118.0], [1464.0, 7226.0], [1476.0, 5028.5], [1480.0, 5114.0], [1484.0, 3422.375], [1520.0, 7811.0], [1524.0, 7117.0], [1528.0, 7050.0], [1488.0, 5253.0], [1492.0, 7458.0], [1496.0, 7747.0], [1472.0, 7343.0], [1500.0, 7716.0], [1504.0, 3878.0], [1532.0, 5258.0], [1508.0, 6325.5], [1512.0, 7074.0], [1516.0, 7404.0], [1540.0, 5358.0], [1588.0, 5245.5], [1548.0, 5143.5], [1544.0, 4056.25], [1536.0, 6930.0], [1560.0, 6867.0], [1556.0, 6781.0], [1552.0, 6807.0], [1584.0, 5323.0], [1592.0, 4301.0], [1596.0, 6554.0], [1572.0, 6786.0], [1568.0, 6716.0], [1580.0, 7001.0], [1604.0, 4812.5], [1608.0, 6521.0], [1624.0, 6599.0], [1600.0, 6994.0], [1628.0, 6872.0], [1620.0, 5337.5], [1612.0, 5406.0], [1648.0, 6350.0], [1652.0, 6765.0], [1656.0, 6508.0], [1616.0, 4678.5], [1640.0, 6484.0], [1636.0, 6440.0], [1632.0, 6485.0], [1644.0, 6604.0], [1720.0, 7255.0], [1664.0, 4682.0], [1668.0, 6446.0], [1672.0, 6305.0], [1700.0, 4177.75], [1696.0, 6335.0], [1704.0, 6329.0], [1708.0, 6419.0], [1724.0, 6198.0], [1716.0, 6150.0], [1676.0, 6243.0], [1712.0, 7408.0], [1680.0, 5616.0], [1684.0, 6280.0], [1688.0, 6464.0], [1760.0, 6394.0], [1740.0, 3390.0], [1772.0, 6224.0], [1768.0, 6080.0], [1764.0, 6416.0], [1788.0, 8222.0], [1784.0, 6020.0], [1780.0, 6257.0], [1776.0, 7495.0], [1736.0, 6042.5], [1732.0, 6037.0], [1728.0, 6092.0], [1744.0, 4491.666666666667], [1748.0, 5162.666666666667], [1752.0, 5962.0], [1852.0, 5549.0], [1792.0, 5078.0], [1844.0, 4188.333333333333], [1848.0, 4452.5], [1804.0, 6370.0], [1800.0, 5825.0], [1828.0, 6761.0], [1824.0, 5702.0], [1832.0, 5768.0], [1836.0, 5608.0], [1796.0, 5302.666666666667], [1820.0, 5088.666666666667], [1812.0, 5749.0], [1808.0, 5740.0], [1860.0, 6236.0], [1912.0, 5756.0], [1868.0, 5653.0], [1864.0, 5518.0], [1904.0, 5326.0], [1872.0, 4475.666666666667], [1876.0, 5505.0], [1880.0, 6145.0], [1884.0, 5802.0], [1856.0, 5567.0], [1900.0, 4293.0], [1896.0, 5526.0], [1892.0, 5522.0], [1888.0, 5866.0], [1980.0, 4474.333333333333], [1944.0, 4407.5], [1928.0, 6278.0], [1932.0, 5254.0], [1960.0, 5384.0], [1956.0, 4622.0], [1952.0, 4071.75], [1968.0, 5052.0], [1936.0, 6207.0], [1940.0, 5159.0], [1948.0, 6198.0], [1924.0, 5403.0], [1920.0, 6010.0], [1984.0, 6640.0], [2012.0, 4184.0], [2008.0, 4238.666666666667], [2004.0, 6469.0], [1988.0, 5002.0], [1992.0, 5267.0], [1996.0, 5209.0], [2036.0, 4956.0], [2040.0, 4971.0], [2044.0, 4881.0], [2016.0, 4800.0], [2020.0, 4520.0], [2024.0, 4811.0], [2028.0, 4222.666666666667], [2064.0, 4868.0], [2056.0, 4315.5], [2104.0, 4858.5], [2096.0, 3823.0], [2072.0, 4529.0], [2144.0, 4015.3333333333335], [2160.0, 5186.0], [2152.0, 4093.0], [2168.0, 4030.0], [2112.0, 4390.0], [2120.0, 4346.0], [2128.0, 4321.0], [2136.0, 4554.25], [2080.0, 4455.0], [2088.0, 4502.666666666667], [2176.0, 4381.0], [2057.0, 4961.0], [2049.0, 4840.0], [2097.0, 4479.0], [2105.0, 4405.0], [2145.0, 4299.0], [2169.0, 4566.0], [2161.0, 4793.0], [2153.0, 4084.0], [2113.0, 4143.0], [2121.0, 4610.0], [2137.0, 4128.75], [2081.0, 4473.0], [2089.0, 4263.5], [2177.0, 4055.0], [1025.0, 9114.0], [1033.0, 6436.0], [1053.0, 9168.0], [1049.0, 9297.5], [1045.0, 9068.0], [1041.0, 9449.0], [1081.0, 9686.0], [1077.0, 8918.0], [1073.0, 8953.0], [1037.0, 9435.0], [1085.0, 8858.0], [1065.0, 8974.0], [1069.0, 5309.5], [1061.0, 1736.0], [1057.0, 9262.0], [1097.0, 8983.0], [1101.0, 3434.8333333333335], [1093.0, 9326.0], [1089.0, 9250.0], [1149.0, 1902.0], [1145.0, 5357.0], [1141.0, 8617.0], [1117.0, 8728.0], [1113.0, 10205.0], [1109.0, 9647.0], [1105.0, 8838.0], [1121.0, 4396.666666666666], [1129.0, 10178.0], [1125.0, 8774.0], [1133.0, 4331.0], [1165.0, 10200.0], [1157.0, 8705.0], [1153.0, 8549.0], [1161.0, 8886.0], [1201.0, 2320.0], [1205.0, 8389.0], [1209.0, 8631.0], [1213.0, 8779.0], [1173.0, 5346.5], [1169.0, 8824.0], [1177.0, 9063.0], [1181.0, 8990.0], [1197.0, 5451.0], [1193.0, 8505.0], [1189.0, 8614.0], [1185.0, 8486.0], [1221.0, 8963.0], [1273.0, 5269.5], [1217.0, 10361.0], [1245.0, 8403.0], [1229.0, 2065.0], [1265.0, 9069.0], [1269.0, 8104.0], [1237.0, 8490.0], [1241.0, 8433.0], [1261.0, 8349.0], [1257.0, 3735.5], [1249.0, 8519.0], [1253.0, 8332.0], [1277.0, 8033.0], [1289.0, 4388.0], [1293.0, 5630.5], [1285.0, 4057.25], [1297.0, 8233.0], [1305.0, 7915.0], [1301.0, 8245.0], [1309.0, 8390.0], [1317.0, 4533.333333333333], [1313.0, 7854.0], [1341.0, 8770.0], [1337.0, 8229.0], [1333.0, 8155.0], [1329.0, 7831.0], [1325.0, 8224.0], [1321.0, 8432.0], [1397.0, 8100.0], [1405.0, 7423.0], [1349.0, 4209.666666666667], [1353.0, 8857.0], [1357.0, 7579.0], [1393.0, 7700.0], [1401.0, 7639.0], [1377.0, 7458.0], [1381.0, 7438.0], [1361.0, 2889.0], [1365.0, 7647.5], [1369.0, 7677.0], [1345.0, 7721.0], [1373.0, 7472.0], [1385.0, 4811.333333333333], [1389.0, 4496.333333333333], [1457.0, 7346.0], [1421.0, 7399.0], [1461.0, 7649.0], [1465.0, 7754.0], [1469.0, 5411.0], [1445.0, 7428.0], [1417.0, 5006.0], [1429.0, 5697.0], [1425.0, 7364.0], [1433.0, 7640.0], [1409.0, 7633.0], [1413.0, 7520.0], [1437.0, 7437.0], [1449.0, 7466.0], [1453.0, 7607.0], [1477.0, 5119.5], [1481.0, 4551.0], [1493.0, 5304.0], [1473.0, 7500.0], [1497.0, 7043.0], [1489.0, 4936.0], [1485.0, 5215.0], [1533.0, 5737.5], [1521.0, 5497.0], [1525.0, 7015.0], [1529.0, 6903.0], [1505.0, 5143.0], [1513.0, 5334.5], [1509.0, 7043.0], [1517.0, 7552.0], [1541.0, 7734.0], [1589.0, 7146.0], [1597.0, 6568.0], [1537.0, 6855.0], [1545.0, 7027.0], [1549.0, 4457.0], [1593.0, 4289.666666666667], [1585.0, 6638.0], [1557.0, 8517.0], [1553.0, 7359.0], [1565.0, 7264.5], [1577.0, 6907.0], [1581.0, 6664.0], [1573.0, 4829.666666666667], [1569.0, 6688.0], [1613.0, 6531.0], [1609.0, 5013.5], [1601.0, 6638.0], [1605.0, 6719.0], [1661.0, 6868.0], [1657.0, 6274.0], [1653.0, 6471.0], [1649.0, 6686.0], [1633.0, 5391.5], [1641.0, 3543.6363636363635], [1637.0, 6380.0], [1645.0, 6723.0], [1617.0, 5067.0], [1621.0, 7433.0], [1625.0, 6969.0], [1629.0, 6737.0], [1673.0, 4559.333333333333], [1693.0, 5524.0], [1665.0, 6548.0], [1669.0, 6459.0], [1677.0, 7464.0], [1697.0, 7204.0], [1721.0, 6981.0], [1713.0, 6136.0], [1701.0, 3099.75], [1709.0, 6284.0], [1705.0, 7607.0], [1681.0, 6285.0], [1685.0, 6254.0], [1689.0, 6739.0], [1761.0, 5958.0], [1737.0, 3095.0], [1757.0, 5277.0], [1729.0, 8210.0], [1773.0, 6612.0], [1769.0, 5873.0], [1765.0, 6022.0], [1789.0, 6202.0], [1785.0, 6383.0], [1781.0, 6052.0], [1777.0, 6263.0], [1741.0, 6634.5], [1745.0, 4982.5], [1749.0, 5964.0], [1753.0, 5976.0], [1853.0, 5553.0], [1793.0, 3929.0], [1845.0, 4419.5], [1849.0, 4497.0], [1825.0, 4563.0], [1829.0, 5632.0], [1833.0, 5895.0], [1837.0, 5785.0], [1797.0, 4731.333333333333], [1805.0, 6247.0], [1841.0, 6246.0], [1821.0, 4034.5], [1817.0, 6137.5], [1813.0, 5762.0], [1809.0, 6111.0], [1861.0, 5559.0], [1857.0, 4764.0], [1865.0, 7389.0], [1905.0, 5314.0], [1909.0, 5839.0], [1885.0, 5372.0], [1881.0, 5604.0], [1877.0, 5533.0], [1873.0, 5441.0], [1889.0, 5315.0], [1893.0, 5664.0], [1897.0, 5526.0], [1917.0, 5648.5], [1913.0, 5329.0], [1901.0, 4307.333333333333], [1977.0, 5066.0], [1929.0, 4349.0], [1957.0, 4488.0], [1965.0, 5295.5], [1961.0, 5131.0], [1973.0, 5359.0], [1969.0, 5703.0], [1933.0, 5687.0], [1981.0, 4050.363636363636], [1953.0, 4348.5], [1937.0, 4458.5], [1941.0, 5426.0], [1949.0, 4309.0], [1945.0, 5838.0], [1921.0, 5523.0], [1925.0, 5279.0], [2013.0, 5490.0], [1985.0, 5338.0], [2005.0, 6018.0], [2001.0, 5941.0], [2009.0, 4827.0], [1989.0, 5036.0], [1993.0, 5141.0], [2045.0, 4745.0], [2017.0, 4804.0], [2021.0, 5085.0], [2025.0, 5011.0], [2029.0, 4723.0], [2066.0, 4448.0], [2090.0, 4802.0], [2050.0, 4690.25], [2106.0, 4511.0], [2098.0, 4407.0], [2058.0, 4790.0], [2074.0, 4852.0], [2146.0, 5035.0], [2162.0, 4035.0], [2154.0, 4718.0], [2170.0, 4152.0], [2114.0, 4110.5], [2122.0, 4380.0], [2130.0, 4442.5], [2138.0, 4393.25], [2082.0, 4624.0], [2178.0, 4250.0], [2067.0, 4521.0], [2051.0, 4374.0], [2099.0, 4521.0], [2091.0, 5344.0], [2107.0, 4594.0], [2059.0, 4214.5], [2147.0, 4225.0], [2171.0, 5519.0], [2163.0, 4355.0], [2155.0, 4266.0], [2115.0, 4391.0], [2123.0, 4487.0], [2131.0, 4137.0], [2139.0, 4433.0], [2083.0, 4304.5], [2179.0, 4158.0], [539.0, 6117.5], [513.0, 6260.5], [527.0, 6296.5], [541.0, 11356.0], [537.0, 11660.0], [519.0, 11340.0], [517.0, 11333.0], [515.0, 13282.0], [535.0, 11888.0], [533.0, 11482.0], [531.0, 11371.0], [525.0, 13183.0], [523.0, 11767.5], [521.0, 11341.0], [549.0, 6293.5], [559.0, 1057.0], [547.0, 11384.0], [545.0, 11521.0], [569.0, 6154.5], [551.0, 11696.0], [555.0, 4365.333333333334], [553.0, 6039.5], [557.0, 6165.5], [563.0, 4315.0], [561.0, 11248.0], [567.0, 11186.0], [565.0, 11395.0], [575.0, 11194.0], [573.0, 11440.0], [571.0, 5997.5], [605.0, 12546.0], [585.0, 6656.5], [591.0, 11113.0], [579.0, 11466.0], [577.0, 11196.0], [583.0, 11267.0], [581.0, 11355.0], [589.0, 11518.0], [601.0, 926.0], [607.0, 12278.0], [603.0, 11428.0], [599.0, 11098.0], [597.0, 11106.0], [595.0, 11126.0], [593.0, 11670.0], [637.0, 11483.0], [623.0, 7713.0], [613.0, 1102.5], [611.0, 11058.0], [609.0, 11108.0], [615.0, 11878.0], [621.0, 6125.5], [619.0, 12631.0], [617.0, 11066.0], [639.0, 11068.0], [627.0, 11690.5], [625.0, 11426.0], [635.0, 10963.0], [633.0, 10974.0], [631.0, 11666.0], [629.0, 11453.0], [671.0, 10805.0], [647.0, 6380.5], [655.0, 11435.0], [641.0, 10988.0], [645.0, 11036.0], [643.0, 11481.0], [653.0, 11283.5], [651.0, 10894.0], [649.0, 11808.0], [667.0, 4423.666666666666], [669.0, 10796.0], [665.0, 10900.0], [663.0, 11672.0], [661.0, 10884.0], [659.0, 10790.0], [657.0, 11104.0], [679.0, 7670.0], [681.0, 6110.5], [683.0, 10742.0], [685.0, 7489.666666666667], [687.0, 5885.0], [673.0, 11410.0], [677.0, 10946.0], [675.0, 11692.0], [691.0, 6007.5], [695.0, 12205.0], [689.0, 1006.0], [699.0, 6089.5], [703.0, 10977.0], [701.0, 10938.0], [697.0, 1405.0], [705.0, 4410.333333333334], [713.0, 4290.333333333334], [715.0, 5847.0], [717.0, 4478.333333333334], [719.0, 11597.0], [733.0, 1531.6666666666667], [735.0, 10459.0], [723.0, 10682.0], [721.0, 10769.5], [731.0, 10466.0], [729.0, 10962.0], [711.0, 10590.0], [709.0, 11496.0], [707.0, 10597.0], [727.0, 10559.0], [725.0, 10783.0], [763.0, 6855.5], [741.0, 2356.5555555555557], [739.0, 1104.0], [737.0, 10581.0], [751.0, 10419.0], [749.0, 11185.0], [747.0, 10559.0], [745.0, 10663.0], [743.0, 6395.5], [759.0, 3200.8], [761.0, 1648.0], [765.0, 10370.0], [757.0, 10365.0], [755.0, 10592.0], [753.0, 10553.0], [793.0, 6306.5], [783.0, 6299.5], [775.0, 6295.5], [773.0, 10649.0], [771.0, 10363.0], [769.0, 11177.0], [781.0, 4408.0], [779.0, 10463.0], [777.0, 10280.0], [791.0, 7436.333333333333], [789.0, 4335.333333333334], [799.0, 10271.5], [785.0, 10231.0], [797.0, 10548.0], [795.0, 10480.0], [801.0, 10469.0], [829.0, 10386.0], [815.0, 10518.0], [803.0, 10887.0], [805.0, 10206.0], [807.0, 10242.0], [813.0, 10075.0], [811.0, 10368.0], [809.0, 10202.0], [823.0, 6501.0], [821.0, 10711.0], [817.0, 9994.0], [831.0, 10205.0], [827.0, 10267.0], [825.0, 10878.0], [833.0, 10599.0], [835.0, 5717.0], [847.0, 9929.0], [837.0, 6176.0], [839.0, 9935.0], [857.0, 10276.0], [845.0, 5740.25], [843.0, 10456.0], [841.0, 9937.0], [851.0, 5819.5], [849.0, 10106.0], [855.0, 10893.0], [853.0, 9837.0], [861.0, 9865.0], [867.0, 1749.0], [865.0, 9784.0], [869.0, 6361.5], [871.0, 9788.0], [873.0, 5631.0], [875.0, 9864.0], [877.0, 5843.0], [879.0, 9713.0], [881.0, 5749.5], [885.0, 9733.5], [883.0, 10208.0], [887.0, 10245.0], [895.0, 9756.0], [893.0, 11535.0], [889.0, 9955.0], [891.0, 5555.5], [899.0, 5859.5], [923.0, 5499.0], [897.0, 1781.0], [911.0, 9710.0], [903.0, 5759.5], [901.0, 9683.0], [921.0, 10216.0], [905.0, 10006.0], [907.0, 5593.75], [909.0, 9634.0], [925.0, 5664.0], [927.0, 9551.0], [913.0, 9913.0], [915.0, 9593.0], [917.0, 9623.0], [919.0, 9953.0], [931.0, 9678.0], [933.0, 3432.0], [929.0, 11135.0], [935.0, 10933.0], [937.0, 9487.0], [941.0, 10784.0], [939.0, 11353.0], [943.0, 9495.0], [955.0, 9827.5], [953.0, 9637.0], [957.0, 10054.0], [959.0, 10306.0], [945.0, 9799.0], [947.0, 9675.0], [949.0, 9570.0], [951.0, 9837.0], [963.0, 4422.666666666666], [965.0, 5540.5], [961.0, 9570.0], [967.0, 5773.5], [969.0, 1685.0], [971.0, 9349.0], [973.0, 10230.0], [975.0, 12341.0], [981.0, 9988.0], [979.0, 9268.0], [983.0, 9263.0], [991.0, 9705.0], [989.0, 10335.0], [987.0, 9846.5], [985.0, 9334.0], [993.0, 9729.0], [997.0, 9260.5], [999.0, 9628.0], [1017.0, 10504.0], [1005.0, 9869.5], [1003.0, 9241.0], [1007.0, 9590.0], [995.0, 9261.0], [1001.0, 5420.5], [1019.0, 2670.0], [1021.0, 5475.0], [1009.0, 9365.0], [1011.0, 9440.0], [1013.0, 9183.0], [1015.0, 10621.0], [1034.0, 5938.0], [1038.0, 5541.5], [1030.0, 6766.0], [1042.0, 9549.0], [1046.0, 9019.0], [1054.0, 9510.0], [1082.0, 8885.0], [1074.0, 9927.0], [1086.0, 9177.0], [1070.0, 6099.5], [1066.0, 9965.0], [1062.0, 6646.333333333333], [1058.0, 9154.0], [1098.0, 8937.0], [1146.0, 5483.5], [1102.0, 5618.5], [1138.0, 8670.0], [1142.0, 9296.0], [1106.0, 8972.0], [1110.0, 5679.0], [1118.0, 9455.0], [1094.0, 9319.0], [1114.0, 8864.0], [1122.0, 9167.0], [1126.0, 9107.0], [1130.0, 11016.0], [1150.0, 6511.666666666667], [1134.0, 4276.666666666666], [1166.0, 9151.0], [1154.0, 7470.0], [1158.0, 8769.0], [1162.0, 9205.0], [1206.0, 2113.0], [1210.0, 8902.0], [1214.0, 8627.0], [1186.0, 9212.0], [1190.0, 8650.0], [1202.0, 6993.333333333333], [1170.0, 4068.0], [1174.0, 2125.0], [1178.0, 9341.0], [1182.0, 8750.0], [1198.0, 5379.5], [1194.0, 8906.0], [1226.0, 2347.5], [1270.0, 5184.0], [1218.0, 10130.0], [1278.0, 8007.0], [1254.0, 8367.0], [1250.0, 8569.0], [1274.0, 7037.0], [1266.0, 2247.0], [1238.0, 8285.0], [1234.0, 8545.166666666668], [1242.0, 8443.0], [1246.0, 8246.0], [1258.0, 5302.5], [1262.0, 8811.0], [1282.0, 8373.0], [1330.0, 5056.5], [1342.0, 7864.0], [1286.0, 5139.5], [1310.0, 8100.0], [1306.0, 8133.0], [1302.0, 7892.0], [1298.0, 8234.0], [1294.0, 8531.0], [1318.0, 5265.5], [1314.0, 7863.0], [1322.0, 8378.0], [1326.0, 4543.0], [1338.0, 8354.0], [1334.0, 7998.0], [1354.0, 2781.5], [1350.0, 3427.0], [1346.0, 7664.0], [1370.0, 7657.0], [1362.0, 8271.0], [1358.0, 7579.0], [1398.0, 8589.0], [1394.0, 7462.0], [1402.0, 7624.0], [1406.0, 7649.0], [1378.0, 7455.0], [1382.0, 7570.0], [1390.0, 4501.0], [1386.0, 4892.5], [1414.0, 5157.0], [1466.0, 7137.0], [1418.0, 3483.6], [1422.0, 8210.0], [1458.0, 7218.0], [1426.0, 7460.0], [1430.0, 7294.0], [1434.0, 7262.0], [1438.0, 7264.0], [1410.0, 7790.0], [1450.0, 7553.0], [1446.0, 7414.0], [1442.0, 7296.0], [1454.0, 7210.0], [1470.0, 7436.0], [1462.0, 8192.0], [1502.0, 7097.5], [1482.0, 7411.0], [1486.0, 8697.0], [1522.0, 7372.0], [1526.0, 7089.0], [1490.0, 7034.0], [1494.0, 8473.0], [1498.0, 7023.0], [1474.0, 7839.0], [1478.0, 4143.333333333333], [1506.0, 7137.0], [1534.0, 4639.666666666667], [1530.0, 6902.0], [1514.0, 5303.0], [1510.0, 7378.0], [1518.0, 7738.0], [1538.0, 7144.0], [1546.0, 7315.0], [1566.0, 7121.0], [1562.0, 6736.0], [1558.0, 6781.0], [1554.0, 6772.0], [1542.0, 5095.0], [1550.0, 4371.333333333333], [1586.0, 5760.5], [1590.0, 7546.0], [1594.0, 6710.0], [1574.0, 4139.333333333333], [1570.0, 7296.0], [1578.0, 7058.0], [1582.0, 7362.0], [1598.0, 6735.0], [1610.0, 5082.0], [1602.0, 4841.0], [1606.0, 6890.0], [1626.0, 5116.5], [1630.0, 6419.0], [1622.0, 4391.666666666667], [1614.0, 6651.0], [1650.0, 6589.0], [1654.0, 7324.0], [1658.0, 6274.0], [1618.0, 6967.0], [1662.0, 5235.5], [1642.0, 4251.5], [1634.0, 7978.0], [1646.0, 7514.0], [1674.0, 5281.0], [1722.0, 6215.0], [1670.0, 5299.5], [1666.0, 6280.0], [1690.0, 4817.0], [1694.0, 6349.0], [1714.0, 4927.5], [1698.0, 6178.0], [1702.0, 6494.0], [1706.0, 6380.0], [1710.0, 6585.0], [1726.0, 6103.5], [1718.0, 6749.5], [1678.0, 4374.666666666667], [1682.0, 6558.0], [1686.0, 6421.0], [1786.0, 6489.0], [1758.0, 5419.0], [1774.0, 4740.0], [1770.0, 5958.0], [1766.0, 6135.0], [1762.0, 6843.0], [1790.0, 5790.0], [1782.0, 5905.0], [1778.0, 6143.0], [1742.0, 6044.0], [1738.0, 5007.25], [1734.0, 6040.0], [1730.0, 6785.0], [1746.0, 4571.5], [1750.0, 7733.0], [1754.0, 7028.0], [1842.0, 3319.0], [1850.0, 6182.0], [1794.0, 4151.333333333333], [1798.0, 4869.0], [1846.0, 7658.0], [1854.0, 4501.5], [1806.0, 5913.0], [1802.0, 6647.5], [1830.0, 4792.5], [1826.0, 5640.0], [1834.0, 6808.0], [1838.0, 5634.0], [1818.0, 4120.0], [1814.0, 5764.0], [1822.0, 5173.5], [1914.0, 5365.0], [1858.0, 4542.0], [1870.0, 4666.5], [1862.0, 5592.0], [1878.0, 5450.0], [1882.0, 5605.0], [1898.0, 5373.0], [1894.0, 5370.0], [1902.0, 5581.0], [1918.0, 5414.0], [1910.0, 5460.0], [1906.0, 6063.0], [1978.0, 5336.0], [1954.0, 4143.0], [1926.0, 3485.0], [1930.0, 4020.1666666666665], [1934.0, 5230.0], [1966.0, 5131.0], [1962.0, 5335.0], [1982.0, 5219.0], [1974.0, 6516.0], [1938.0, 5958.0], [1946.0, 5164.0], [1950.0, 4360.5], [1922.0, 6489.0], [1986.0, 5887.0], [1990.0, 4935.0], [1998.0, 6057.0], [2042.0, 5430.5], [2006.0, 4865.0], [2002.0, 4992.0], [2010.0, 4409.0], [1994.0, 5237.0], [2014.0, 4801.0], [2034.0, 4727.333333333333], [2038.0, 4863.0], [2046.0, 5113.5], [2022.0, 4968.0], [2026.0, 5984.0], [2030.0, 4718.0], [2068.0, 4524.0], [2052.0, 4764.0], [2108.0, 4075.0], [2092.0, 4578.0], [2060.0, 5573.0], [2076.0, 5146.5], [2148.0, 3948.0], [2164.0, 4510.0], [2156.0, 4227.0], [2172.0, 3969.0], [2116.0, 4592.0], [2124.0, 4373.0], [2132.0, 4534.0], [2140.0, 4258.0], [2084.0, 4294.333333333333], [2180.0, 4416.0], [2053.0, 4259.5], [2061.0, 4607.0], [2101.0, 4479.5], [2093.0, 5484.0], [2109.0, 4919.5], [2069.0, 4520.0], [2077.0, 4845.0], [2149.0, 4465.666666666667], [2165.0, 4807.666666666667], [2173.0, 4184.0], [2157.0, 4701.0], [2117.0, 4332.0], [2125.0, 4311.0], [2133.0, 4194.5], [2141.0, 4608.0], [2085.0, 4469.0], [2181.0, 4144.6], [1031.0, 9112.0], [1079.0, 9126.5], [1087.0, 9031.0], [1035.0, 5964.5], [1027.0, 9195.0], [1055.0, 9088.0], [1051.0, 9467.5], [1047.0, 9011.0], [1043.0, 9052.0], [1083.0, 5329.5], [1075.0, 8952.0], [1063.0, 4236.0], [1067.0, 5029.333333333334], [1059.0, 9519.0], [1103.0, 1968.0], [1147.0, 5269.0], [1099.0, 8774.0], [1095.0, 9084.0], [1091.0, 9014.5], [1151.0, 8639.0], [1143.0, 10280.0], [1139.0, 9173.0], [1119.0, 5888.5], [1115.0, 9394.0], [1107.0, 8783.0], [1131.0, 5627.5], [1127.0, 9701.0], [1123.0, 8779.0], [1135.0, 4349.333333333334], [1159.0, 5774.0], [1203.0, 5344.0], [1167.0, 5269.5], [1155.0, 9057.0], [1163.0, 8736.0], [1207.0, 6498.666666666667], [1211.0, 8343.0], [1171.0, 9487.0], [1175.0, 8681.0], [1179.0, 8755.0], [1183.0, 10442.0], [1195.0, 9147.0], [1191.0, 8653.0], [1199.0, 8503.0], [1215.0, 9458.0], [1223.0, 2079.0], [1227.0, 2272.0], [1219.0, 8558.0], [1247.0, 8666.0], [1231.0, 8295.0], [1267.0, 8364.0], [1271.0, 9102.0], [1235.0, 5698.0], [1239.0, 8217.0], [1243.0, 5705.0], [1259.0, 5925.5], [1263.0, 8940.0], [1279.0, 8503.0], [1251.0, 11262.0], [1255.0, 8349.0], [1275.0, 8025.0], [1291.0, 8728.0], [1295.0, 4667.333333333333], [1283.0, 8147.0], [1287.0, 7974.0], [1299.0, 2524.0], [1307.0, 9578.0], [1311.0, 8575.0], [1315.0, 8272.0], [1343.0, 7998.0], [1339.0, 8613.0], [1335.0, 9311.0], [1331.0, 7850.0], [1327.0, 4094.5], [1323.0, 8252.0], [1319.0, 5374.0], [1395.0, 7351.0], [1351.0, 5292.75], [1355.0, 7778.5], [1359.0, 7563.0], [1399.0, 7311.0], [1403.0, 7420.0], [1407.0, 7422.0], [1379.0, 7435.0], [1363.0, 7832.0], [1367.0, 8058.5], [1371.0, 7809.0], [1375.0, 8613.5], [1347.0, 8117.0], [1383.0, 5165.5], [1391.0, 7472.0], [1387.0, 5220.5], [1459.0, 7304.0], [1467.0, 4300.666666666667], [1419.0, 3826.4], [1423.0, 7627.0], [1463.0, 9107.0], [1471.0, 7503.0], [1443.0, 7436.0], [1427.0, 7323.0], [1431.0, 7326.0], [1435.0, 7829.0], [1439.0, 7257.0], [1411.0, 7530.0], [1415.0, 8822.0], [1447.0, 4718.333333333334], [1451.0, 3684.7142857142862], [1455.0, 7730.0], [1483.0, 4313.0], [1479.0, 5214.0], [1503.0, 7049.0], [1475.0, 7337.0], [1499.0, 7017.0], [1495.0, 7043.0], [1487.0, 5839.0], [1535.0, 7889.0], [1531.0, 5159.5], [1523.0, 5206.0], [1527.0, 7199.0], [1511.0, 7057.0], [1507.0, 7204.0], [1515.0, 4137.666666666667], [1519.0, 7956.0], [1543.0, 4941.0], [1539.0, 7174.0], [1547.0, 6805.0], [1591.0, 7174.0], [1587.0, 7470.0], [1551.0, 8006.0], [1563.0, 5440.5], [1559.0, 6817.0], [1555.0, 8079.0], [1575.0, 5332.0], [1579.0, 7103.0], [1583.0, 7102.0], [1599.0, 7063.0], [1571.0, 7182.0], [1595.0, 7611.0], [1611.0, 4821.5], [1615.0, 5098.5], [1631.0, 4176.0], [1603.0, 6631.0], [1607.0, 6573.0], [1663.0, 4615.0], [1659.0, 6883.0], [1655.0, 6495.0], [1639.0, 6532.0], [1635.0, 6485.0], [1643.0, 6352.0], [1647.0, 6612.0], [1619.0, 7115.0], [1623.0, 6751.0], [1627.0, 6571.0], [1679.0, 3498.0], [1671.0, 4572.0], [1695.0, 6360.0], [1667.0, 6660.0], [1675.0, 7057.0], [1699.0, 4169.333333333333], [1727.0, 6099.0], [1723.0, 6204.0], [1719.0, 6743.0], [1715.0, 6149.0], [1711.0, 5314.5], [1707.0, 6301.0], [1703.0, 6335.0], [1683.0, 5041.0], [1687.0, 6339.0], [1691.0, 6981.0], [1763.0, 6711.0], [1787.0, 6745.0], [1731.0, 4870.0], [1755.0, 4625.0], [1759.0, 4059.75], [1775.0, 4790.666666666667], [1771.0, 6114.0], [1767.0, 6197.0], [1791.0, 6489.0], [1783.0, 6674.0], [1779.0, 5864.0], [1743.0, 7958.0], [1739.0, 3746.0], [1751.0, 6090.0], [1847.0, 5047.0], [1795.0, 3431.0], [1851.0, 5564.0], [1831.0, 6429.0], [1835.0, 5611.0], [1839.0, 5759.0], [1855.0, 6157.0], [1799.0, 6415.0], [1803.0, 5690.0], [1807.0, 6139.0], [1843.0, 6104.0], [1823.0, 4123.75], [1819.0, 3620.2], [1815.0, 5884.0], [1811.0, 6776.5], [1863.0, 5867.0], [1911.0, 3771.0], [1871.0, 3542.6666666666665], [1867.0, 5922.5], [1907.0, 6363.0], [1887.0, 5160.666666666667], [1883.0, 7064.0], [1879.0, 5563.0], [1875.0, 6539.0], [1891.0, 6003.0], [1895.0, 5530.0], [1919.0, 6125.0], [1915.0, 5474.0], [1899.0, 4129.4], [1903.0, 5358.0], [1979.0, 5860.0], [1931.0, 4650.333333333333], [1955.0, 5115.0], [1959.0, 5406.0], [1967.0, 5133.5], [1963.0, 5463.0], [1983.0, 4673.0], [1975.0, 5180.0], [1971.0, 5356.5], [1939.0, 4452.0], [1943.0, 5420.5], [1947.0, 5161.0], [1951.0, 4713.25], [1923.0, 6048.0], [1927.0, 5413.5], [2015.0, 4805.0], [2007.0, 5252.0], [2003.0, 4999.0], [2011.0, 4763.75], [1987.0, 5002.0], [1991.0, 4927.0], [1995.0, 4935.0], [1999.0, 5392.0], [2035.0, 4948.0], [2039.0, 5962.0], [2043.0, 4680.0], [2047.0, 4779.0], [2019.0, 5484.5], [2023.0, 4549.5], [2027.0, 4799.0], [2031.0, 4724.0], [2062.0, 4599.0], [2054.0, 5205.0], [2102.0, 4909.0], [2110.0, 4982.5], [2094.0, 4471.0], [2078.0, 5379.0], [2150.0, 4155.0], [2158.0, 4424.0], [2118.0, 4304.0], [2126.0, 4908.0], [2134.0, 4152.0], [2142.0, 4249.0], [2086.0, 4355.25], [2055.0, 4649.0], [2063.0, 4346.0], [2103.0, 3888.0], [2095.0, 4431.0], [2111.0, 5919.0], [2071.0, 4380.666666666667], [2079.0, 6020.0], [2151.0, 4163.333333333333], [2175.0, 4180.0], [2167.0, 4035.0], [2159.0, 4039.0], [2119.0, 5382.0], [2127.0, 4567.0], [2135.0, 4387.0], [2143.0, 4096.0], [2087.0, 6095.0], [1.0, 2182.285714285714]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[859.026486756622, 5541.7948525737165]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2181.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 43539.0, "minX": 1.699973416E12, "maxY": 265736.0, "series": [{"data": [[1.699973421E12, 68803.0], [1.69997342E12, 63114.0], [1.699973419E12, 65446.0], [1.699973424E12, 65956.0], [1.699973423E12, 74343.0], [1.699973422E12, 75863.0], [1.699973426E12, 73989.0], [1.699973425E12, 70666.0], [1.699973429E12, 69222.0], [1.699973428E12, 73435.0], [1.699973427E12, 80042.0], [1.699973431E12, 74331.0], [1.699973432E12, 71067.0], [1.69997343E12, 74401.0], [1.699973434E12, 79042.0], [1.699973433E12, 64608.0], [1.699973416E12, 127266.0], [1.699973437E12, 73423.0], [1.699973435E12, 77120.0], [1.699973436E12, 77645.0], [1.699973418E12, 106659.0], [1.699973417E12, 265736.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.699973421E12, 47488.0], [1.69997342E12, 43539.0], [1.699973419E12, 45146.0], [1.699973424E12, 45511.0], [1.699973423E12, 51288.0], [1.699973422E12, 52373.0], [1.699973426E12, 51079.0], [1.699973425E12, 48771.0], [1.699973429E12, 47762.0], [1.699973428E12, 50670.0], [1.699973427E12, 55247.0], [1.699973431E12, 51276.0], [1.699973432E12, 49027.0], [1.69997343E12, 51346.0], [1.699973434E12, 54537.0], [1.699973433E12, 44598.0], [1.699973416E12, 87826.0], [1.699973437E12, 50658.0], [1.699973435E12, 53195.0], [1.699973436E12, 53575.0], [1.699973418E12, 73599.0], [1.699973417E12, 183376.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699973437E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 8.785211267605636, "minX": 1.699973416E12, "maxY": 13769.713375796178, "series": [{"data": [[1.699973421E12, 2549.1428571428573], [1.69997342E12, 1823.0074074074073], [1.699973419E12, 1077.292857142857], [1.699973424E12, 4605.269503546102], [1.699973423E12, 4004.4716981132083], [1.699973422E12, 3289.8148148148157], [1.699973426E12, 6098.651898734181], [1.699973425E12, 5400.145695364239], [1.699973429E12, 8058.743243243245], [1.699973428E12, 7426.2292993630535], [1.699973427E12, 6704.947368421056], [1.699973431E12, 9476.402515723275], [1.699973432E12, 10169.309210526317], [1.69997343E12, 8879.666666666668], [1.699973434E12, 11569.946745562134], [1.699973433E12, 10863.427536231884], [1.699973416E12, 29.941176470588207], [1.699973437E12, 13769.713375796178], [1.699973435E12, 12311.212121212126], [1.699973436E12, 12891.614457831321], [1.699973418E12, 167.8947368421053], [1.699973417E12, 8.785211267605636]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699973437E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 8.74647887323945, "minX": 1.699973416E12, "maxY": 13769.662420382168, "series": [{"data": [[1.699973421E12, 2549.0340136054415], [1.69997342E12, 1822.9407407407407], [1.699973419E12, 1077.157142857143], [1.699973424E12, 4604.170212765957], [1.699973423E12, 4004.4339622641496], [1.699973422E12, 3289.703703703705], [1.699973426E12, 6098.550632911393], [1.699973425E12, 5400.072847682119], [1.699973429E12, 8058.6891891891855], [1.699973428E12, 7426.191082802546], [1.699973427E12, 6704.900584795322], [1.699973431E12, 9476.358490566037], [1.699973432E12, 10169.25], [1.69997343E12, 8879.616352201247], [1.699973434E12, 11569.86982248521], [1.699973433E12, 10863.362318840582], [1.699973416E12, 29.775735294117684], [1.699973437E12, 13769.662420382168], [1.699973435E12, 12311.187878787878], [1.699973436E12, 12891.536144578311], [1.699973418E12, 167.78947368421046], [1.699973417E12, 8.74647887323945]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699973437E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.5477707006369428, "minX": 1.699973416E12, "maxY": 7.51102941176471, "series": [{"data": [[1.699973421E12, 1.3945578231292521], [1.69997342E12, 1.3851851851851864], [1.699973419E12, 1.1785714285714286], [1.699973424E12, 1.0638297872340425], [1.699973423E12, 1.3836477987421385], [1.699973422E12, 1.092592592592593], [1.699973426E12, 0.886075949367089], [1.699973425E12, 0.947019867549669], [1.699973429E12, 1.9932432432432432], [1.699973428E12, 0.64968152866242], [1.699973427E12, 1.4210526315789471], [1.699973431E12, 1.138364779874214], [1.699973432E12, 0.7171052631578944], [1.69997343E12, 1.7987421383647801], [1.699973434E12, 0.8165680473372782], [1.699973433E12, 0.652173913043478], [1.699973416E12, 7.51102941176471], [1.699973437E12, 0.5477707006369428], [1.699973435E12, 1.0181818181818187], [1.699973436E12, 0.9698795180722893], [1.699973418E12, 1.355263157894737], [1.699973417E12, 1.2693661971830994]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699973437E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.699973416E12, "maxY": 15628.0, "series": [{"data": [[1.699973421E12, 3735.0], [1.69997342E12, 2735.0], [1.699973419E12, 1837.0], [1.699973424E12, 6501.0], [1.699973423E12, 5551.0], [1.699973422E12, 4689.0], [1.699973426E12, 8222.0], [1.699973425E12, 7185.0], [1.699973429E12, 10778.0], [1.699973428E12, 9539.0], [1.699973427E12, 8431.0], [1.699973431E12, 12341.0], [1.699973432E12, 11797.0], [1.69997343E12, 12472.0], [1.699973434E12, 13617.0], [1.699973433E12, 12443.0], [1.699973416E12, 203.0], [1.699973437E12, 15434.0], [1.699973435E12, 14080.0], [1.699973436E12, 15628.0], [1.699973418E12, 746.0], [1.699973417E12, 43.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.699973421E12, 3151.2000000000003], [1.69997342E12, 2445.8], [1.699973419E12, 1471.6], [1.699973424E12, 5341.0], [1.699973423E12, 4739.0], [1.699973422E12, 3920.8], [1.699973426E12, 6871.3], [1.699973425E12, 6112.6], [1.699973429E12, 8731.7], [1.699973428E12, 7994.8], [1.699973427E12, 7392.400000000001], [1.699973431E12, 10140.0], [1.699973432E12, 10902.4], [1.69997343E12, 9519.0], [1.699973434E12, 12278.0], [1.699973433E12, 11556.5], [1.699973416E12, 82.70000000000002], [1.699973437E12, 14539.800000000001], [1.699973435E12, 13054.2], [1.699973436E12, 13445.2], [1.699973418E12, 408.4999999999999], [1.699973417E12, 12.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.699973421E12, 3696.600000000001], [1.69997342E12, 2729.6], [1.699973419E12, 1814.4500000000003], [1.699973424E12, 6330.480000000005], [1.699973423E12, 5529.400000000001], [1.699973422E12, 4527.090000000001], [1.699973426E12, 8066.239999999999], [1.699973425E12, 7020.159999999997], [1.699973429E12, 10189.999999999989], [1.699973428E12, 9288.439999999995], [1.699973427E12, 8416.6], [1.699973431E12, 12157.400000000001], [1.699973432E12, 11763.08], [1.69997343E12, 11746.000000000007], [1.699973434E12, 13615.6], [1.699973433E12, 12386.839999999998], [1.699973416E12, 194.53999999999996], [1.699973437E12, 15356.279999999999], [1.699973435E12, 13929.52], [1.699973436E12, 15381.440000000004], [1.699973418E12, 697.4100000000005], [1.699973417E12, 28.61999999999989]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.699973421E12, 3445.6], [1.69997342E12, 2546.9999999999995], [1.699973419E12, 1674.9], [1.699973424E12, 5567.6], [1.699973423E12, 5113.0], [1.699973422E12, 4178.85], [1.699973426E12, 7469.349999999999], [1.699973425E12, 6407.200000000001], [1.699973429E12, 9071.4], [1.699973428E12, 8534.999999999998], [1.699973427E12, 7570.400000000001], [1.699973431E12, 10496.0], [1.699973432E12, 11361.4], [1.69997343E12, 10200.0], [1.699973434E12, 12615.5], [1.699973433E12, 11828.299999999997], [1.699973416E12, 136.69999999999993], [1.699973437E12, 14943.1], [1.699973435E12, 13351.7], [1.699973436E12, 13814.55], [1.699973418E12, 484.7999999999997], [1.699973417E12, 15.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.699973421E12, 1863.0], [1.69997342E12, 1243.0], [1.699973419E12, 503.0], [1.699973424E12, 3887.0], [1.699973423E12, 3256.0], [1.699973422E12, 2556.0], [1.699973426E12, 5370.0], [1.699973425E12, 4676.0], [1.699973429E12, 7311.0], [1.699973428E12, 6688.0], [1.699973427E12, 6029.0], [1.699973431E12, 8774.0], [1.699973432E12, 9487.0], [1.69997343E12, 8171.0], [1.699973434E12, 10874.0], [1.699973433E12, 10161.0], [1.699973416E12, 5.0], [1.699973437E12, 13006.0], [1.699973435E12, 11486.0], [1.699973436E12, 12207.0], [1.699973418E12, 7.0], [1.699973417E12, 5.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.699973421E12, 2510.0], [1.69997342E12, 1765.0], [1.699973419E12, 1059.0], [1.699973424E12, 4523.0], [1.699973423E12, 3906.0], [1.699973422E12, 3212.0], [1.699973426E12, 5976.5], [1.699973425E12, 5314.0], [1.699973429E12, 7965.0], [1.699973428E12, 7326.0], [1.699973427E12, 6599.0], [1.699973431E12, 9319.0], [1.699973432E12, 10040.5], [1.69997343E12, 8705.0], [1.699973434E12, 11430.0], [1.699973433E12, 10776.0], [1.699973416E12, 10.0], [1.699973437E12, 13636.0], [1.699973435E12, 12191.0], [1.699973436E12, 12787.0], [1.699973418E12, 104.5], [1.699973417E12, 8.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699973437E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 135.0, "maxY": 12787.0, "series": [{"data": [[135.0, 1765.0], [568.0, 8.0], [140.0, 1059.0], [141.0, 4523.0], [138.0, 10776.0], [147.0, 2510.0], [151.0, 5314.0], [148.0, 7965.0], [159.0, 8705.0], [158.0, 5976.5], [157.0, 11272.5], [152.0, 10040.5], [162.0, 3212.0], [165.0, 12191.0], [166.0, 12787.0], [171.0, 6599.0], [169.0, 11430.0], [228.0, 104.5], [272.0, 10.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 568.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 135.0, "maxY": 12787.0, "series": [{"data": [[135.0, 1765.0], [568.0, 8.0], [140.0, 1059.0], [141.0, 4523.0], [138.0, 10776.0], [147.0, 2510.0], [151.0, 5312.0], [148.0, 7965.0], [159.0, 8705.0], [158.0, 5976.5], [157.0, 11272.5], [152.0, 10040.5], [162.0, 3211.5], [165.0, 12191.0], [166.0, 12787.0], [171.0, 6599.0], [169.0, 11430.0], [228.0, 104.5], [272.0, 10.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 568.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 28.0, "minX": 1.699973416E12, "maxY": 629.0, "series": [{"data": [[1.699973421E12, 499.0], [1.69997342E12, 499.0], [1.699973419E12, 501.0], [1.699973424E12, 28.0], [1.699973423E12, 500.0], [1.699973422E12, 501.0], [1.699973416E12, 277.0], [1.699973418E12, 629.0], [1.699973417E12, 568.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699973424E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 135.0, "minX": 1.699973416E12, "maxY": 568.0, "series": [{"data": [[1.699973421E12, 147.0], [1.69997342E12, 135.0], [1.699973419E12, 140.0], [1.699973424E12, 141.0], [1.699973423E12, 159.0], [1.699973422E12, 162.0], [1.699973426E12, 158.0], [1.699973425E12, 151.0], [1.699973429E12, 148.0], [1.699973428E12, 157.0], [1.699973427E12, 171.0], [1.699973431E12, 159.0], [1.699973432E12, 152.0], [1.69997343E12, 159.0], [1.699973434E12, 169.0], [1.699973433E12, 138.0], [1.699973416E12, 272.0], [1.699973437E12, 157.0], [1.699973435E12, 165.0], [1.699973436E12, 166.0], [1.699973418E12, 228.0], [1.699973417E12, 568.0]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699973437E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 135.0, "minX": 1.699973416E12, "maxY": 568.0, "series": [{"data": [[1.699973421E12, 147.0], [1.69997342E12, 135.0], [1.699973419E12, 140.0], [1.699973424E12, 141.0], [1.699973423E12, 159.0], [1.699973422E12, 162.0], [1.699973426E12, 158.0], [1.699973425E12, 151.0], [1.699973429E12, 148.0], [1.699973428E12, 157.0], [1.699973427E12, 171.0], [1.699973431E12, 159.0], [1.699973432E12, 152.0], [1.69997343E12, 159.0], [1.699973434E12, 169.0], [1.699973433E12, 138.0], [1.699973416E12, 272.0], [1.699973437E12, 157.0], [1.699973435E12, 165.0], [1.699973436E12, 166.0], [1.699973418E12, 228.0], [1.699973417E12, 568.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699973437E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 135.0, "minX": 1.699973416E12, "maxY": 568.0, "series": [{"data": [[1.699973421E12, 147.0], [1.69997342E12, 135.0], [1.699973419E12, 140.0], [1.699973424E12, 141.0], [1.699973423E12, 159.0], [1.699973422E12, 162.0], [1.699973426E12, 158.0], [1.699973425E12, 151.0], [1.699973429E12, 148.0], [1.699973428E12, 157.0], [1.699973427E12, 171.0], [1.699973431E12, 159.0], [1.699973432E12, 152.0], [1.69997343E12, 159.0], [1.699973434E12, 169.0], [1.699973433E12, 138.0], [1.699973416E12, 272.0], [1.699973437E12, 157.0], [1.699973435E12, 165.0], [1.699973436E12, 166.0], [1.699973418E12, 228.0], [1.699973417E12, 568.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699973437E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

