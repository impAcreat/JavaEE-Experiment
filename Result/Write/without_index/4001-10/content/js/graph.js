/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 19980.0, "series": [{"data": [[0.0, 5.0], [0.1, 6.0], [0.2, 6.0], [0.3, 6.0], [0.4, 6.0], [0.5, 6.0], [0.6, 6.0], [0.7, 6.0], [0.8, 6.0], [0.9, 6.0], [1.0, 6.0], [1.1, 6.0], [1.2, 7.0], [1.3, 7.0], [1.4, 7.0], [1.5, 7.0], [1.6, 7.0], [1.7, 7.0], [1.8, 7.0], [1.9, 7.0], [2.0, 7.0], [2.1, 7.0], [2.2, 7.0], [2.3, 7.0], [2.4, 7.0], [2.5, 7.0], [2.6, 7.0], [2.7, 7.0], [2.8, 7.0], [2.9, 7.0], [3.0, 8.0], [3.1, 8.0], [3.2, 8.0], [3.3, 8.0], [3.4, 8.0], [3.5, 8.0], [3.6, 8.0], [3.7, 8.0], [3.8, 8.0], [3.9, 8.0], [4.0, 8.0], [4.1, 8.0], [4.2, 8.0], [4.3, 8.0], [4.4, 8.0], [4.5, 8.0], [4.6, 8.0], [4.7, 8.0], [4.8, 8.0], [4.9, 8.0], [5.0, 8.0], [5.1, 9.0], [5.2, 9.0], [5.3, 9.0], [5.4, 9.0], [5.5, 9.0], [5.6, 9.0], [5.7, 9.0], [5.8, 9.0], [5.9, 9.0], [6.0, 9.0], [6.1, 9.0], [6.2, 9.0], [6.3, 9.0], [6.4, 9.0], [6.5, 9.0], [6.6, 10.0], [6.7, 10.0], [6.8, 10.0], [6.9, 10.0], [7.0, 10.0], [7.1, 10.0], [7.2, 10.0], [7.3, 10.0], [7.4, 10.0], [7.5, 11.0], [7.6, 11.0], [7.7, 11.0], [7.8, 11.0], [7.9, 11.0], [8.0, 12.0], [8.1, 12.0], [8.2, 12.0], [8.3, 13.0], [8.4, 14.0], [8.5, 14.0], [8.6, 16.0], [8.7, 19.0], [8.8, 22.0], [8.9, 25.0], [9.0, 26.0], [9.1, 30.0], [9.2, 32.0], [9.3, 34.0], [9.4, 38.0], [9.5, 41.0], [9.6, 42.0], [9.7, 43.0], [9.8, 45.0], [9.9, 48.0], [10.0, 51.0], [10.1, 55.0], [10.2, 59.0], [10.3, 60.0], [10.4, 63.0], [10.5, 65.0], [10.6, 69.0], [10.7, 70.0], [10.8, 72.0], [10.9, 74.0], [11.0, 77.0], [11.1, 79.0], [11.2, 79.0], [11.3, 82.0], [11.4, 84.0], [11.5, 87.0], [11.6, 90.0], [11.7, 96.0], [11.8, 103.0], [11.9, 109.0], [12.0, 111.0], [12.1, 114.0], [12.2, 117.0], [12.3, 124.0], [12.4, 127.0], [12.5, 133.0], [12.6, 136.0], [12.7, 140.0], [12.8, 144.0], [12.9, 161.0], [13.0, 183.0], [13.1, 222.0], [13.2, 232.0], [13.3, 263.0], [13.4, 297.0], [13.5, 316.0], [13.6, 329.0], [13.7, 392.0], [13.8, 416.0], [13.9, 451.0], [14.0, 465.0], [14.1, 482.0], [14.2, 522.0], [14.3, 552.0], [14.4, 560.0], [14.5, 564.0], [14.6, 582.0], [14.7, 620.0], [14.8, 661.0], [14.9, 685.0], [15.0, 692.0], [15.1, 708.0], [15.2, 720.0], [15.3, 758.0], [15.4, 787.0], [15.5, 814.0], [15.6, 838.0], [15.7, 876.0], [15.8, 906.0], [15.9, 929.0], [16.0, 951.0], [16.1, 969.0], [16.2, 994.0], [16.3, 1004.0], [16.4, 1015.0], [16.5, 1043.0], [16.6, 1061.0], [16.7, 1085.0], [16.8, 1100.0], [16.9, 1140.0], [17.0, 1143.0], [17.1, 1183.0], [17.2, 1233.0], [17.3, 1274.0], [17.4, 1295.0], [17.5, 1300.0], [17.6, 1311.0], [17.7, 1343.0], [17.8, 1357.0], [17.9, 1366.0], [18.0, 1415.0], [18.1, 1431.0], [18.2, 1469.0], [18.3, 1482.0], [18.4, 1508.0], [18.5, 1534.0], [18.6, 1577.0], [18.7, 1598.0], [18.8, 1621.0], [18.9, 1670.0], [19.0, 1685.0], [19.1, 1750.0], [19.2, 1760.0], [19.3, 1778.0], [19.4, 1804.0], [19.5, 1829.0], [19.6, 1845.0], [19.7, 1886.0], [19.8, 1907.0], [19.9, 1919.0], [20.0, 1936.0], [20.1, 1960.0], [20.2, 1992.0], [20.3, 2019.0], [20.4, 2061.0], [20.5, 2072.0], [20.6, 2083.0], [20.7, 2097.0], [20.8, 2137.0], [20.9, 2170.0], [21.0, 2185.0], [21.1, 2192.0], [21.2, 2214.0], [21.3, 2228.0], [21.4, 2259.0], [21.5, 2262.0], [21.6, 2285.0], [21.7, 2300.0], [21.8, 2308.0], [21.9, 2326.0], [22.0, 2361.0], [22.1, 2371.0], [22.2, 2390.0], [22.3, 2394.0], [22.4, 2436.0], [22.5, 2467.0], [22.6, 2478.0], [22.7, 2494.0], [22.8, 2532.0], [22.9, 2545.0], [23.0, 2555.0], [23.1, 2572.0], [23.2, 2595.0], [23.3, 2614.0], [23.4, 2631.0], [23.5, 2650.0], [23.6, 2676.0], [23.7, 2695.0], [23.8, 2713.0], [23.9, 2726.0], [24.0, 2732.0], [24.1, 2750.0], [24.2, 2764.0], [24.3, 2800.0], [24.4, 2828.0], [24.5, 2848.0], [24.6, 2853.0], [24.7, 2871.0], [24.8, 2883.0], [24.9, 2899.0], [25.0, 2916.0], [25.1, 2931.0], [25.2, 2945.0], [25.3, 2958.0], [25.4, 3007.0], [25.5, 3019.0], [25.6, 3031.0], [25.7, 3041.0], [25.8, 3049.0], [25.9, 3085.0], [26.0, 3110.0], [26.1, 3165.0], [26.2, 3205.0], [26.3, 3216.0], [26.4, 3238.0], [26.5, 3277.0], [26.6, 3286.0], [26.7, 3314.0], [26.8, 3330.0], [26.9, 3347.0], [27.0, 3369.0], [27.1, 3389.0], [27.2, 3399.0], [27.3, 3432.0], [27.4, 3449.0], [27.5, 3486.0], [27.6, 3501.0], [27.7, 3513.0], [27.8, 3559.0], [27.9, 3568.0], [28.0, 3581.0], [28.1, 3592.0], [28.2, 3599.0], [28.3, 3620.0], [28.4, 3628.0], [28.5, 3641.0], [28.6, 3651.0], [28.7, 3661.0], [28.8, 3666.0], [28.9, 3679.0], [29.0, 3692.0], [29.1, 3721.0], [29.2, 3752.0], [29.3, 3765.0], [29.4, 3786.0], [29.5, 3807.0], [29.6, 3815.0], [29.7, 3833.0], [29.8, 3847.0], [29.9, 3859.0], [30.0, 3883.0], [30.1, 3889.0], [30.2, 3917.0], [30.3, 3924.0], [30.4, 3962.0], [30.5, 3974.0], [30.6, 3993.0], [30.7, 3999.0], [30.8, 4021.0], [30.9, 4043.0], [31.0, 4059.0], [31.1, 4076.0], [31.2, 4116.0], [31.3, 4138.0], [31.4, 4150.0], [31.5, 4179.0], [31.6, 4192.0], [31.7, 4208.0], [31.8, 4213.0], [31.9, 4240.0], [32.0, 4254.0], [32.1, 4259.0], [32.2, 4278.0], [32.3, 4296.0], [32.4, 4310.0], [32.5, 4319.0], [32.6, 4321.0], [32.7, 4340.0], [32.8, 4372.0], [32.9, 4400.0], [33.0, 4415.0], [33.1, 4433.0], [33.2, 4444.0], [33.3, 4481.0], [33.4, 4492.0], [33.5, 4518.0], [33.6, 4530.0], [33.7, 4540.0], [33.8, 4553.0], [33.9, 4575.0], [34.0, 4596.0], [34.1, 4613.0], [34.2, 4632.0], [34.3, 4666.0], [34.4, 4684.0], [34.5, 4696.0], [34.6, 4716.0], [34.7, 4768.0], [34.8, 4786.0], [34.9, 4794.0], [35.0, 4816.0], [35.1, 4838.0], [35.2, 4850.0], [35.3, 4876.0], [35.4, 4901.0], [35.5, 4913.0], [35.6, 4951.0], [35.7, 4968.0], [35.8, 4980.0], [35.9, 5002.0], [36.0, 5018.0], [36.1, 5043.0], [36.2, 5057.0], [36.3, 5064.0], [36.4, 5070.0], [36.5, 5093.0], [36.6, 5114.0], [36.7, 5125.0], [36.8, 5143.0], [36.9, 5159.0], [37.0, 5183.0], [37.1, 5194.0], [37.2, 5218.0], [37.3, 5247.0], [37.4, 5270.0], [37.5, 5287.0], [37.6, 5324.0], [37.7, 5341.0], [37.8, 5359.0], [37.9, 5372.0], [38.0, 5393.0], [38.1, 5410.0], [38.2, 5428.0], [38.3, 5437.0], [38.4, 5455.0], [38.5, 5466.0], [38.6, 5489.0], [38.7, 5500.0], [38.8, 5512.0], [38.9, 5523.0], [39.0, 5543.0], [39.1, 5559.0], [39.2, 5593.0], [39.3, 5595.0], [39.4, 5619.0], [39.5, 5627.0], [39.6, 5647.0], [39.7, 5647.0], [39.8, 5688.0], [39.9, 5712.0], [40.0, 5734.0], [40.1, 5747.0], [40.2, 5772.0], [40.3, 5781.0], [40.4, 5800.0], [40.5, 5843.0], [40.6, 5860.0], [40.7, 5876.0], [40.8, 5896.0], [40.9, 5923.0], [41.0, 5936.0], [41.1, 5949.0], [41.2, 5967.0], [41.3, 5988.0], [41.4, 6003.0], [41.5, 6043.0], [41.6, 6056.0], [41.7, 6070.0], [41.8, 6087.0], [41.9, 6104.0], [42.0, 6117.0], [42.1, 6128.0], [42.2, 6142.0], [42.3, 6155.0], [42.4, 6164.0], [42.5, 6183.0], [42.6, 6208.0], [42.7, 6217.0], [42.8, 6232.0], [42.9, 6251.0], [43.0, 6267.0], [43.1, 6293.0], [43.2, 6300.0], [43.3, 6318.0], [43.4, 6337.0], [43.5, 6351.0], [43.6, 6388.0], [43.7, 6420.0], [43.8, 6433.0], [43.9, 6456.0], [44.0, 6467.0], [44.1, 6482.0], [44.2, 6493.0], [44.3, 6531.0], [44.4, 6541.0], [44.5, 6554.0], [44.6, 6564.0], [44.7, 6572.0], [44.8, 6596.0], [44.9, 6601.0], [45.0, 6611.0], [45.1, 6624.0], [45.2, 6649.0], [45.3, 6666.0], [45.4, 6676.0], [45.5, 6696.0], [45.6, 6710.0], [45.7, 6744.0], [45.8, 6747.0], [45.9, 6764.0], [46.0, 6811.0], [46.1, 6832.0], [46.2, 6857.0], [46.3, 6865.0], [46.4, 6868.0], [46.5, 6874.0], [46.6, 6892.0], [46.7, 6913.0], [46.8, 6927.0], [46.9, 6953.0], [47.0, 6973.0], [47.1, 7015.0], [47.2, 7020.0], [47.3, 7033.0], [47.4, 7065.0], [47.5, 7097.0], [47.6, 7108.0], [47.7, 7121.0], [47.8, 7131.0], [47.9, 7157.0], [48.0, 7186.0], [48.1, 7208.0], [48.2, 7223.0], [48.3, 7246.0], [48.4, 7253.0], [48.5, 7280.0], [48.6, 7301.0], [48.7, 7308.0], [48.8, 7333.0], [48.9, 7355.0], [49.0, 7381.0], [49.1, 7398.0], [49.2, 7423.0], [49.3, 7452.0], [49.4, 7467.0], [49.5, 7484.0], [49.6, 7489.0], [49.7, 7514.0], [49.8, 7543.0], [49.9, 7567.0], [50.0, 7574.0], [50.1, 7591.0], [50.2, 7622.0], [50.3, 7630.0], [50.4, 7647.0], [50.5, 7682.0], [50.6, 7702.0], [50.7, 7726.0], [50.8, 7750.0], [50.9, 7781.0], [51.0, 7802.0], [51.1, 7816.0], [51.2, 7838.0], [51.3, 7853.0], [51.4, 7874.0], [51.5, 7883.0], [51.6, 7893.0], [51.7, 7908.0], [51.8, 7937.0], [51.9, 7959.0], [52.0, 7972.0], [52.1, 7992.0], [52.2, 8011.0], [52.3, 8037.0], [52.4, 8072.0], [52.5, 8104.0], [52.6, 8113.0], [52.7, 8130.0], [52.8, 8151.0], [52.9, 8164.0], [53.0, 8182.0], [53.1, 8198.0], [53.2, 8220.0], [53.3, 8232.0], [53.4, 8262.0], [53.5, 8311.0], [53.6, 8333.0], [53.7, 8345.0], [53.8, 8350.0], [53.9, 8370.0], [54.0, 8398.0], [54.1, 8420.0], [54.2, 8433.0], [54.3, 8448.0], [54.4, 8466.0], [54.5, 8473.0], [54.6, 8491.0], [54.7, 8509.0], [54.8, 8516.0], [54.9, 8542.0], [55.0, 8550.0], [55.1, 8558.0], [55.2, 8579.0], [55.3, 8592.0], [55.4, 8626.0], [55.5, 8653.0], [55.6, 8669.0], [55.7, 8685.0], [55.8, 8702.0], [55.9, 8705.0], [56.0, 8715.0], [56.1, 8727.0], [56.2, 8763.0], [56.3, 8784.0], [56.4, 8795.0], [56.5, 8805.0], [56.6, 8828.0], [56.7, 8838.0], [56.8, 8846.0], [56.9, 8855.0], [57.0, 8884.0], [57.1, 8905.0], [57.2, 8918.0], [57.3, 8933.0], [57.4, 8940.0], [57.5, 8976.0], [57.6, 9008.0], [57.7, 9027.0], [57.8, 9038.0], [57.9, 9079.0], [58.0, 9097.0], [58.1, 9104.0], [58.2, 9131.0], [58.3, 9178.0], [58.4, 9200.0], [58.5, 9219.0], [58.6, 9232.0], [58.7, 9255.0], [58.8, 9272.0], [58.9, 9299.0], [59.0, 9353.0], [59.1, 9365.0], [59.2, 9383.0], [59.3, 9397.0], [59.4, 9414.0], [59.5, 9436.0], [59.6, 9471.0], [59.7, 9483.0], [59.8, 9507.0], [59.9, 9528.0], [60.0, 9540.0], [60.1, 9555.0], [60.2, 9562.0], [60.3, 9584.0], [60.4, 9600.0], [60.5, 9624.0], [60.6, 9633.0], [60.7, 9650.0], [60.8, 9673.0], [60.9, 9697.0], [61.0, 9713.0], [61.1, 9727.0], [61.2, 9750.0], [61.3, 9797.0], [61.4, 9804.0], [61.5, 9816.0], [61.6, 9826.0], [61.7, 9857.0], [61.8, 9866.0], [61.9, 9879.0], [62.0, 9908.0], [62.1, 9935.0], [62.2, 9956.0], [62.3, 9972.0], [62.4, 9981.0], [62.5, 10009.0], [62.6, 10024.0], [62.7, 10043.0], [62.8, 10049.0], [62.9, 10059.0], [63.0, 10087.0], [63.1, 10118.0], [63.2, 10136.0], [63.3, 10141.0], [63.4, 10182.0], [63.5, 10197.0], [63.6, 10205.0], [63.7, 10220.0], [63.8, 10228.0], [63.9, 10259.0], [64.0, 10268.0], [64.1, 10286.0], [64.2, 10295.0], [64.3, 10321.0], [64.4, 10340.0], [64.5, 10352.0], [64.6, 10370.0], [64.7, 10387.0], [64.8, 10398.0], [64.9, 10412.0], [65.0, 10430.0], [65.1, 10446.0], [65.2, 10450.0], [65.3, 10461.0], [65.4, 10482.0], [65.5, 10504.0], [65.6, 10519.0], [65.7, 10539.0], [65.8, 10548.0], [65.9, 10559.0], [66.0, 10591.0], [66.1, 10598.0], [66.2, 10616.0], [66.3, 10625.0], [66.4, 10644.0], [66.5, 10654.0], [66.6, 10691.0], [66.7, 10705.0], [66.8, 10729.0], [66.9, 10756.0], [67.0, 10769.0], [67.1, 10780.0], [67.2, 10793.0], [67.3, 10811.0], [67.4, 10824.0], [67.5, 10836.0], [67.6, 10871.0], [67.7, 10895.0], [67.8, 10908.0], [67.9, 10957.0], [68.0, 10966.0], [68.1, 10982.0], [68.2, 10996.0], [68.3, 11033.0], [68.4, 11040.0], [68.5, 11050.0], [68.6, 11058.0], [68.7, 11080.0], [68.8, 11100.0], [68.9, 11127.0], [69.0, 11146.0], [69.1, 11165.0], [69.2, 11177.0], [69.3, 11205.0], [69.4, 11239.0], [69.5, 11261.0], [69.6, 11271.0], [69.7, 11282.0], [69.8, 11293.0], [69.9, 11318.0], [70.0, 11344.0], [70.1, 11355.0], [70.2, 11361.0], [70.3, 11382.0], [70.4, 11413.0], [70.5, 11445.0], [70.6, 11486.0], [70.7, 11511.0], [70.8, 11530.0], [70.9, 11535.0], [71.0, 11550.0], [71.1, 11603.0], [71.2, 11617.0], [71.3, 11644.0], [71.4, 11677.0], [71.5, 11715.0], [71.6, 11740.0], [71.7, 11746.0], [71.8, 11774.0], [71.9, 11797.0], [72.0, 11801.0], [72.1, 11807.0], [72.2, 11821.0], [72.3, 11838.0], [72.4, 11850.0], [72.5, 11868.0], [72.6, 11908.0], [72.7, 11929.0], [72.8, 11957.0], [72.9, 11982.0], [73.0, 11994.0], [73.1, 12017.0], [73.2, 12042.0], [73.3, 12094.0], [73.4, 12108.0], [73.5, 12123.0], [73.6, 12137.0], [73.7, 12156.0], [73.8, 12161.0], [73.9, 12188.0], [74.0, 12208.0], [74.1, 12215.0], [74.2, 12229.0], [74.3, 12268.0], [74.4, 12272.0], [74.5, 12293.0], [74.6, 12326.0], [74.7, 12343.0], [74.8, 12364.0], [74.9, 12374.0], [75.0, 12396.0], [75.1, 12403.0], [75.2, 12425.0], [75.3, 12434.0], [75.4, 12450.0], [75.5, 12501.0], [75.6, 12520.0], [75.7, 12544.0], [75.8, 12557.0], [75.9, 12581.0], [76.0, 12605.0], [76.1, 12621.0], [76.2, 12630.0], [76.3, 12668.0], [76.4, 12692.0], [76.5, 12699.0], [76.6, 12703.0], [76.7, 12713.0], [76.8, 12736.0], [76.9, 12753.0], [77.0, 12787.0], [77.1, 12800.0], [77.2, 12826.0], [77.3, 12831.0], [77.4, 12837.0], [77.5, 12847.0], [77.6, 12865.0], [77.7, 12878.0], [77.8, 12895.0], [77.9, 12909.0], [78.0, 12925.0], [78.1, 12932.0], [78.2, 12959.0], [78.3, 12994.0], [78.4, 13010.0], [78.5, 13017.0], [78.6, 13036.0], [78.7, 13058.0], [78.8, 13066.0], [78.9, 13079.0], [79.0, 13091.0], [79.1, 13119.0], [79.2, 13144.0], [79.3, 13150.0], [79.4, 13172.0], [79.5, 13211.0], [79.6, 13226.0], [79.7, 13246.0], [79.8, 13261.0], [79.9, 13272.0], [80.0, 13292.0], [80.1, 13310.0], [80.2, 13328.0], [80.3, 13343.0], [80.4, 13347.0], [80.5, 13371.0], [80.6, 13390.0], [80.7, 13419.0], [80.8, 13428.0], [80.9, 13453.0], [81.0, 13476.0], [81.1, 13486.0], [81.2, 13500.0], [81.3, 13537.0], [81.4, 13548.0], [81.5, 13573.0], [81.6, 13594.0], [81.7, 13606.0], [81.8, 13621.0], [81.9, 13644.0], [82.0, 13675.0], [82.1, 13704.0], [82.2, 13717.0], [82.3, 13734.0], [82.4, 13739.0], [82.5, 13747.0], [82.6, 13765.0], [82.7, 13779.0], [82.8, 13792.0], [82.9, 13828.0], [83.0, 13849.0], [83.1, 13878.0], [83.2, 13899.0], [83.3, 13933.0], [83.4, 13943.0], [83.5, 13962.0], [83.6, 13992.0], [83.7, 14007.0], [83.8, 14019.0], [83.9, 14031.0], [84.0, 14055.0], [84.1, 14079.0], [84.2, 14110.0], [84.3, 14122.0], [84.4, 14157.0], [84.5, 14175.0], [84.6, 14191.0], [84.7, 14202.0], [84.8, 14226.0], [84.9, 14249.0], [85.0, 14268.0], [85.1, 14330.0], [85.2, 14345.0], [85.3, 14360.0], [85.4, 14391.0], [85.5, 14408.0], [85.6, 14458.0], [85.7, 14481.0], [85.8, 14508.0], [85.9, 14517.0], [86.0, 14527.0], [86.1, 14545.0], [86.2, 14554.0], [86.3, 14579.0], [86.4, 14602.0], [86.5, 14626.0], [86.6, 14641.0], [86.7, 14661.0], [86.8, 14691.0], [86.9, 14716.0], [87.0, 14738.0], [87.1, 14760.0], [87.2, 14782.0], [87.3, 14789.0], [87.4, 14804.0], [87.5, 14827.0], [87.6, 14846.0], [87.7, 14877.0], [87.8, 14905.0], [87.9, 14925.0], [88.0, 14943.0], [88.1, 14951.0], [88.2, 14965.0], [88.3, 15009.0], [88.4, 15024.0], [88.5, 15042.0], [88.6, 15073.0], [88.7, 15087.0], [88.8, 15095.0], [88.9, 15114.0], [89.0, 15147.0], [89.1, 15183.0], [89.2, 15194.0], [89.3, 15219.0], [89.4, 15244.0], [89.5, 15270.0], [89.6, 15298.0], [89.7, 15312.0], [89.8, 15315.0], [89.9, 15328.0], [90.0, 15363.0], [90.1, 15376.0], [90.2, 15387.0], [90.3, 15412.0], [90.4, 15417.0], [90.5, 15446.0], [90.6, 15470.0], [90.7, 15476.0], [90.8, 15498.0], [90.9, 15513.0], [91.0, 15554.0], [91.1, 15560.0], [91.2, 15569.0], [91.3, 15582.0], [91.4, 15594.0], [91.5, 15603.0], [91.6, 15614.0], [91.7, 15641.0], [91.8, 15661.0], [91.9, 15677.0], [92.0, 15694.0], [92.1, 15711.0], [92.2, 15724.0], [92.3, 15737.0], [92.4, 15747.0], [92.5, 15757.0], [92.6, 15776.0], [92.7, 15797.0], [92.8, 15804.0], [92.9, 15830.0], [93.0, 15867.0], [93.1, 15877.0], [93.2, 15890.0], [93.3, 15899.0], [93.4, 15912.0], [93.5, 15945.0], [93.6, 15971.0], [93.7, 15994.0], [93.8, 16021.0], [93.9, 16063.0], [94.0, 16086.0], [94.1, 16103.0], [94.2, 16120.0], [94.3, 16128.0], [94.4, 16145.0], [94.5, 16164.0], [94.6, 16188.0], [94.7, 16212.0], [94.8, 16218.0], [94.9, 16247.0], [95.0, 16260.0], [95.1, 16280.0], [95.2, 16298.0], [95.3, 16316.0], [95.4, 16326.0], [95.5, 16343.0], [95.6, 16368.0], [95.7, 16385.0], [95.8, 16413.0], [95.9, 16452.0], [96.0, 16462.0], [96.1, 16483.0], [96.2, 16512.0], [96.3, 16518.0], [96.4, 16529.0], [96.5, 16542.0], [96.6, 16566.0], [96.7, 16589.0], [96.8, 16606.0], [96.9, 16644.0], [97.0, 16687.0], [97.1, 16719.0], [97.2, 16725.0], [97.3, 16752.0], [97.4, 16775.0], [97.5, 16795.0], [97.6, 16830.0], [97.7, 16857.0], [97.8, 16878.0], [97.9, 16905.0], [98.0, 16933.0], [98.1, 16964.0], [98.2, 16989.0], [98.3, 17016.0], [98.4, 17054.0], [98.5, 17066.0], [98.6, 17092.0], [98.7, 17111.0], [98.8, 17149.0], [98.9, 17231.0], [99.0, 17292.0], [99.1, 17391.0], [99.2, 17443.0], [99.3, 17505.0], [99.4, 17600.0], [99.5, 17700.0], [99.6, 17926.0], [99.7, 18138.0], [99.8, 18431.0], [99.9, 18905.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 470.0, "series": [{"data": [[0.0, 470.0], [100.0, 51.0], [200.0, 16.0], [300.0, 13.0], [400.0, 16.0], [500.0, 20.0], [600.0, 17.0], [700.0, 17.0], [800.0, 10.0], [900.0, 21.0], [1000.0, 21.0], [1100.0, 14.0], [1200.0, 14.0], [1300.0, 20.0], [1400.0, 16.0], [1500.0, 13.0], [1600.0, 13.0], [1700.0, 14.0], [1800.0, 14.0], [1900.0, 19.0], [2000.0, 20.0], [2100.0, 17.0], [2200.0, 22.0], [2300.0, 26.0], [2400.0, 15.0], [2500.0, 21.0], [2600.0, 21.0], [2800.0, 25.0], [2700.0, 21.0], [2900.0, 19.0], [3000.0, 23.0], [3100.0, 9.0], [3200.0, 18.0], [3300.0, 23.0], [3400.0, 15.0], [3500.0, 25.0], [3600.0, 34.0], [3700.0, 16.0], [3800.0, 29.0], [3900.0, 21.0], [4000.0, 18.0], [4100.0, 18.0], [4300.0, 22.0], [4200.0, 29.0], [4500.0, 23.0], [4400.0, 22.0], [4600.0, 20.0], [4700.0, 16.0], [4800.0, 19.0], [4900.0, 20.0], [5000.0, 26.0], [5100.0, 23.0], [5200.0, 19.0], [5300.0, 19.0], [5400.0, 25.0], [5600.0, 20.0], [5500.0, 25.0], [5800.0, 17.0], [5700.0, 23.0], [5900.0, 22.0], [6100.0, 29.0], [6000.0, 19.0], [6300.0, 18.0], [6200.0, 25.0], [6500.0, 27.0], [6400.0, 23.0], [6600.0, 25.0], [6700.0, 18.0], [6900.0, 16.0], [6800.0, 27.0], [7000.0, 20.0], [7100.0, 20.0], [7400.0, 21.0], [7300.0, 21.0], [7200.0, 22.0], [7600.0, 19.0], [7500.0, 19.0], [7900.0, 19.0], [7700.0, 16.0], [7800.0, 26.0], [8000.0, 15.0], [8100.0, 26.0], [8400.0, 26.0], [8700.0, 27.0], [8300.0, 23.0], [8500.0, 26.0], [8200.0, 12.0], [8600.0, 19.0], [9000.0, 19.0], [8800.0, 24.0], [9200.0, 21.0], [9100.0, 14.0], [8900.0, 20.0], [9500.0, 25.0], [9300.0, 16.0], [9400.0, 17.0], [9600.0, 23.0], [9700.0, 15.0], [9800.0, 25.0], [10000.0, 24.0], [10200.0, 26.0], [9900.0, 21.0], [10100.0, 20.0], [10300.0, 24.0], [10600.0, 22.0], [10700.0, 23.0], [10500.0, 26.0], [10400.0, 26.0], [11200.0, 22.0], [10900.0, 22.0], [11000.0, 19.0], [10800.0, 19.0], [11100.0, 22.0], [11300.0, 19.0], [11600.0, 14.0], [11500.0, 16.0], [11700.0, 21.0], [11400.0, 15.0], [11800.0, 24.0], [12200.0, 22.0], [12100.0, 26.0], [11900.0, 19.0], [12000.0, 11.0], [12500.0, 18.0], [12300.0, 23.0], [12700.0, 23.0], [12600.0, 23.0], [12400.0, 16.0], [12900.0, 21.0], [12800.0, 30.0], [13000.0, 26.0], [13200.0, 21.0], [13300.0, 26.0], [13100.0, 19.0], [13700.0, 30.0], [13400.0, 21.0], [13600.0, 19.0], [13800.0, 15.0], [13500.0, 17.0], [14000.0, 21.0], [14200.0, 16.0], [13900.0, 18.0], [14300.0, 15.0], [14100.0, 19.0], [14600.0, 18.0], [14800.0, 18.0], [14500.0, 24.0], [14400.0, 14.0], [14700.0, 20.0], [14900.0, 20.0], [15300.0, 24.0], [15100.0, 16.0], [15000.0, 22.0], [15200.0, 16.0], [15700.0, 28.0], [15400.0, 23.0], [15500.0, 25.0], [15800.0, 24.0], [15600.0, 24.0], [16000.0, 15.0], [16100.0, 24.0], [15900.0, 15.0], [16300.0, 23.0], [16200.0, 21.0], [17300.0, 5.0], [16500.0, 23.0], [17000.0, 18.0], [16900.0, 15.0], [17400.0, 5.0], [16700.0, 20.0], [16800.0, 12.0], [17100.0, 9.0], [16400.0, 16.0], [17200.0, 5.0], [16600.0, 11.0], [17700.0, 4.0], [17900.0, 4.0], [17600.0, 4.0], [18200.0, 3.0], [17500.0, 5.0], [18400.0, 1.0], [18100.0, 1.0], [18600.0, 2.0], [18900.0, 1.0], [19200.0, 1.0], [18500.0, 1.0], [19900.0, 1.0], [19600.0, 2.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 19900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 170.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 3265.0, "series": [{"data": [[0.0, 566.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 170.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 3265.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 8.150753768844222, "minX": 1.699973493E12, "maxY": 2439.6097560975604, "series": [{"data": [[1.699973493E12, 8.150753768844222], [1.699973495E12, 678.8417266187053], [1.699973496E12, 1058.3576158940393], [1.699973494E12, 175.15934065934064], [1.699973498E12, 1743.0068493150682], [1.699973497E12, 1398.706666666667], [1.699973501E12, 2439.6097560975604], [1.699973499E12, 2104.45061728395], [1.6999735E12, 2436.0789473684204], [1.699973503E12, 2133.0653594771247], [1.699973504E12, 1985.5985915492959], [1.699973502E12, 2283.5810810810804], [1.699973506E12, 1694.6126760563377], [1.699973505E12, 1840.0604026845638], [1.699973509E12, 1241.1448275862067], [1.699973507E12, 1548.6066666666673], [1.699973508E12, 1393.5749999999998], [1.699973511E12, 954.110344827586], [1.699973512E12, 806.6066666666668], [1.69997351E12, 1097.5845070422538], [1.699973514E12, 524.0902255639102], [1.699973513E12, 661.0992907801426], [1.699973517E12, 70.68571428571424], [1.699973515E12, 384.12244897959187], [1.699973516E12, 225.60588235294134]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699973517E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 8.75, "minX": 1.0, "maxY": 18629.0, "series": [{"data": [[2.0, 573.4333333333334], [3.0, 273.969696969697], [4.0, 180.68686868686868], [5.0, 8.75], [6.0, 948.081081081081], [7.0, 575.4848484848485], [8.0, 1009.5294117647059], [9.0, 2126.25], [10.0, 5526.0], [11.0, 5913.333333333333], [12.0, 9394.0], [13.0, 8816.5], [14.0, 13.0], [15.0, 11340.0], [16.0, 5760.333333333333], [17.0, 8401.5], [18.0, 8302.0], [20.0, 8417.25], [21.0, 16884.0], [22.0, 4321.0], [23.0, 8527.5], [24.0, 4377.25], [25.0, 90.0], [26.0, 100.5], [27.0, 2480.5714285714284], [28.0, 6771.2], [29.0, 3612.8], [30.0, 3909.777777777778], [31.0, 73.33333333333333], [32.0, 3893.666666666667], [33.0, 2968.8333333333335], [35.0, 8380.5], [34.0, 2816.6666666666665], [36.0, 8353.5], [37.0, 5585.333333333333], [38.0, 5583.666666666667], [39.0, 16718.0], [41.0, 8706.5], [40.0, 17097.0], [43.0, 4235.75], [42.0, 9156.5], [45.0, 4335.875], [44.0, 88.0], [47.0, 2946.1666666666665], [46.0, 8299.0], [49.0, 4302.5], [48.0, 5891.666666666667], [50.0, 86.58333333333333], [51.0, 2174.75], [52.0, 7362.6], [53.0, 9635.0], [55.0, 16816.5], [57.0, 17092.0], [56.0, 17292.0], [59.0, 17054.0], [58.0, 16687.0], [61.0, 8560.0], [60.0, 16533.0], [63.0, 12157.0], [62.0, 62.0], [67.0, 5578.666666666667], [65.0, 8321.0], [64.0, 6409.666666666667], [66.0, 5597.666666666667], [69.0, 11250.0], [71.0, 16901.0], [70.0, 16522.0], [75.0, 5562.0], [74.0, 16512.0], [73.0, 16663.0], [72.0, 16536.0], [78.0, 5699.0], [77.0, 5737.333333333333], [76.0, 8287.5], [79.0, 18629.0], [83.0, 16933.0], [82.0, 18431.0], [81.0, 16589.0], [80.0, 16857.0], [86.0, 8456.0], [87.0, 16719.0], [85.0, 16607.0], [84.0, 16704.0], [91.0, 17622.0], [90.0, 16878.0], [89.0, 16542.0], [88.0, 16520.0], [92.0, 8658.5], [93.0, 6703.333333333333], [94.0, 5633.333333333333], [95.0, 16749.0], [99.0, 16766.0], [98.0, 16589.0], [97.0, 17336.0], [102.0, 16830.0], [101.0, 17008.0], [106.0, 8426.5], [107.0, 16386.0], [105.0, 17071.0], [104.0, 17147.0], [109.0, 8233.5], [111.0, 17374.5], [108.0, 16644.0], [115.0, 17030.0], [114.0, 16567.0], [113.0, 16419.0], [119.0, 16560.0], [118.0, 16462.0], [117.0, 16543.0], [123.0, 17169.0], [121.0, 16517.0], [120.0, 16413.0], [127.0, 8248.5], [126.0, 5550.666666666667], [125.0, 16268.0], [124.0, 16383.0], [128.0, 4154.0], [129.0, 80.0], [135.0, 16335.0], [133.0, 16361.0], [132.0, 16306.0], [131.0, 16489.0], [130.0, 16933.5], [142.0, 8194.5], [143.0, 16377.0], [141.0, 17501.0], [140.0, 16695.0], [139.0, 16440.0], [138.0, 16260.0], [137.0, 16217.0], [136.0, 16442.0], [150.0, 11164.333333333334], [151.0, 17016.0], [149.0, 18247.0], [147.0, 16327.0], [146.0, 17443.0], [145.0, 16289.0], [155.0, 8697.0], [159.0, 16183.0], [158.0, 16483.0], [157.0, 17082.0], [154.0, 16251.0], [153.0, 16671.0], [152.0, 16343.0], [167.0, 8179.5], [166.0, 5645.5], [164.0, 16329.0], [163.0, 16182.0], [162.0, 16325.0], [161.0, 16470.0], [160.0, 16094.0], [168.0, 8914.5], [173.0, 8135.5], [175.0, 16076.0], [174.0, 16155.0], [172.0, 16493.0], [171.0, 16159.0], [170.0, 16522.0], [183.0, 17939.0], [182.0, 16105.0], [181.0, 16795.0], [180.0, 16366.0], [179.0, 16233.0], [178.0, 16880.0], [176.0, 16281.0], [191.0, 15877.0], [190.0, 16288.0], [189.0, 16128.0], [188.0, 16915.0], [187.0, 15899.0], [186.0, 17978.0], [185.0, 16122.0], [184.0, 16087.0], [199.0, 15794.0], [198.0, 15884.0], [197.0, 16212.0], [196.0, 16711.5], [194.0, 16145.0], [193.0, 16752.0], [192.0, 16113.0], [204.0, 8098.0], [207.0, 15797.0], [206.0, 15733.0], [205.0, 16134.0], [203.0, 16198.0], [201.0, 15785.0], [200.0, 17702.0], [215.0, 16183.0], [214.0, 16251.0], [212.0, 15921.0], [211.0, 15804.0], [209.0, 15896.0], [208.0, 15797.0], [223.0, 16316.0], [222.0, 15992.5], [220.0, 16069.0], [219.0, 15747.0], [218.0, 15994.0], [217.0, 16387.0], [216.0, 16602.0], [229.0, 5359.0], [228.0, 8129.5], [227.0, 5397.666666666667], [230.0, 15695.0], [226.0, 16063.0], [225.0, 16298.0], [224.0, 15769.0], [239.0, 16188.0], [238.0, 15726.0], [237.0, 16784.0], [236.0, 15690.0], [235.0, 15711.0], [234.0, 16775.0], [233.0, 17346.0], [232.0, 16611.0], [241.0, 7957.5], [242.0, 7932.0], [247.0, 15954.0], [246.0, 16216.0], [245.0, 15936.0], [244.0, 16277.0], [243.0, 15648.0], [240.0, 15830.0], [250.0, 8694.0], [255.0, 7871.5], [254.0, 15869.0], [253.0, 15757.0], [252.0, 15807.0], [251.0, 16018.0], [249.0, 15948.0], [248.0, 15666.0], [270.0, 15912.0], [271.0, 15582.0], [269.0, 16064.0], [268.0, 16610.5], [266.0, 15565.0], [265.0, 15629.0], [264.0, 15762.0], [263.0, 16155.0], [257.0, 16126.0], [256.0, 15590.0], [259.0, 15892.0], [258.0, 15611.0], [261.0, 17072.0], [260.0, 15587.0], [286.0, 15844.0], [279.0, 8608.5], [273.0, 15931.5], [275.0, 15902.0], [274.0, 15594.0], [278.0, 15605.0], [277.0, 16254.0], [276.0, 16433.0], [287.0, 15549.0], [285.0, 16213.0], [284.0, 15723.0], [283.0, 15703.0], [282.0, 16142.0], [281.0, 15616.0], [280.0, 17149.0], [302.0, 17011.0], [297.0, 8050.5], [298.0, 15457.0], [296.0, 5279.333333333333], [294.0, 4092.75], [295.0, 5453.333333333333], [289.0, 16238.0], [288.0, 15984.0], [291.0, 16038.0], [290.0, 15523.0], [293.0, 4041.25], [292.0, 4488.25], [303.0, 15967.0], [301.0, 15880.0], [300.0, 15529.5], [317.0, 8219.0], [308.0, 511.0], [310.0, 15567.0], [309.0, 15786.0], [319.0, 15512.0], [318.0, 15376.0], [316.0, 15677.0], [307.0, 15775.0], [306.0, 15716.0], [305.0, 15737.0], [304.0, 15414.0], [315.0, 16905.0], [314.0, 15448.0], [313.0, 15585.0], [311.0, 16334.0], [333.0, 15387.0], [326.0, 8059.5], [335.0, 15329.5], [332.0, 15867.0], [323.0, 15417.0], [322.0, 15603.0], [321.0, 16322.0], [320.0, 15738.0], [331.0, 15890.0], [330.0, 15315.0], [329.0, 15318.0], [327.0, 15375.0], [325.0, 15314.0], [324.0, 15556.0], [349.0, 2482.5714285714284], [340.0, 263.0], [342.0, 15600.0], [341.0, 15656.0], [347.0, 10250.333333333334], [351.0, 15408.0], [350.0, 15313.0], [348.0, 15575.0], [339.0, 15647.0], [338.0, 16103.0], [337.0, 17064.0], [336.0, 15750.0], [345.0, 15237.0], [344.0, 15614.0], [343.0, 15403.0], [365.0, 15860.0], [367.0, 15561.5], [364.0, 15549.5], [355.0, 15399.0], [354.0, 15189.0], [353.0, 15183.0], [352.0, 15312.0], [362.0, 15873.0], [361.0, 15607.0], [360.0, 15449.0], [359.0, 15219.0], [358.0, 15192.0], [356.0, 15196.0], [382.0, 15088.666666666666], [381.0, 507.0], [371.0, 15384.0], [370.0, 15223.0], [369.0, 16194.0], [368.0, 15147.0], [383.0, 15188.0], [379.0, 15665.0], [378.0, 15412.0], [377.0, 15811.5], [375.0, 15073.0], [374.0, 15241.0], [373.0, 16004.0], [372.0, 15897.0], [398.0, 15157.0], [399.0, 15363.0], [397.0, 14944.0], [396.0, 14926.0], [395.0, 15298.0], [394.0, 15689.0], [393.0, 15216.0], [392.0, 15129.0], [391.0, 15192.0], [385.0, 15021.0], [384.0, 15270.0], [387.0, 15470.0], [386.0, 15569.0], [389.0, 15024.0], [388.0, 15103.0], [414.0, 14873.0], [415.0, 14920.0], [413.0, 15377.0], [412.0, 15024.0], [411.0, 15303.0], [410.0, 15017.0], [409.0, 14948.5], [407.0, 14953.0], [401.0, 15429.0], [400.0, 15507.0], [403.0, 15150.0], [402.0, 15694.0], [406.0, 14933.0], [405.0, 14935.0], [404.0, 15095.0], [430.0, 14846.0], [431.0, 14820.0], [429.0, 14842.0], [428.0, 15568.0], [427.0, 17393.0], [426.0, 15252.0], [425.0, 14951.0], [424.0, 15486.0], [423.0, 14952.0], [417.0, 14891.0], [419.0, 15011.0], [418.0, 14896.0], [422.0, 15290.0], [421.0, 15432.5], [445.0, 4064.75], [433.0, 7588.5], [446.0, 7723.0], [447.0, 8200.5], [444.0, 15566.5], [435.0, 15597.0], [434.0, 14844.0], [442.0, 15087.0], [441.0, 14802.0], [440.0, 14784.0], [439.0, 14905.0], [432.0, 15579.0], [438.0, 14988.0], [437.0, 15262.0], [436.0, 15904.0], [462.0, 14684.0], [448.0, 7736.0], [449.0, 15502.0], [451.0, 14787.0], [450.0, 14822.0], [463.0, 8385.5], [461.0, 15556.0], [460.0, 14877.0], [459.0, 14711.0], [458.0, 16192.0], [457.0, 15045.0], [455.0, 14703.0], [454.0, 15554.0], [453.0, 15299.0], [452.0, 15525.0], [478.0, 14804.0], [465.0, 5372.0], [464.0, 15085.0], [467.0, 15220.0], [471.0, 14731.0], [470.0, 14626.0], [469.0, 14628.0], [468.0, 14787.0], [476.0, 7565.5], [479.0, 7686.0], [477.0, 14638.0], [475.0, 14626.0], [474.0, 14780.0], [473.0, 15474.0], [472.0, 15661.0], [492.0, 7619.0], [481.0, 7693.5], [483.0, 7809.0], [482.0, 14771.0], [484.0, 7599.0], [486.0, 14609.0], [480.0, 15216.0], [485.0, 14539.0], [489.0, 5154.333333333333], [490.0, 5259.0], [491.0, 5583.0], [493.0, 7692.5], [494.0, 7533.5], [495.0, 14629.0], [488.0, 14641.5], [499.0, 9886.333333333334], [502.0, 8092.0], [501.0, 5118.333333333333], [500.0, 14496.0], [503.0, 720.0], [497.0, 14757.0], [496.0, 14856.0], [510.0, 15256.0], [505.0, 14579.0], [504.0, 15103.0], [509.0, 14805.0], [508.0, 14789.0], [507.0, 14591.0], [506.0, 15301.0], [536.0, 5262.333333333333], [514.0, 7862.5], [512.0, 14955.5], [526.0, 14466.0], [524.0, 14470.0], [522.0, 14556.0], [520.0, 14390.0], [516.0, 5580.0], [518.0, 5277.666666666667], [530.0, 7542.5], [534.0, 7509.0], [532.0, 14446.5], [542.0, 15704.0], [528.0, 16519.0], [540.0, 14257.0], [538.0, 15945.0], [570.0, 14231.0], [548.0, 7445.0], [546.0, 15472.0], [556.0, 9732.666666666666], [554.0, 14423.0], [552.0, 14543.0], [558.0, 835.0], [562.0, 5174.0], [560.0, 14122.0], [574.0, 14598.0], [572.0, 14059.0], [568.0, 14159.0], [566.0, 14095.0], [564.0, 14437.0], [604.0, 14175.0], [578.0, 4138.25], [576.0, 7484.0], [586.0, 9840.666666666666], [584.0, 13992.0], [590.0, 13992.0], [588.0, 13996.0], [606.0, 14200.0], [600.0, 13933.0], [582.0, 14157.0], [598.0, 13963.0], [596.0, 14982.0], [594.0, 14223.0], [592.0, 14086.0], [632.0, 13940.0], [620.0, 3455.4], [608.0, 5342.666666666667], [610.0, 16141.0], [614.0, 14019.0], [612.0, 14179.0], [618.0, 5191.333333333333], [616.0, 15370.0], [636.0, 7561.0], [638.0, 5269.0], [634.0, 13735.0], [630.0, 13833.0], [628.0, 13981.0], [644.0, 7589.0], [668.0, 7303.5], [666.0, 13606.0], [646.0, 13773.0], [648.0, 7658.0], [650.0, 7354.5], [652.0, 7647.0], [654.0, 761.0], [642.0, 14508.0], [640.0, 14326.0], [658.0, 1183.0], [656.0, 13895.0], [662.0, 13610.0], [660.0, 13608.0], [670.0, 15315.0], [672.0, 7502.5], [674.0, 876.0], [678.0, 13669.0], [676.0, 13675.0], [680.0, 1012.0], [682.0, 13747.0], [686.0, 14018.0], [684.0, 14184.0], [688.0, 7207.5], [700.0, 13746.0], [698.0, 13737.0], [696.0, 13717.0], [692.0, 13493.0], [690.0, 13776.0], [728.0, 2815.2857142857147], [710.0, 7429.5], [708.0, 13441.0], [706.0, 14026.0], [704.0, 14661.0], [726.0, 954.0], [734.0, 13211.0], [732.0, 13814.0], [730.0, 13575.0], [722.0, 13263.0], [720.0, 13628.0], [718.0, 13347.0], [716.0, 13343.0], [714.0, 14115.0], [712.0, 13763.0], [766.0, 5137.0], [736.0, 9238.333333333334], [754.0, 7451.0], [752.0, 14268.0], [744.0, 7432.0], [746.0, 13483.0], [750.0, 13144.0], [748.0, 13224.0], [756.0, 7616.0], [758.0, 7031.5], [764.0, 7533.5], [762.0, 13147.0], [760.0, 13210.5], [742.0, 13329.0], [740.0, 13426.0], [738.0, 13878.0], [794.0, 7095.0], [784.0, 7148.0], [782.0, 7049.5], [786.0, 5696.333333333333], [788.0, 4132.0], [796.0, 13183.0], [792.0, 13325.0], [774.0, 13883.0], [772.0, 13058.0], [768.0, 13946.0], [790.0, 13346.0], [780.0, 13119.0], [778.0, 13886.0], [776.0, 14401.0], [828.0, 12829.0], [824.0, 4269.25], [806.0, 13418.0], [804.0, 13003.0], [802.0, 13945.0], [800.0, 13219.0], [830.0, 13150.0], [822.0, 13955.0], [820.0, 13845.0], [818.0, 13017.0], [816.0, 12909.0], [814.0, 13124.5], [812.0, 12904.0], [810.0, 12868.0], [808.0, 14055.0], [838.0, 7131.5], [836.0, 5394.666666666666], [834.0, 12834.0], [862.0, 12722.0], [854.0, 12691.0], [852.0, 12691.0], [850.0, 13082.0], [848.0, 12870.5], [846.0, 13306.0], [844.0, 13420.0], [842.0, 13521.0], [840.0, 12886.0], [878.0, 7335.0], [874.0, 3431.166666666667], [872.0, 7162.0], [876.0, 7121.0], [894.0, 13419.0], [882.0, 12847.0], [880.0, 13736.0], [892.0, 12699.0], [890.0, 12713.0], [888.0, 12839.0], [870.0, 12994.0], [868.0, 13160.0], [864.0, 12700.0], [886.0, 12552.0], [884.0, 12703.0], [920.0, 1550.6666666666667], [898.0, 5088.666666666666], [896.0, 1295.0], [910.0, 12541.0], [908.0, 12434.0], [906.0, 12544.0], [904.0, 12617.0], [900.0, 4263.5], [902.0, 14214.0], [922.0, 7267.0], [926.0, 12899.0], [912.0, 12396.0], [924.0, 13428.0], [916.0, 12366.0], [914.0, 12364.0], [952.0, 1762.0], [946.0, 6869.0], [938.0, 7276.0], [948.0, 6917.0], [950.0, 6944.0], [958.0, 12183.0], [944.0, 12338.0], [940.0, 12509.0], [928.0, 12895.0], [934.0, 12503.0], [932.0, 12324.0], [936.0, 13086.0], [990.0, 13172.0], [976.0, 6923.5], [984.0, 4759.75], [966.0, 12340.0], [964.0, 13122.0], [962.0, 13212.0], [960.0, 12434.0], [988.0, 12932.0], [986.0, 12161.0], [982.0, 12737.0], [980.0, 12293.0], [978.0, 12123.0], [974.0, 12417.0], [972.0, 12667.0], [970.0, 12695.0], [1016.0, 6954.75], [1008.0, 6766.5], [1002.0, 9063.0], [1000.0, 12160.0], [1006.0, 12007.0], [994.0, 12125.0], [992.0, 12826.0], [998.0, 12430.0], [996.0, 12104.0], [1004.0, 11994.0], [1010.0, 7726.0], [1014.0, 7330.0], [1012.0, 1810.0], [1022.0, 13197.0], [1020.0, 13786.0], [1018.0, 11984.0], [1080.0, 5354.666666666666], [1036.0, 7102.0], [1084.0, 5843.0], [1052.0, 8820.0], [1028.0, 12156.0], [1024.0, 12869.0], [1048.0, 11740.0], [1044.0, 13026.0], [1040.0, 11831.0], [1076.0, 11644.0], [1072.0, 12050.0], [1068.0, 11756.0], [1064.0, 11774.0], [1060.0, 11821.0], [1056.0, 11718.0], [1144.0, 11929.0], [1120.0, 7237.0], [1116.0, 6687.0], [1092.0, 11603.0], [1088.0, 11979.0], [1100.0, 12561.0], [1096.0, 11850.0], [1112.0, 11447.0], [1108.0, 11486.0], [1104.0, 11418.0], [1124.0, 2355.0], [1128.0, 6647.5], [1148.0, 11407.0], [1140.0, 11541.0], [1136.0, 11344.0], [1132.0, 14079.0], [1160.0, 6613.0], [1176.0, 2223.5], [1208.0, 2129.0], [1184.0, 4495.0], [1196.0, 11147.5], [1192.0, 11131.0], [1172.0, 5140.0], [1168.0, 11172.0], [1180.0, 6569.0], [1156.0, 11541.0], [1152.0, 11445.0], [1212.0, 11401.5], [1204.0, 10975.0], [1200.0, 11822.0], [1164.0, 11173.0], [1272.0, 10982.0], [1264.0, 7399.5], [1228.0, 5263.333333333334], [1224.0, 11805.0], [1220.0, 12767.0], [1240.0, 11707.0], [1236.0, 11282.0], [1232.0, 11293.0], [1256.0, 11463.0], [1260.0, 10880.0], [1276.0, 10591.0], [1252.0, 11363.0], [1248.0, 10997.0], [1268.0, 10821.0], [1328.0, 10383.0], [1300.0, 10619.0], [1312.0, 10438.5], [1340.0, 11291.0], [1336.0, 10332.0], [1292.0, 10957.0], [1288.0, 10539.0], [1284.0, 10905.0], [1316.0, 6626.5], [1324.0, 6351.5], [1320.0, 10563.333333333334], [1296.0, 6579.0], [1304.0, 6608.5], [1280.0, 10602.0], [1308.0, 11933.0], [1352.0, 10884.0], [1356.0, 10371.0], [1396.0, 4548.0], [1392.0, 10623.0], [1360.0, 10206.5], [1368.0, 10994.0], [1364.0, 10647.0], [1344.0, 11205.0], [1348.0, 10260.0], [1384.0, 7114.5], [1388.0, 10263.0], [1376.0, 10321.0], [1380.0, 10219.0], [1400.0, 10499.0], [1460.0, 5263.333333333334], [1420.0, 6552.0], [1440.0, 10550.0], [1444.0, 10050.0], [1448.0, 10087.0], [1452.0, 10141.0], [1468.0, 9943.0], [1464.0, 10403.0], [1456.0, 9802.0], [1432.0, 6329.5], [1428.0, 10004.0], [1416.0, 10121.0], [1412.0, 10555.0], [1408.0, 10049.0], [1436.0, 10249.0], [1524.0, 6693.0], [1484.0, 9697.0], [1472.0, 4759.5], [1480.0, 9728.0], [1476.0, 11838.0], [1520.0, 10761.0], [1504.0, 9831.0], [1508.0, 9664.0], [1512.0, 9746.0], [1532.0, 10136.0], [1528.0, 10090.0], [1516.0, 9673.0], [1492.0, 10286.0], [1488.0, 10526.0], [1496.0, 9979.0], [1500.0, 7414.333333333333], [1544.0, 3568.0], [1536.0, 10023.0], [1564.0, 9636.0], [1540.0, 11617.0], [1576.0, 5395.0], [1568.0, 9809.0], [1596.0, 9222.0], [1580.0, 6183.5], [1588.0, 5418.333333333334], [1584.0, 9290.0], [1548.0, 9727.0], [1552.0, 9956.0], [1608.0, 9179.0], [1600.0, 9272.0], [1604.0, 9555.0], [1624.0, 6310.0], [1612.0, 6283.5], [1648.0, 6152.5], [1652.0, 9449.0], [1656.0, 9034.0], [1660.0, 6147.5], [1640.0, 5069.0], [1644.0, 8933.0], [1632.0, 9080.0], [1636.0, 9254.0], [1620.0, 3392.0], [1616.0, 9826.0], [1668.0, 9501.0], [1712.0, 8550.0], [1724.0, 5907.0], [1664.0, 5377.0], [1672.0, 9138.0], [1676.0, 8727.0], [1716.0, 8548.0], [1696.0, 8660.0], [1692.0, 6399.0], [1688.0, 8703.0], [1680.0, 9309.0], [1700.0, 3540.0], [1704.0, 8995.0], [1708.0, 5908.5], [1736.0, 9038.0], [1740.0, 3962.0], [1756.0, 8564.0], [1728.0, 9255.0], [1752.0, 10228.0], [1732.0, 6068.0], [1776.0, 8398.0], [1780.0, 6962.0], [1760.0, 8643.0], [1764.0, 8345.0], [1788.0, 8514.0], [1784.0, 8696.0], [1768.0, 8519.0], [1772.0, 8998.0], [1744.0, 6370.0], [1748.0, 8433.0], [1792.0, 8370.0], [1844.0, 8605.0], [1852.0, 7999.5], [1824.0, 8350.0], [1828.0, 8160.0], [1812.0, 10391.0], [1808.0, 8158.0], [1816.0, 5746.5], [1820.0, 8116.0], [1836.0, 8228.0], [1832.0, 8348.0], [1848.0, 8072.0], [1840.0, 7959.0], [1804.0, 9592.0], [1800.0, 8344.0], [1796.0, 9119.0], [1856.0, 6088.5], [1912.0, 5809.5], [1884.0, 5213.333333333333], [1876.0, 6249.5], [1872.0, 7880.0], [1880.0, 8077.0], [1860.0, 4872.75], [1864.0, 7004.666666666667], [1908.0, 8716.0], [1904.0, 8713.0], [1868.0, 7833.0], [1916.0, 8198.0], [1900.0, 7874.0], [1896.0, 8253.0], [1892.0, 9115.5], [1888.0, 7855.0], [1948.0, 7713.0], [1940.0, 5530.0], [1936.0, 5691.5], [1944.0, 5606.0], [1920.0, 7581.0], [1924.0, 7573.0], [1928.0, 8018.0], [1960.0, 7433.0], [1952.0, 7677.5], [1964.0, 9213.0], [1980.0, 5563.5], [1968.0, 7423.0], [1972.0, 7334.0], [1996.0, 8232.0], [2032.0, 5407.0], [1984.0, 5645.25], [1988.0, 7802.0], [1992.0, 7289.0], [2024.0, 5338.0], [2028.0, 8175.5], [2016.0, 7115.0], [2020.0, 8140.0], [2044.0, 7260.0], [2040.0, 7269.0], [2036.0, 7186.0], [2000.0, 4859.666666666667], [2004.0, 5513.0], [2008.0, 7164.0], [2012.0, 7781.0], [2072.0, 6866.5], [2144.0, 6710.0], [2056.0, 7244.0], [2048.0, 6927.0], [2064.0, 7242.0], [2104.0, 7567.0], [2152.0, 6814.0], [2160.0, 6467.0], [2168.0, 5293.0], [2096.0, 5335.5], [2088.0, 7799.0], [2080.0, 7156.0], [2128.0, 4782.666666666667], [2120.0, 7614.0], [2112.0, 8305.0], [2136.0, 6557.0], [2200.0, 6586.0], [2192.0, 5705.333333333333], [2176.0, 5689.5], [2232.0, 6572.0], [2272.0, 5656.5], [2280.0, 5943.0], [2288.0, 6126.0], [2296.0, 5097.0], [2264.0, 4605.75], [2248.0, 6531.0], [2240.0, 6267.0], [2216.0, 5218.5], [2208.0, 6308.0], [2224.0, 7122.0], [2400.0, 5359.0], [2416.0, 5283.0], [2312.0, 4635.75], [2304.0, 6531.0], [2320.0, 6579.0], [2328.0, 6056.0], [2408.0, 6324.0], [2424.0, 6104.0], [2368.0, 6036.0], [2344.0, 4945.333333333334], [2336.0, 6141.0], [2352.0, 5593.0], [2360.0, 5512.0], [2392.0, 5394.0], [2376.0, 5988.0], [2448.0, 5392.0], [2544.0, 5337.0], [2432.0, 6366.0], [2440.0, 5543.0], [2456.0, 5270.0], [2496.0, 5096.0], [2552.0, 4886.0], [2528.0, 5040.2], [2488.0, 5186.0], [2472.0, 6077.0], [2464.0, 5623.0], [2504.0, 5466.0], [2512.0, 4968.0], [2520.0, 4980.0], [2073.0, 6858.0], [2065.0, 5543.5], [2057.0, 7982.0], [2049.0, 7207.0], [2169.0, 5295.5], [2161.0, 6461.0], [2153.0, 7558.0], [2145.0, 6534.0], [2097.0, 4603.5], [2089.0, 8053.0], [2081.0, 6913.0], [2105.0, 7051.0], [2113.0, 5723.0], [2121.0, 6965.0], [2129.0, 4413.0], [2137.0, 6554.0], [2193.0, 6853.0], [2273.0, 5608.5], [2233.0, 6160.0], [2177.0, 6744.0], [2185.0, 6786.0], [2201.0, 4983.333333333333], [2241.0, 5192.0], [2289.0, 6666.0], [2281.0, 5943.0], [2297.0, 6079.0], [2257.0, 7002.0], [2249.0, 6254.0], [2265.0, 5302.25], [2225.0, 4948.5], [2217.0, 7681.0], [2209.0, 6675.0], [2321.0, 7417.0], [2425.0, 5860.0], [2313.0, 5170.333333333333], [2329.0, 5916.0], [2401.0, 5688.0], [2345.0, 5615.5], [2361.0, 5504.0], [2305.0, 6601.0], [2353.0, 6107.0], [2337.0, 5644.0], [2377.0, 5676.0], [2385.0, 6265.0], [2369.0, 4624.0], [2417.0, 5500.0], [2409.0, 5712.0], [2393.0, 5632.0], [2497.0, 4783.0], [2449.0, 5455.0], [2457.0, 5881.0], [2521.0, 4835.0], [2513.0, 4901.0], [2505.0, 5044.0], [2529.0, 5077.4], [2537.0, 6123.0], [2545.0, 4870.0], [2553.0, 4744.0], [2489.0, 5463.0], [2481.0, 5478.0], [2473.0, 5060.0], [1081.0, 6985.0], [1037.0, 5301.666666666666], [1029.0, 6941.5], [1025.0, 12215.0], [1033.0, 12423.0], [1073.0, 5276.666666666666], [1077.0, 11840.0], [1057.0, 7466.5], [1069.0, 12106.0], [1061.0, 11677.0], [1085.0, 11744.0], [1049.0, 4417.5], [1045.0, 11803.0], [1041.0, 11857.0], [1053.0, 6921.0], [1145.0, 6662.0], [1137.0, 1929.0], [1117.0, 7318.5], [1093.0, 11511.0], [1089.0, 11988.0], [1101.0, 11715.0], [1097.0, 11526.0], [1113.0, 12208.0], [1109.0, 12512.5], [1105.0, 11420.0], [1149.0, 7094.0], [1121.0, 11368.0], [1141.0, 6926.5], [1125.0, 6864.5], [1133.0, 4682.5], [1129.0, 12327.0], [1209.0, 5863.4], [1201.0, 2353.0], [1185.0, 4758.75], [1213.0, 11305.0], [1205.0, 12189.0], [1193.0, 10963.0], [1189.0, 11051.5], [1181.0, 11138.0], [1165.0, 11550.0], [1157.0, 11184.0], [1177.0, 11444.5], [1173.0, 11100.0], [1169.0, 12017.0], [1269.0, 10691.0], [1257.0, 11621.0], [1233.0, 6986.0], [1237.0, 11146.0], [1261.0, 10836.0], [1273.0, 11687.0], [1253.0, 10729.0], [1249.0, 10998.0], [1245.0, 10915.5], [1217.0, 10888.0], [1229.0, 11293.0], [1225.0, 11498.0], [1241.0, 10871.0], [1337.0, 6500.5], [1333.0, 8520.0], [1329.0, 6585.0], [1293.0, 10856.0], [1285.0, 10529.0], [1313.0, 10461.0], [1341.0, 10508.0], [1325.0, 10456.0], [1321.0, 6548.0], [1317.0, 10811.0], [1281.0, 7667.5], [1297.0, 6352.5], [1301.0, 12934.0], [1305.0, 11241.0], [1309.0, 10430.0], [1373.0, 10466.0], [1377.0, 7022.0], [1365.0, 6279.5], [1361.0, 10398.0], [1369.0, 10446.0], [1393.0, 11136.0], [1357.0, 10259.0], [1353.0, 10231.0], [1349.0, 10392.0], [1345.0, 10372.0], [1381.0, 6464.0], [1385.0, 4793.0], [1389.0, 10127.0], [1397.0, 4981.0], [1401.0, 10029.0], [1405.0, 10383.5], [1421.0, 10769.0], [1413.0, 5286.333333333334], [1457.0, 6891.5], [1417.0, 10350.0], [1441.0, 10387.0], [1469.0, 10182.0], [1465.0, 9805.0], [1461.0, 9859.0], [1433.0, 5601.0], [1429.0, 10272.0], [1425.0, 9983.0], [1437.0, 6544.5], [1409.0, 11708.0], [1445.0, 4962.0], [1453.0, 6390.5], [1449.0, 10412.0], [1521.0, 6561.0], [1473.0, 6157.0], [1477.0, 9905.0], [1481.0, 10286.0], [1497.0, 6293.0], [1505.0, 9610.0], [1533.0, 9684.0], [1529.0, 9902.0], [1525.0, 10908.0], [1509.0, 6276.0], [1513.0, 10964.0], [1517.0, 9619.0], [1489.0, 10352.0], [1493.0, 12214.0], [1501.0, 6240.5], [1545.0, 7272.666666666667], [1589.0, 6685.5], [1537.0, 3882.1428571428573], [1565.0, 9878.0], [1541.0, 10401.0], [1577.0, 9625.0], [1581.0, 10049.0], [1593.0, 9252.5], [1569.0, 9763.0], [1573.0, 9355.5], [1585.0, 9528.0], [1549.0, 10450.0], [1561.0, 4706.5], [1557.0, 9581.0], [1553.0, 10628.0], [1605.0, 9315.0], [1601.0, 6244.5], [1629.0, 10245.0], [1621.0, 9106.5], [1617.0, 9104.0], [1625.0, 9854.0], [1613.0, 6621.0], [1661.0, 5215.666666666667], [1657.0, 9436.0], [1653.0, 9299.0], [1649.0, 8895.0], [1641.0, 2958.0], [1637.0, 9631.0], [1633.0, 9029.0], [1673.0, 6142.5], [1669.0, 9084.0], [1713.0, 6229.5], [1677.0, 8715.0], [1717.0, 8543.0], [1721.0, 10015.0], [1725.0, 9627.0], [1693.0, 5901.0], [1689.0, 8698.0], [1685.0, 9167.0], [1681.0, 8755.0], [1697.0, 5849.0], [1701.0, 7316.666666666667], [1705.0, 8660.0], [1709.0, 4566.5], [1741.0, 8794.5], [1733.0, 9562.0], [1737.0, 9070.0], [1729.0, 7202.0], [1753.0, 8490.0], [1757.0, 8392.0], [1777.0, 8423.0], [1781.0, 8412.0], [1785.0, 6156.0], [1761.0, 10027.0], [1765.0, 8389.0], [1789.0, 8350.0], [1769.0, 5021.333333333333], [1773.0, 9077.0], [1745.0, 5933.5], [1801.0, 8164.0], [1817.0, 8786.0], [1793.0, 8547.0], [1821.0, 8669.0], [1805.0, 3851.0], [1797.0, 8402.0], [1845.0, 8475.0], [1849.0, 8755.0], [1809.0, 8527.0], [1813.0, 5732.0], [1825.0, 5728.0], [1829.0, 8022.0], [1853.0, 7899.0], [1833.0, 6237.0], [1837.0, 4339.8], [1869.0, 8553.0], [1857.0, 5033.333333333333], [1885.0, 4745.5], [1881.0, 7990.0], [1877.0, 3400.0], [1905.0, 7956.0], [1865.0, 7885.0], [1909.0, 4940.666666666667], [1893.0, 6031.5], [1889.0, 7834.0], [1897.0, 8473.0], [1901.0, 7893.0], [1917.0, 7726.0], [1873.0, 5931.0], [1925.0, 9234.0], [1977.0, 8068.0], [1941.0, 5097.75], [1945.0, 7468.0], [1921.0, 8311.0], [1929.0, 8174.0], [1933.0, 7661.0], [1949.0, 7741.0], [1969.0, 7682.0], [1973.0, 8817.0], [1937.0, 4867.25], [1953.0, 8217.0], [1957.0, 7397.0], [1961.0, 7512.0], [1981.0, 5252.666666666667], [1965.0, 5841.0], [2041.0, 8437.0], [1997.0, 5437.5], [2021.0, 4652.0], [2017.0, 7249.0], [2045.0, 7541.0], [2037.0, 7180.0], [2033.0, 5818.5], [2029.0, 5513.5], [2025.0, 7447.0], [2001.0, 5634.0], [2005.0, 4887.666666666667], [2009.0, 7750.0], [1985.0, 7505.0], [1989.0, 7308.0], [2013.0, 7114.0], [2058.0, 4821.25], [2050.0, 7215.0], [2154.0, 8472.0], [2146.0, 6958.0], [2074.0, 7065.0], [2066.0, 6867.0], [2162.0, 5094.666666666667], [2170.0, 6406.0], [2098.0, 5184.666666666667], [2090.0, 6875.0], [2082.0, 6793.0], [2106.0, 6884.0], [2138.0, 6607.0], [2130.0, 6546.0], [2122.0, 7691.0], [2114.0, 6616.0], [2290.0, 6095.0], [2194.0, 5547.0], [2186.0, 7013.0], [2178.0, 6432.0], [2258.0, 5096.5], [2242.0, 6087.0], [2250.0, 6155.0], [2298.0, 5023.5], [2282.0, 6184.0], [2202.0, 7891.0], [2266.0, 5434.0], [2210.0, 5136.0], [2218.0, 6337.0], [2226.0, 5357.0], [2234.0, 6685.0], [2330.0, 7157.0], [2418.0, 5295.0], [2314.0, 5092.5], [2426.0, 6057.0], [2402.0, 4845.333333333333], [2322.0, 5957.0], [2410.0, 6746.0], [2346.0, 5017.666666666667], [2338.0, 6616.0], [2362.0, 5302.333333333333], [2306.0, 6926.0], [2370.0, 5697.666666666667], [2394.0, 5777.0], [2386.0, 6128.0], [2378.0, 5595.0], [2458.0, 5249.5], [2434.0, 5248.0], [2442.0, 5935.5], [2450.0, 5212.0], [2498.0, 4958.0], [2546.0, 4776.0], [2538.0, 5345.333333333333], [2530.0, 4973.333333333333], [2490.0, 5098.0], [2482.0, 5371.0], [2474.0, 5730.0], [2466.0, 5733.0], [2506.0, 4937.5], [2514.0, 6047.0], [2522.0, 4838.0], [2155.0, 6676.0], [2067.0, 5656.0], [2075.0, 7543.0], [2147.0, 7017.0], [2059.0, 6137.5], [2051.0, 6892.0], [2163.0, 5430.333333333333], [2171.0, 5244.0], [2123.0, 6598.0], [2131.0, 6925.0], [2139.0, 6606.0], [2091.0, 7302.0], [2099.0, 7100.0], [2107.0, 6696.0], [2275.0, 6063.5], [2203.0, 4922.666666666667], [2195.0, 5306.5], [2187.0, 6463.0], [2179.0, 6526.0], [2235.0, 6312.0], [2283.0, 7437.0], [2291.0, 7816.0], [2299.0, 5949.0], [2243.0, 6127.0], [2251.0, 6169.0], [2259.0, 6209.0], [2267.0, 4440.0], [2227.0, 5110.0], [2219.0, 6481.0], [2211.0, 6633.0], [2307.0, 5869.0], [2403.0, 5134.25], [2371.0, 5114.0], [2379.0, 5428.0], [2387.0, 5857.0], [2339.0, 5776.0], [2347.0, 6345.0], [2355.0, 5593.0], [2315.0, 5887.0], [2323.0, 5796.0], [2331.0, 6117.0], [2363.0, 6232.0], [2427.0, 5747.0], [2419.0, 5647.0], [2411.0, 6070.0], [2395.0, 5065.0], [2499.0, 4952.0], [2539.0, 5400.0], [2459.0, 5078.666666666667], [2435.0, 5554.0], [2443.0, 5173.0], [2451.0, 6295.0], [2523.0, 4850.0], [2515.0, 5186.0], [2507.0, 5326.0], [2531.0, 5745.0], [2547.0, 5611.333333333333], [2491.0, 5554.0], [2483.0, 5190.0], [2475.0, 5143.0], [2467.0, 5559.0], [543.0, 14250.0], [517.0, 5223.666666666667], [515.0, 5281.666666666667], [513.0, 16051.0], [527.0, 15513.0], [525.0, 15009.0], [523.0, 14386.0], [521.0, 14641.0], [529.0, 5802.333333333333], [531.0, 685.0], [535.0, 5526.333333333333], [533.0, 14800.0], [541.0, 14245.0], [539.0, 14602.0], [537.0, 14756.0], [519.0, 15556.0], [571.0, 14110.0], [547.0, 7542.5], [551.0, 9783.0], [549.0, 14699.0], [559.0, 7623.0], [545.0, 14363.5], [557.0, 14993.0], [553.0, 14691.0], [563.0, 5331.0], [561.0, 14955.0], [575.0, 14091.0], [573.0, 14006.0], [569.0, 14717.0], [567.0, 14494.0], [565.0, 14121.0], [601.0, 7474.0], [577.0, 7852.5], [579.0, 7396.5], [583.0, 14193.0], [581.0, 14592.5], [585.0, 787.0], [587.0, 14546.0], [591.0, 14561.0], [589.0, 13999.0], [593.0, 7927.5], [597.0, 7835.0], [595.0, 14120.0], [599.0, 13923.0], [607.0, 14668.0], [605.0, 14016.0], [603.0, 14043.5], [637.0, 7338.5], [617.0, 8381.5], [619.0, 5790.333333333333], [639.0, 13734.0], [635.0, 13924.0], [633.0, 14252.0], [623.0, 13789.5], [615.0, 14202.0], [613.0, 13828.0], [609.0, 13851.0], [621.0, 13962.0], [631.0, 14345.0], [629.0, 15111.0], [627.0, 15073.5], [625.0, 13774.0], [669.0, 7373.5], [643.0, 7608.0], [655.0, 9488.0], [641.0, 13725.0], [653.0, 13690.0], [651.0, 14031.0], [649.0, 13943.0], [647.0, 7826.0], [645.0, 14674.0], [667.0, 13609.0], [665.0, 13672.0], [657.0, 7603.5], [671.0, 13704.0], [659.0, 9481.0], [661.0, 7395.0], [663.0, 13602.0], [703.0, 13485.0], [681.0, 9737.0], [685.0, 15327.0], [683.0, 13559.0], [687.0, 5357.0], [689.0, 7742.5], [691.0, 7309.0], [693.0, 5287.666666666666], [695.0, 13481.0], [701.0, 13394.0], [699.0, 13475.0], [697.0, 14027.0], [679.0, 13569.0], [677.0, 13539.0], [675.0, 14876.0], [673.0, 13762.0], [733.0, 13797.0], [709.0, 7322.0], [707.0, 13899.0], [705.0, 13867.0], [711.0, 13328.0], [727.0, 5148.166666666666], [729.0, 7132.0], [731.0, 13494.0], [725.0, 13260.0], [723.0, 13715.0], [721.0, 13266.0], [719.0, 14056.0], [717.0, 14009.0], [715.0, 13546.0], [713.0, 13339.0], [767.0, 14331.0], [747.0, 7106.0], [745.0, 13148.0], [749.0, 13779.0], [757.0, 7100.5], [759.0, 994.0], [763.0, 7277.0], [765.0, 5659.0], [761.0, 13305.0], [743.0, 13292.0], [741.0, 13573.0], [739.0, 13537.0], [737.0, 13644.0], [751.0, 13244.0], [755.0, 13067.0], [753.0, 13390.0], [799.0, 13478.0], [779.0, 7213.5], [777.0, 14157.0], [783.0, 13057.0], [769.0, 13179.0], [775.0, 13246.0], [771.0, 13265.5], [781.0, 13388.0], [785.0, 5205.666666666666], [793.0, 5319.333333333334], [797.0, 13387.0], [795.0, 13066.0], [791.0, 13630.0], [789.0, 12994.0], [787.0, 14360.0], [829.0, 12840.0], [825.0, 7065.5], [831.0, 13157.0], [827.0, 13336.0], [823.0, 13091.0], [821.0, 13743.0], [819.0, 13355.0], [817.0, 13521.0], [815.0, 13049.0], [801.0, 12914.0], [807.0, 12878.0], [805.0, 13101.0], [811.0, 13012.0], [809.0, 13012.0], [861.0, 13150.0], [833.0, 9330.333333333334], [835.0, 12837.0], [845.0, 12793.0], [843.0, 12770.0], [841.0, 12957.0], [837.0, 8036.0], [863.0, 12702.0], [859.0, 12889.0], [857.0, 12702.0], [839.0, 13320.0], [855.0, 12692.0], [853.0, 12694.0], [851.0, 12834.0], [849.0, 12804.0], [893.0, 13310.0], [875.0, 5173.0], [873.0, 14047.0], [877.0, 12931.0], [865.0, 12620.0], [871.0, 13371.0], [867.0, 13452.5], [895.0, 13011.0], [891.0, 12752.0], [889.0, 12604.0], [887.0, 12551.0], [885.0, 12836.0], [883.0, 12581.0], [881.0, 13806.0], [921.0, 5070.166666666666], [897.0, 8976.666666666666], [899.0, 6933.0], [903.0, 13467.0], [901.0, 12850.0], [907.0, 7051.5], [905.0, 12735.0], [909.0, 7292.0], [911.0, 12484.0], [923.0, 7147.5], [927.0, 12498.0], [915.0, 12673.0], [913.0, 12982.0], [925.0, 13242.0], [919.0, 5820.2], [917.0, 5294.0], [957.0, 12215.5], [947.0, 3468.833333333333], [951.0, 7419.0], [959.0, 12841.0], [955.0, 12199.5], [953.0, 12451.0], [949.0, 12884.0], [945.0, 12922.0], [943.0, 12615.5], [931.0, 12326.0], [929.0, 12623.0], [935.0, 12398.0], [933.0, 12503.5], [941.0, 13634.0], [939.0, 12441.0], [937.0, 12708.0], [989.0, 12042.0], [977.0, 4151.75], [967.0, 7176.0], [965.0, 12386.0], [963.0, 12271.0], [975.0, 12104.0], [973.0, 12520.0], [971.0, 12140.0], [969.0, 12708.5], [981.0, 6808.5], [983.0, 5396.0], [991.0, 12753.0], [987.0, 12269.0], [985.0, 12368.0], [979.0, 13362.0], [1023.0, 12558.0], [1009.0, 3723.8], [1013.0, 6936.0], [1015.0, 1688.0], [1021.0, 12692.0], [1019.0, 12212.0], [1017.0, 12157.0], [999.0, 11982.0], [997.0, 12148.0], [995.0, 12705.0], [993.0, 12425.0], [1011.0, 11919.0], [1007.0, 12535.0], [1003.0, 12032.0], [1082.0, 5493.0], [1062.0, 6833.0], [1054.0, 6975.5], [1030.0, 11798.0], [1026.0, 12220.0], [1038.0, 12446.0], [1034.0, 11821.0], [1086.0, 12566.0], [1078.0, 12736.0], [1074.0, 12178.0], [1070.0, 11667.0], [1066.0, 12573.0], [1050.0, 11896.0], [1046.0, 11798.0], [1042.0, 12258.0], [1150.0, 2172.0], [1146.0, 7166.5], [1130.0, 6620.0], [1134.0, 6679.5], [1142.0, 12191.0], [1138.0, 11348.5], [1102.0, 11742.0], [1098.0, 11526.0], [1094.0, 11581.0], [1090.0, 12112.0], [1126.0, 12208.0], [1122.0, 11535.0], [1118.0, 12605.0], [1114.0, 11611.0], [1110.0, 11403.0], [1106.0, 11450.0], [1210.0, 5201.0], [1154.0, 5141.833333333333], [1198.0, 8350.0], [1174.0, 6606.5], [1170.0, 12126.0], [1178.0, 11296.0], [1214.0, 10891.0], [1206.0, 10908.0], [1166.0, 11206.0], [1162.0, 11168.0], [1158.0, 12858.0], [1194.0, 10966.0], [1190.0, 11050.0], [1186.0, 11778.0], [1278.0, 7830.333333333333], [1230.0, 2726.0], [1242.0, 4643.0], [1238.0, 11530.0], [1234.0, 12343.0], [1246.0, 11194.0], [1218.0, 11165.0], [1226.0, 11235.0], [1222.0, 11156.0], [1254.0, 2323.3], [1250.0, 11064.0], [1258.0, 10705.0], [1262.0, 10665.0], [1270.0, 10775.0], [1266.0, 11538.5], [1334.0, 10449.0], [1282.0, 5350.666666666666], [1302.0, 6446.5], [1314.0, 5664.666666666666], [1342.0, 10649.0], [1338.0, 10598.0], [1330.0, 10451.0], [1294.0, 10850.0], [1290.0, 10765.5], [1286.0, 11366.0], [1326.0, 4664.75], [1322.0, 6599.5], [1298.0, 6650.0], [1310.0, 11557.0], [1306.0, 10996.0], [1350.0, 5367.666666666666], [1394.0, 5291.0], [1358.0, 11033.0], [1354.0, 10547.0], [1362.0, 4103.8], [1374.0, 10573.0], [1346.0, 10436.0], [1370.0, 10513.0], [1386.0, 5526.333333333334], [1390.0, 10145.0], [1406.0, 10196.0], [1378.0, 10438.0], [1382.0, 10136.0], [1402.0, 10024.0], [1398.0, 10502.0], [1466.0, 9879.0], [1470.0, 6305.0], [1442.0, 9966.0], [1446.0, 9876.0], [1450.0, 9877.0], [1454.0, 11239.0], [1462.0, 10138.0], [1458.0, 2542.0], [1422.0, 10048.0], [1434.0, 6396.5], [1430.0, 9977.0], [1426.0, 9972.0], [1438.0, 5289.0], [1418.0, 9991.0], [1414.0, 10045.0], [1410.0, 11820.0], [1486.0, 9699.0], [1502.0, 5249.333333333334], [1482.0, 6157.0], [1478.0, 9803.0], [1474.0, 9820.0], [1522.0, 9994.0], [1506.0, 6778.0], [1510.0, 9558.0], [1534.0, 6341.5], [1526.0, 9813.0], [1514.0, 2833.0], [1518.0, 9598.0], [1494.0, 5209.333333333334], [1490.0, 9710.0], [1498.0, 9973.0], [1546.0, 6098.0], [1538.0, 2676.0], [1562.0, 7297.666666666667], [1566.0, 11868.0], [1542.0, 9981.0], [1574.0, 10043.0], [1570.0, 9750.0], [1598.0, 9650.0], [1594.0, 10511.0], [1578.0, 6259.5], [1582.0, 9821.0], [1590.0, 6072.5], [1586.0, 10782.0], [1550.0, 9532.0], [1554.0, 6784.0], [1558.0, 9420.0], [1610.0, 9189.0], [1606.0, 3634.0], [1602.0, 6507.5], [1630.0, 6159.5], [1626.0, 9624.0], [1614.0, 9223.0], [1650.0, 6245.0], [1654.0, 8976.0], [1646.0, 9094.0], [1642.0, 9158.5], [1662.0, 8972.0], [1634.0, 9198.0], [1638.0, 8940.0], [1622.0, 4376.0], [1618.0, 9364.0], [1670.0, 8805.0], [1666.0, 6257.25], [1674.0, 6544.5], [1678.0, 9405.0], [1722.0, 8905.0], [1718.0, 8571.0], [1726.0, 6390.5], [1694.0, 6084.5], [1690.0, 8838.0], [1686.0, 8679.0], [1682.0, 8715.0], [1698.0, 3923.0], [1710.0, 9723.0], [1706.0, 6027.0], [1734.0, 5963.0], [1750.0, 6964.0], [1730.0, 8592.0], [1754.0, 8670.0], [1738.0, 9483.0], [1742.0, 5941.0], [1778.0, 8464.0], [1766.0, 5222.0], [1790.0, 8695.0], [1762.0, 9368.0], [1786.0, 8190.0], [1782.0, 8685.0], [1770.0, 6407.5], [1774.0, 8684.0], [1746.0, 8718.0], [1854.0, 6050.0], [1794.0, 6058.5], [1826.0, 8182.0], [1814.0, 6330.0], [1810.0, 8192.0], [1822.0, 8461.0], [1818.0, 9097.0], [1830.0, 5053.333333333333], [1838.0, 6065.5], [1834.0, 8411.0], [1850.0, 7883.0], [1846.0, 8155.0], [1842.0, 8052.5], [1806.0, 8594.0], [1802.0, 8144.0], [1798.0, 8784.0], [1862.0, 8331.5], [1858.0, 5773.0], [1886.0, 5692.0], [1874.0, 7811.0], [1878.0, 7860.0], [1882.0, 8454.0], [1910.0, 5816.5], [1906.0, 8243.0], [1870.0, 8588.0], [1866.0, 7908.0], [1918.0, 5887.0], [1914.0, 5674.0], [1902.0, 5967.5], [1898.0, 8491.0], [1894.0, 7992.0], [1890.0, 8151.0], [1926.0, 8626.0], [1934.0, 5557.5], [1938.0, 5242.0], [1942.0, 7591.0], [1922.0, 7572.0], [1946.0, 7467.0], [1962.0, 5617.0], [1958.0, 7731.5], [1954.0, 8587.0], [1966.0, 7474.0], [1982.0, 4515.4], [1970.0, 5738.0], [1974.0, 8879.0], [1978.0, 5448.0], [1998.0, 8289.0], [1986.0, 7574.0], [1990.0, 7702.0], [1994.0, 7232.5], [2030.0, 7026.0], [2022.0, 4976.0], [2046.0, 7099.0], [2018.0, 7263.0], [2042.0, 7317.0], [2038.0, 7301.0], [2034.0, 7169.0], [2002.0, 4182.0], [2006.0, 8795.0], [2010.0, 7489.0], [2014.0, 7223.0], [2060.0, 5166.666666666667], [2164.0, 5426.5], [2052.0, 7187.0], [2068.0, 7398.0], [2076.0, 6804.0], [2108.0, 7387.0], [2156.0, 6855.0], [2172.0, 4859.75], [2092.0, 6758.0], [2084.0, 7288.5], [2100.0, 4276.428571428572], [2124.0, 7781.0], [2116.0, 6809.5], [2132.0, 5104.333333333333], [2140.0, 6649.5], [2204.0, 5277.5], [2188.0, 6298.0], [2180.0, 6350.0], [2236.0, 6300.0], [2196.0, 4481.6], [2276.0, 6221.0], [2284.0, 6455.0], [2292.0, 5034.0], [2260.0, 6377.0], [2252.0, 6725.0], [2244.0, 7357.0], [2268.0, 6243.5], [2300.0, 5795.0], [2212.0, 6211.0], [2220.0, 6177.0], [2228.0, 4777.5], [2332.0, 5865.0], [2324.0, 5064.333333333333], [2308.0, 7462.0], [2316.0, 5742.0], [2404.0, 5107.333333333333], [2412.0, 6104.0], [2420.0, 5289.0], [2428.0, 5255.0], [2340.0, 5647.0], [2348.0, 5715.0], [2356.0, 5772.0], [2372.0, 5217.666666666667], [2396.0, 5226.333333333333], [2388.0, 5546.0], [2380.0, 5492.0], [2460.0, 4905.75], [2436.0, 5280.6], [2548.0, 4906.0], [2532.0, 4791.0], [2540.0, 5129.0], [2492.0, 4984.0], [2484.0, 5002.0], [2476.0, 4993.0], [2468.0, 5064.0], [2500.0, 5239.333333333333], [2508.0, 6420.0], [2516.0, 4842.0], [2524.0, 5467.0], [2077.0, 5362.5], [2165.0, 6532.0], [2061.0, 6847.0], [2053.0, 7253.0], [2069.0, 7033.0], [2157.0, 6596.0], [2149.0, 6629.5], [2173.0, 5745.0], [2093.0, 8105.0], [2085.0, 7246.0], [2101.0, 7547.0], [2109.0, 8800.0], [2117.0, 6611.0], [2125.0, 6953.0], [2133.0, 3889.0], [2141.0, 6680.0], [2205.0, 4240.0], [2197.0, 4912.2], [2181.0, 6351.0], [2189.0, 6832.0], [2293.0, 4272.0], [2285.0, 5992.0], [2277.0, 5936.0], [2301.0, 5806.0], [2261.0, 5191.0], [2253.0, 6131.0], [2245.0, 6077.0], [2269.0, 6672.0], [2213.0, 6727.0], [2229.0, 5764.75], [2325.0, 5165.0], [2405.0, 4424.0], [2317.0, 5914.0], [2333.0, 5948.0], [2309.0, 5778.0], [2357.0, 5627.0], [2349.0, 6276.0], [2341.0, 4619.75], [2373.0, 5387.5], [2381.0, 5422.0], [2389.0, 5468.0], [2429.0, 5615.0], [2421.0, 5294.0], [2413.0, 5800.0], [2397.0, 4957.0], [2461.0, 5075.333333333333], [2437.0, 4957.571428571429], [2445.0, 5605.5], [2453.0, 5375.0], [2525.0, 4876.0], [2517.0, 5120.0], [2509.0, 5723.0], [2501.0, 5679.0], [2533.0, 4805.0], [2541.0, 4877.0], [2549.0, 5738.0], [2493.0, 4860.0], [2485.0, 5006.0], [1087.0, 11801.0], [1079.0, 5389.0], [1083.0, 5191.0], [1051.0, 1853.0], [1047.0, 13315.0], [1043.0, 12135.0], [1055.0, 6927.5], [1075.0, 11664.0], [1039.0, 11904.0], [1035.0, 12008.0], [1031.0, 12528.0], [1027.0, 12159.0], [1071.0, 11771.0], [1067.0, 11656.0], [1063.0, 11842.0], [1059.0, 12033.5], [1147.0, 11535.0], [1091.0, 7837.5], [1115.0, 7251.0], [1111.0, 11805.0], [1119.0, 11746.0], [1151.0, 5318.833333333333], [1131.0, 6956.0], [1135.0, 6640.0], [1143.0, 11795.0], [1139.0, 11531.0], [1103.0, 12273.0], [1099.0, 11494.0], [1095.0, 11746.0], [1127.0, 11976.0], [1123.0, 11754.0], [1155.0, 6865.5], [1183.0, 5744.8], [1199.0, 4632.25], [1175.0, 5013.666666666666], [1171.0, 11890.0], [1179.0, 6765.5], [1215.0, 11057.0], [1207.0, 11038.0], [1203.0, 11587.333333333334], [1167.0, 11271.0], [1163.0, 11162.0], [1159.0, 11172.0], [1191.0, 12821.0], [1187.0, 11048.0], [1275.0, 6556.0], [1243.0, 5338.333333333334], [1227.0, 6520.0], [1231.0, 12723.0], [1247.0, 11941.0], [1223.0, 11177.0], [1219.0, 10995.0], [1239.0, 5081.333333333334], [1235.0, 11050.0], [1279.0, 5314.666666666666], [1251.0, 10715.0], [1263.0, 10681.0], [1255.0, 11024.5], [1271.0, 11127.0], [1267.0, 10692.0], [1331.0, 10610.0], [1295.0, 10625.0], [1291.0, 10616.0], [1287.0, 10542.0], [1283.0, 10825.0], [1335.0, 10318.0], [1339.0, 10616.0], [1343.0, 10354.0], [1327.0, 6400.5], [1323.0, 5156.333333333334], [1315.0, 6586.5], [1299.0, 10566.0], [1303.0, 7730.5], [1307.0, 6460.0], [1355.0, 10643.0], [1395.0, 4121.6], [1407.0, 10059.0], [1379.0, 10199.0], [1363.0, 10598.0], [1367.0, 10743.0], [1371.0, 11252.0], [1347.0, 10259.0], [1375.0, 10186.0], [1383.0, 10836.0], [1387.0, 10495.0], [1399.0, 10138.0], [1403.0, 11621.0], [1423.0, 10789.0], [1463.0, 6383.5], [1435.0, 6294.0], [1419.0, 10634.0], [1415.0, 10781.0], [1471.0, 4461.75], [1443.0, 9958.0], [1467.0, 10061.0], [1459.0, 7558.0], [1431.0, 10482.0], [1427.0, 10212.0], [1439.0, 9908.0], [1411.0, 11355.0], [1451.0, 10794.0], [1447.0, 10473.0], [1455.0, 9946.0], [1487.0, 6151.5], [1475.0, 10131.0], [1479.0, 9797.0], [1483.0, 9727.0], [1503.0, 6366.0], [1535.0, 6479.0], [1507.0, 10549.0], [1531.0, 7269.0], [1523.0, 6583.0], [1527.0, 9933.0], [1515.0, 7569.666666666667], [1511.0, 9880.0], [1519.0, 10205.0], [1491.0, 6585.5], [1495.0, 6550.0], [1547.0, 6175.0], [1543.0, 6121.5], [1563.0, 6204.5], [1539.0, 7538.0], [1579.0, 6425.0], [1583.0, 11208.0], [1575.0, 6212.5], [1591.0, 4361.8], [1599.0, 9389.0], [1571.0, 9354.0], [1595.0, 9218.0], [1587.0, 6158.5], [1551.0, 10331.0], [1559.0, 9545.0], [1555.0, 10220.0], [1603.0, 6378.0], [1655.0, 8891.0], [1631.0, 9027.0], [1627.0, 4269.666666666667], [1623.0, 6203.0], [1619.0, 9539.0], [1611.0, 9504.0], [1607.0, 9882.0], [1615.0, 7034.5], [1659.0, 9105.0], [1651.0, 8905.0], [1647.0, 5888.5], [1643.0, 8934.0], [1639.0, 6282.5], [1635.0, 9168.0], [1663.0, 8850.0], [1671.0, 8918.0], [1719.0, 8702.0], [1727.0, 6797.5], [1667.0, 8806.0], [1675.0, 5958.0], [1715.0, 9048.5], [1723.0, 8915.0], [1691.0, 10042.0], [1687.0, 10348.0], [1683.0, 8855.0], [1695.0, 9009.0], [1699.0, 8903.5], [1707.0, 5960.5], [1703.0, 8734.5], [1711.0, 8558.0], [1735.0, 10671.0], [1739.0, 5835.5], [1731.0, 5835.0], [1755.0, 5434.666666666667], [1751.0, 8846.0], [1759.0, 8572.0], [1747.0, 6015.5], [1779.0, 3622.5], [1743.0, 9404.0], [1783.0, 5846.0], [1787.0, 8884.0], [1791.0, 8554.0], [1763.0, 9101.0], [1767.0, 8471.0], [1771.0, 6035.0], [1775.0, 8542.0], [1795.0, 6020.0], [1843.0, 7970.0], [1851.0, 3491.0], [1815.0, 5188.666666666667], [1819.0, 8512.0], [1823.0, 9178.0], [1803.0, 8319.0], [1799.0, 8178.0], [1807.0, 8324.0], [1847.0, 9365.0], [1811.0, 5807.5], [1827.0, 9584.0], [1831.0, 8313.0], [1855.0, 8104.0], [1835.0, 8603.0], [1839.0, 8333.0], [1859.0, 4993.0], [1863.0, 3789.0], [1883.0, 7842.0], [1879.0, 8095.0], [1887.0, 7768.0], [1907.0, 5336.333333333333], [1871.0, 7853.0], [1867.0, 8467.0], [1911.0, 6327.5], [1915.0, 5828.5], [1895.0, 8080.0], [1899.0, 8653.0], [1903.0, 7728.0], [1919.0, 7900.0], [1875.0, 5990.5], [1951.0, 7477.0], [1939.0, 4348.0], [1943.0, 7452.0], [1947.0, 7484.0], [1923.0, 7576.0], [1927.0, 8311.0], [1931.0, 7560.0], [1935.0, 7853.0], [1971.0, 7614.0], [1975.0, 7543.0], [1979.0, 7360.0], [1983.0, 3597.0], [1955.0, 7719.0], [1959.0, 8512.0], [1963.0, 7625.0], [1967.0, 5527.5], [1999.0, 5442.5], [2003.0, 6106.5], [1991.0, 5809.5], [1995.0, 7252.0], [2019.0, 7097.0], [2047.0, 7118.0], [2043.0, 7081.0], [2039.0, 7020.0], [2035.0, 6053.0], [2023.0, 5095.25], [2027.0, 8841.0], [2031.0, 5755.5], [2007.0, 7419.0], [2011.0, 7108.0], [2015.0, 7208.0], [1987.0, 8199.0], [2062.0, 6048.5], [2158.0, 5224.0], [2150.0, 8743.0], [2070.0, 6873.0], [2166.0, 5188.5], [2174.0, 5498.0], [2094.0, 6897.0], [2086.0, 6935.0], [2102.0, 5541.0], [2110.0, 5399.5], [2142.0, 5428.5], [2134.0, 6798.5], [2126.0, 6642.0], [2294.0, 5241.0], [2198.0, 5710.333333333333], [2182.0, 6539.0], [2302.0, 6160.0], [2246.0, 8009.0], [2254.0, 6214.0], [2286.0, 6569.0], [2278.0, 6420.0], [2206.0, 6384.5], [2262.0, 6476.0], [2270.0, 6740.0], [2214.0, 6746.0], [2222.0, 6481.0], [2230.0, 5158.0], [2238.0, 6324.0], [2334.0, 6106.0], [2430.0, 5268.0], [2326.0, 5710.0], [2318.0, 7737.0], [2406.0, 6404.5], [2414.0, 6456.0], [2422.0, 6651.0], [2342.0, 4816.75], [2358.0, 6293.0], [2350.0, 5576.0], [2366.0, 5233.0], [2310.0, 5781.0], [2398.0, 5521.0], [2382.0, 5708.0], [2374.0, 5436.0], [2446.0, 6188.0], [2462.0, 4939.5], [2438.0, 5183.0], [2454.0, 5168.0], [2550.0, 5069.0], [2534.0, 5533.0], [2542.0, 4913.0], [2494.0, 5256.75], [2486.0, 5159.0], [2478.0, 5160.5], [2470.0, 5201.5], [2502.0, 4791.0], [2510.0, 4906.0], [2526.0, 4849.0], [2159.0, 7035.0], [2063.0, 5346.0], [2079.0, 6895.0], [2151.0, 6910.0], [2055.0, 7037.5], [2167.0, 6680.0], [2175.0, 5398.333333333333], [2119.0, 6941.0], [2127.0, 6706.0], [2135.0, 7077.0], [2143.0, 6906.0], [2095.0, 5471.5], [2087.0, 7121.0], [2103.0, 7992.0], [2111.0, 7283.0], [2207.0, 5513.5], [2287.0, 5968.0], [2191.0, 6785.5], [2183.0, 6332.0], [2199.0, 6587.0], [2239.0, 6208.0], [2279.0, 5928.0], [2295.0, 4825.0], [2263.0, 5558.0], [2247.0, 6464.0], [2255.0, 6043.0], [2271.0, 7100.0], [2223.0, 6560.0], [2215.0, 6862.0], [2231.0, 5373.5], [2367.0, 5499.0], [2423.0, 5676.0], [2375.0, 5435.0], [2383.0, 6349.0], [2343.0, 4696.75], [2351.0, 5592.0], [2359.0, 5503.0], [2311.0, 5876.0], [2327.0, 7919.0], [2335.0, 5770.0], [2431.0, 5461.0], [2415.0, 5280.0], [2407.0, 5372.0], [2391.0, 5401.333333333333], [2399.0, 6000.0], [2463.0, 5537.5], [2439.0, 4782.333333333333], [2447.0, 5523.0], [2455.0, 5140.0], [2527.0, 5298.333333333333], [2519.0, 5087.5], [2511.0, 5835.0], [2503.0, 5489.0], [2535.0, 5125.0], [2543.0, 5455.0], [2551.0, 4781.0], [2487.0, 5017.0], [2479.0, 5032.0], [2471.0, 5967.0], [2495.0, 4797.0], [1.0, 6052.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[1160.7160709822513, 7720.4203949012835]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2553.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 42888.0, "minX": 1.699973493E12, "maxY": 186134.0, "series": [{"data": [[1.699973493E12, 186134.0], [1.699973495E12, 65062.0], [1.699973496E12, 70579.0], [1.699973494E12, 85136.0], [1.699973498E12, 68278.0], [1.699973497E12, 70173.0], [1.699973501E12, 76725.0], [1.699973499E12, 75827.0], [1.6999735E12, 71072.0], [1.699973503E12, 71536.0], [1.699973504E12, 66395.0], [1.699973502E12, 69252.0], [1.699973506E12, 66441.0], [1.699973505E12, 69701.0], [1.699973509E12, 67840.0], [1.699973507E12, 70196.0], [1.699973508E12, 74761.0], [1.699973511E12, 67810.0], [1.699973512E12, 70136.0], [1.69997351E12, 66400.0], [1.699973514E12, 62173.0], [1.699973513E12, 65975.0], [1.699973517E12, 65474.0], [1.699973515E12, 68755.0], [1.699973516E12, 79523.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.699973493E12, 128424.0], [1.699973495E12, 44907.0], [1.699973496E12, 48684.0], [1.699973494E12, 58746.0], [1.699973498E12, 47108.0], [1.699973497E12, 48423.0], [1.699973501E12, 52945.0], [1.699973499E12, 52337.0], [1.6999735E12, 49032.0], [1.699973503E12, 49351.0], [1.699973504E12, 45805.0], [1.699973502E12, 47792.0], [1.699973506E12, 45851.0], [1.699973505E12, 48096.0], [1.699973509E12, 46815.0], [1.699973507E12, 48446.0], [1.699973508E12, 51561.0], [1.699973511E12, 46785.0], [1.699973512E12, 48386.0], [1.69997351E12, 45810.0], [1.699973514E12, 42888.0], [1.699973513E12, 45530.0], [1.699973517E12, 45174.0], [1.699973515E12, 47440.0], [1.699973516E12, 54873.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699973517E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 19.633165829145746, "minX": 1.699973493E12, "maxY": 17003.68571428571, "series": [{"data": [[1.699973493E12, 19.633165829145746], [1.699973495E12, 998.1151079136688], [1.699973496E12, 1899.496688741722], [1.699973494E12, 183.63186813186815], [1.699973498E12, 3441.945205479452], [1.699973497E12, 2677.4800000000005], [1.699973501E12, 5561.798780487801], [1.699973499E12, 4129.444444444444], [1.6999735E12, 4858.618421052634], [1.699973503E12, 6952.13725490196], [1.699973504E12, 7623.161971830986], [1.699973502E12, 6289.331081081081], [1.699973506E12, 9048.42253521127], [1.699973505E12, 8349.818791946307], [1.699973509E12, 11172.124137931029], [1.699973507E12, 9832.840000000004], [1.699973508E12, 10438.524999999994], [1.699973511E12, 12584.344827586216], [1.699973512E12, 13280.653333333337], [1.69997351E12, 11893.584507042255], [1.699973514E12, 14727.669172932327], [1.699973513E12, 13968.695035460993], [1.699973517E12, 17003.68571428571], [1.699973515E12, 15373.48299319728], [1.699973516E12, 16195.935294117646]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699973517E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 19.399497487437177, "minX": 1.699973493E12, "maxY": 17003.4857142857, "series": [{"data": [[1.699973493E12, 19.399497487437177], [1.699973495E12, 998.0719424460435], [1.699973496E12, 1899.4370860927145], [1.699973494E12, 183.46703296703296], [1.699973498E12, 3441.8630136986294], [1.699973497E12, 2677.413333333333], [1.699973501E12, 5561.756097560975], [1.699973499E12, 4129.382716049384], [1.6999735E12, 4858.552631578949], [1.699973503E12, 6952.084967320265], [1.699973504E12, 7623.077464788731], [1.699973502E12, 6289.250000000001], [1.699973506E12, 9048.345070422534], [1.699973505E12, 8349.771812080531], [1.699973509E12, 11172.075862068963], [1.699973507E12, 9832.746666666666], [1.699973508E12, 10438.449999999997], [1.699973511E12, 12584.317241379313], [1.699973512E12, 13280.560000000001], [1.69997351E12, 11893.535211267601], [1.699973514E12, 14727.601503759395], [1.699973513E12, 13968.680851063828], [1.699973517E12, 17003.4857142857], [1.699973515E12, 15373.448979591833], [1.699973516E12, 16195.894117647056]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699973517E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.5578231292517003, "minX": 1.699973493E12, "maxY": 4.442211055276382, "series": [{"data": [[1.699973493E12, 4.442211055276382], [1.699973495E12, 1.6618705035971224], [1.699973496E12, 1.1986754966887412], [1.699973494E12, 1.857142857142857], [1.699973498E12, 1.0890410958904106], [1.699973497E12, 1.3599999999999997], [1.699973501E12, 1.579268292682927], [1.699973499E12, 0.9876543209876553], [1.6999735E12, 2.0526315789473686], [1.699973503E12, 1.2679738562091505], [1.699973504E12, 0.8943661971830981], [1.699973502E12, 1.3445945945945943], [1.699973506E12, 1.295774647887324], [1.699973505E12, 1.0939597315436242], [1.699973509E12, 0.7448275862068967], [1.699973507E12, 0.933333333333334], [1.699973508E12, 0.7624999999999997], [1.699973511E12, 0.6620689655172415], [1.699973512E12, 1.0666666666666662], [1.69997351E12, 1.3450704225352121], [1.699973514E12, 0.8345864661654137], [1.699973513E12, 0.794326241134752], [1.699973517E12, 1.0857142857142854], [1.699973515E12, 0.5578231292517003], [1.699973516E12, 0.6470588235294119]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699973517E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.699973493E12, "maxY": 19980.0, "series": [{"data": [[1.699973493E12, 166.0], [1.699973495E12, 1767.0], [1.699973496E12, 2883.0], [1.699973494E12, 838.0], [1.699973498E12, 4576.0], [1.699973497E12, 3589.0], [1.699973501E12, 7453.0], [1.699973499E12, 5494.0], [1.6999735E12, 6649.0], [1.699973503E12, 9008.0], [1.699973504E12, 9234.0], [1.699973502E12, 8009.0], [1.699973506E12, 11359.0], [1.699973505E12, 10391.0], [1.699973509E12, 14623.0], [1.699973507E12, 12214.0], [1.699973508E12, 12137.0], [1.699973511E12, 14214.0], [1.699973512E12, 14925.0], [1.69997351E12, 14079.0], [1.699973514E12, 16519.0], [1.699973513E12, 16141.0], [1.699973517E12, 19980.0], [1.699973515E12, 17393.0], [1.699973516E12, 18247.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.699973493E12, 69.10000000000002], [1.699973495E12, 1393.0], [1.699973496E12, 2312.8], [1.699973494E12, 489.00000000000017], [1.699973498E12, 3923.0], [1.699973497E12, 3048.6], [1.699973501E12, 6237.0], [1.699973499E12, 4767.1], [1.6999735E12, 5529.1], [1.699973503E12, 7736.0], [1.699973504E12, 8345.2], [1.699973502E12, 7102.2], [1.699973506E12, 9700.500000000002], [1.699973505E12, 8905.0], [1.699973509E12, 11936.2], [1.699973507E12, 10518.2], [1.699973508E12, 11070.6], [1.699973511E12, 13182.0], [1.699973512E12, 13954.1], [1.69997351E12, 12593.300000000001], [1.699973514E12, 15497.4], [1.699973513E12, 14666.6], [1.699973517E12, 17910.3], [1.699973515E12, 15876.4], [1.699973516E12, 17101.7]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.699973493E12, 144.02999999999997], [1.699973495E12, 1759.8], [1.699973496E12, 2786.799999999998], [1.699973494E12, 818.0799999999997], [1.699973498E12, 4513.96], [1.699973497E12, 3578.29], [1.699973501E12, 7159.199999999997], [1.699973499E12, 5415.250000000001], [1.6999735E12, 6634.16], [1.699973503E12, 8895.680000000002], [1.699973504E12, 9224.97], [1.699973502E12, 7964.9], [1.699973506E12, 11343.09], [1.699973505E12, 10128.5], [1.699973509E12, 13846.059999999987], [1.699973507E12, 12037.540000000003], [1.699973508E12, 11961.929999999997], [1.699973511E12, 14017.119999999997], [1.699973512E12, 14882.67], [1.69997351E12, 13918.609999999997], [1.699973514E12, 16407.82], [1.699973513E12, 16100.260000000002], [1.699973517E12, 19853.72], [1.699973515E12, 17235.08], [1.699973516E12, 18056.01]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.699973493E12, 90.44999999999959], [1.699973495E12, 1534.0], [1.699973496E12, 2573.2], [1.699973494E12, 574.1999999999999], [1.699973498E12, 4045.6], [1.699973497E12, 3256.8999999999996], [1.699973501E12, 6377.25], [1.699973499E12, 5007.95], [1.6999735E12, 5784.549999999999], [1.699973503E12, 8068.599999999999], [1.699973504E12, 8769.65], [1.699973502E12, 7450.75], [1.699973506E12, 10048.8], [1.699973505E12, 9240.0], [1.699973509E12, 12336.4], [1.699973507E12, 10838.699999999999], [1.699973508E12, 11351.8], [1.699973511E12, 13445.5], [1.699973512E12, 14296.349999999999], [1.69997351E12, 12983.8], [1.699973514E12, 15903.0], [1.699973513E12, 15325.8], [1.699973517E12, 18625.1], [1.699973515E12, 16116.8], [1.699973516E12, 17366.25]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.699973493E12, 5.0], [1.699973495E12, 451.0], [1.699973496E12, 1295.0], [1.699973494E12, 6.0], [1.699973498E12, 2812.0], [1.699973497E12, 2165.0], [1.699973501E12, 4835.0], [1.699973499E12, 3474.0], [1.6999735E12, 4202.0], [1.699973503E12, 6225.0], [1.699973504E12, 6875.0], [1.699973502E12, 5576.0], [1.699973506E12, 8345.0], [1.699973505E12, 7637.0], [1.699973509E12, 10427.0], [1.699973507E12, 9101.0], [1.699973508E12, 9759.0], [1.699973511E12, 11919.0], [1.699973512E12, 12620.0], [1.69997351E12, 11155.0], [1.699973514E12, 13992.0], [1.699973513E12, 13259.0], [1.699973517E12, 16217.0], [1.699973515E12, 14703.0], [1.699973516E12, 15414.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.699973493E12, 9.0], [1.699973495E12, 994.0], [1.699973496E12, 1911.0], [1.699973494E12, 102.5], [1.699973498E12, 3398.5], [1.699973497E12, 2666.5], [1.699973501E12, 5490.5], [1.699973499E12, 4061.0], [1.6999735E12, 4764.0], [1.699973503E12, 6855.0], [1.699973504E12, 7490.0], [1.699973502E12, 6160.0], [1.699973506E12, 8925.5], [1.699973505E12, 8313.0], [1.699973509E12, 11040.0], [1.699973507E12, 9697.5], [1.699973508E12, 10371.5], [1.699973511E12, 12520.0], [1.699973512E12, 13158.5], [1.69997351E12, 11798.0], [1.699973514E12, 14626.0], [1.699973513E12, 13828.0], [1.699973517E12, 16828.5], [1.699973515E12, 15315.0], [1.699973516E12, 16099.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699973517E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 9.0, "minX": 133.0, "maxY": 16828.5, "series": [{"data": [[133.0, 14626.0], [139.0, 994.0], [142.0, 8933.5], [141.0, 13828.0], [140.0, 16828.5], [151.0, 1911.0], [150.0, 9697.5], [146.0, 3398.5], [148.0, 6160.0], [149.0, 8313.0], [145.0, 12064.0], [147.0, 15315.0], [152.0, 4764.0], [153.0, 6855.0], [162.0, 4061.0], [164.0, 5490.5], [160.0, 10371.5], [170.0, 16099.5], [182.0, 102.5], [398.0, 9.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 398.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 8.5, "minX": 133.0, "maxY": 16828.5, "series": [{"data": [[133.0, 14626.0], [139.0, 994.0], [142.0, 8933.5], [141.0, 13827.0], [140.0, 16828.5], [151.0, 1911.0], [150.0, 9697.5], [146.0, 3398.5], [148.0, 6160.0], [149.0, 8313.0], [145.0, 12064.0], [147.0, 15315.0], [152.0, 4764.0], [153.0, 6855.0], [162.0, 4061.0], [164.0, 5490.5], [160.0, 10371.5], [170.0, 16099.5], [182.0, 102.5], [398.0, 8.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 398.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 43.0, "minX": 1.699973492E12, "maxY": 689.0, "series": [{"data": [[1.699973495E12, 501.0], [1.699973496E12, 500.0], [1.699973494E12, 689.0], [1.699973498E12, 499.0], [1.699973497E12, 500.0], [1.699973499E12, 500.0], [1.6999735E12, 407.0], [1.699973493E12, 362.0], [1.699973492E12, 43.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.6999735E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 133.0, "minX": 1.699973493E12, "maxY": 398.0, "series": [{"data": [[1.699973493E12, 398.0], [1.699973495E12, 139.0], [1.699973496E12, 151.0], [1.699973494E12, 182.0], [1.699973498E12, 146.0], [1.699973497E12, 150.0], [1.699973501E12, 164.0], [1.699973499E12, 162.0], [1.6999735E12, 152.0], [1.699973503E12, 153.0], [1.699973504E12, 142.0], [1.699973502E12, 148.0], [1.699973506E12, 142.0], [1.699973505E12, 149.0], [1.699973509E12, 145.0], [1.699973507E12, 150.0], [1.699973508E12, 160.0], [1.699973511E12, 145.0], [1.699973512E12, 150.0], [1.69997351E12, 142.0], [1.699973514E12, 133.0], [1.699973513E12, 141.0], [1.699973517E12, 140.0], [1.699973515E12, 147.0], [1.699973516E12, 170.0]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699973517E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 133.0, "minX": 1.699973493E12, "maxY": 398.0, "series": [{"data": [[1.699973493E12, 398.0], [1.699973495E12, 139.0], [1.699973496E12, 151.0], [1.699973494E12, 182.0], [1.699973498E12, 146.0], [1.699973497E12, 150.0], [1.699973501E12, 164.0], [1.699973499E12, 162.0], [1.6999735E12, 152.0], [1.699973503E12, 153.0], [1.699973504E12, 142.0], [1.699973502E12, 148.0], [1.699973506E12, 142.0], [1.699973505E12, 149.0], [1.699973509E12, 145.0], [1.699973507E12, 150.0], [1.699973508E12, 160.0], [1.699973511E12, 145.0], [1.699973512E12, 150.0], [1.69997351E12, 142.0], [1.699973514E12, 133.0], [1.699973513E12, 141.0], [1.699973517E12, 140.0], [1.699973515E12, 147.0], [1.699973516E12, 170.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699973517E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 133.0, "minX": 1.699973493E12, "maxY": 398.0, "series": [{"data": [[1.699973493E12, 398.0], [1.699973495E12, 139.0], [1.699973496E12, 151.0], [1.699973494E12, 182.0], [1.699973498E12, 146.0], [1.699973497E12, 150.0], [1.699973501E12, 164.0], [1.699973499E12, 162.0], [1.6999735E12, 152.0], [1.699973503E12, 153.0], [1.699973504E12, 142.0], [1.699973502E12, 148.0], [1.699973506E12, 142.0], [1.699973505E12, 149.0], [1.699973509E12, 145.0], [1.699973507E12, 150.0], [1.699973508E12, 160.0], [1.699973511E12, 145.0], [1.699973512E12, 150.0], [1.69997351E12, 142.0], [1.699973514E12, 133.0], [1.699973513E12, 141.0], [1.699973517E12, 140.0], [1.699973515E12, 147.0], [1.699973516E12, 170.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699973517E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

