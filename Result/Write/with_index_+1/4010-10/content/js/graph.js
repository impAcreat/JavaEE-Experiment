/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 17561.0, "series": [{"data": [[0.0, 5.0], [0.1, 5.0], [0.2, 5.0], [0.3, 6.0], [0.4, 6.0], [0.5, 6.0], [0.6, 6.0], [0.7, 6.0], [0.8, 6.0], [0.9, 6.0], [1.0, 6.0], [1.1, 6.0], [1.2, 6.0], [1.3, 6.0], [1.4, 6.0], [1.5, 6.0], [1.6, 6.0], [1.7, 6.0], [1.8, 6.0], [1.9, 6.0], [2.0, 6.0], [2.1, 6.0], [2.2, 6.0], [2.3, 6.0], [2.4, 6.0], [2.5, 6.0], [2.6, 6.0], [2.7, 6.0], [2.8, 6.0], [2.9, 7.0], [3.0, 7.0], [3.1, 7.0], [3.2, 7.0], [3.3, 7.0], [3.4, 7.0], [3.5, 7.0], [3.6, 7.0], [3.7, 7.0], [3.8, 7.0], [3.9, 7.0], [4.0, 7.0], [4.1, 7.0], [4.2, 7.0], [4.3, 7.0], [4.4, 7.0], [4.5, 7.0], [4.6, 7.0], [4.7, 7.0], [4.8, 7.0], [4.9, 7.0], [5.0, 7.0], [5.1, 7.0], [5.2, 7.0], [5.3, 7.0], [5.4, 7.0], [5.5, 7.0], [5.6, 7.0], [5.7, 7.0], [5.8, 7.0], [5.9, 7.0], [6.0, 7.0], [6.1, 7.0], [6.2, 7.0], [6.3, 7.0], [6.4, 7.0], [6.5, 7.0], [6.6, 7.0], [6.7, 7.0], [6.8, 7.0], [6.9, 7.0], [7.0, 7.0], [7.1, 7.0], [7.2, 7.0], [7.3, 7.0], [7.4, 7.0], [7.5, 7.0], [7.6, 7.0], [7.7, 8.0], [7.8, 8.0], [7.9, 8.0], [8.0, 8.0], [8.1, 8.0], [8.2, 8.0], [8.3, 8.0], [8.4, 8.0], [8.5, 8.0], [8.6, 8.0], [8.7, 8.0], [8.8, 8.0], [8.9, 8.0], [9.0, 8.0], [9.1, 8.0], [9.2, 8.0], [9.3, 8.0], [9.4, 8.0], [9.5, 8.0], [9.6, 8.0], [9.7, 8.0], [9.8, 8.0], [9.9, 8.0], [10.0, 8.0], [10.1, 8.0], [10.2, 8.0], [10.3, 8.0], [10.4, 8.0], [10.5, 8.0], [10.6, 8.0], [10.7, 8.0], [10.8, 8.0], [10.9, 8.0], [11.0, 8.0], [11.1, 9.0], [11.2, 9.0], [11.3, 9.0], [11.4, 9.0], [11.5, 9.0], [11.6, 9.0], [11.7, 9.0], [11.8, 9.0], [11.9, 9.0], [12.0, 9.0], [12.1, 9.0], [12.2, 9.0], [12.3, 9.0], [12.4, 9.0], [12.5, 9.0], [12.6, 9.0], [12.7, 9.0], [12.8, 9.0], [12.9, 9.0], [13.0, 9.0], [13.1, 10.0], [13.2, 10.0], [13.3, 10.0], [13.4, 10.0], [13.5, 10.0], [13.6, 10.0], [13.7, 10.0], [13.8, 10.0], [13.9, 10.0], [14.0, 10.0], [14.1, 10.0], [14.2, 10.0], [14.3, 10.0], [14.4, 11.0], [14.5, 11.0], [14.6, 11.0], [14.7, 11.0], [14.8, 11.0], [14.9, 11.0], [15.0, 11.0], [15.1, 12.0], [15.2, 13.0], [15.3, 13.0], [15.4, 13.0], [15.5, 13.0], [15.6, 14.0], [15.7, 14.0], [15.8, 14.0], [15.9, 16.0], [16.0, 16.0], [16.1, 19.0], [16.2, 24.0], [16.3, 28.0], [16.4, 31.0], [16.5, 33.0], [16.6, 38.0], [16.7, 45.0], [16.8, 48.0], [16.9, 50.0], [17.0, 51.0], [17.1, 55.0], [17.2, 57.0], [17.3, 59.0], [17.4, 62.0], [17.5, 69.0], [17.6, 72.0], [17.7, 77.0], [17.8, 78.0], [17.9, 81.0], [18.0, 84.0], [18.1, 89.0], [18.2, 93.0], [18.3, 95.0], [18.4, 100.0], [18.5, 100.0], [18.6, 104.0], [18.7, 106.0], [18.8, 108.0], [18.9, 111.0], [19.0, 117.0], [19.1, 119.0], [19.2, 124.0], [19.3, 129.0], [19.4, 132.0], [19.5, 152.0], [19.6, 158.0], [19.7, 165.0], [19.8, 178.0], [19.9, 197.0], [20.0, 210.0], [20.1, 220.0], [20.2, 239.0], [20.3, 249.0], [20.4, 277.0], [20.5, 302.0], [20.6, 315.0], [20.7, 326.0], [20.8, 371.0], [20.9, 397.0], [21.0, 421.0], [21.1, 438.0], [21.2, 442.0], [21.3, 453.0], [21.4, 481.0], [21.5, 531.0], [21.6, 547.0], [21.7, 567.0], [21.8, 586.0], [21.9, 635.0], [22.0, 662.0], [22.1, 665.0], [22.2, 738.0], [22.3, 764.0], [22.4, 804.0], [22.5, 832.0], [22.6, 835.0], [22.7, 864.0], [22.8, 889.0], [22.9, 904.0], [23.0, 907.0], [23.1, 943.0], [23.2, 983.0], [23.3, 994.0], [23.4, 1041.0], [23.5, 1055.0], [23.6, 1097.0], [23.7, 1115.0], [23.8, 1153.0], [23.9, 1167.0], [24.0, 1199.0], [24.1, 1221.0], [24.2, 1260.0], [24.3, 1278.0], [24.4, 1293.0], [24.5, 1310.0], [24.6, 1343.0], [24.7, 1366.0], [24.8, 1406.0], [24.9, 1420.0], [25.0, 1455.0], [25.1, 1485.0], [25.2, 1497.0], [25.3, 1530.0], [25.4, 1553.0], [25.5, 1571.0], [25.6, 1596.0], [25.7, 1614.0], [25.8, 1625.0], [25.9, 1661.0], [26.0, 1690.0], [26.1, 1710.0], [26.2, 1735.0], [26.3, 1769.0], [26.4, 1808.0], [26.5, 1819.0], [26.6, 1869.0], [26.7, 1899.0], [26.8, 1919.0], [26.9, 1948.0], [27.0, 1959.0], [27.1, 1989.0], [27.2, 1996.0], [27.3, 2033.0], [27.4, 2069.0], [27.5, 2096.0], [27.6, 2137.0], [27.7, 2151.0], [27.8, 2184.0], [27.9, 2199.0], [28.0, 2233.0], [28.1, 2253.0], [28.2, 2278.0], [28.3, 2301.0], [28.4, 2320.0], [28.5, 2337.0], [28.6, 2361.0], [28.7, 2379.0], [28.8, 2390.0], [28.9, 2428.0], [29.0, 2443.0], [29.1, 2462.0], [29.2, 2500.0], [29.3, 2521.0], [29.4, 2534.0], [29.5, 2544.0], [29.6, 2554.0], [29.7, 2574.0], [29.8, 2597.0], [29.9, 2621.0], [30.0, 2630.0], [30.1, 2644.0], [30.2, 2655.0], [30.3, 2674.0], [30.4, 2695.0], [30.5, 2712.0], [30.6, 2717.0], [30.7, 2733.0], [30.8, 2771.0], [30.9, 2798.0], [31.0, 2814.0], [31.1, 2832.0], [31.2, 2852.0], [31.3, 2874.0], [31.4, 2897.0], [31.5, 2911.0], [31.6, 2935.0], [31.7, 2953.0], [31.8, 2969.0], [31.9, 2988.0], [32.0, 3028.0], [32.1, 3035.0], [32.2, 3060.0], [32.3, 3071.0], [32.4, 3083.0], [32.5, 3100.0], [32.6, 3118.0], [32.7, 3143.0], [32.8, 3159.0], [32.9, 3167.0], [33.0, 3210.0], [33.1, 3239.0], [33.2, 3269.0], [33.3, 3289.0], [33.4, 3306.0], [33.5, 3329.0], [33.6, 3347.0], [33.7, 3358.0], [33.8, 3389.0], [33.9, 3396.0], [34.0, 3409.0], [34.1, 3420.0], [34.2, 3435.0], [34.3, 3450.0], [34.4, 3465.0], [34.5, 3477.0], [34.6, 3503.0], [34.7, 3531.0], [34.8, 3544.0], [34.9, 3546.0], [35.0, 3552.0], [35.1, 3580.0], [35.2, 3602.0], [35.3, 3634.0], [35.4, 3675.0], [35.5, 3703.0], [35.6, 3734.0], [35.7, 3751.0], [35.8, 3779.0], [35.9, 3793.0], [36.0, 3823.0], [36.1, 3849.0], [36.2, 3879.0], [36.3, 3901.0], [36.4, 3921.0], [36.5, 3947.0], [36.6, 3955.0], [36.7, 3972.0], [36.8, 3987.0], [36.9, 4015.0], [37.0, 4024.0], [37.1, 4050.0], [37.2, 4073.0], [37.3, 4089.0], [37.4, 4112.0], [37.5, 4147.0], [37.6, 4162.0], [37.7, 4178.0], [37.8, 4205.0], [37.9, 4229.0], [38.0, 4248.0], [38.1, 4283.0], [38.2, 4293.0], [38.3, 4324.0], [38.4, 4336.0], [38.5, 4349.0], [38.6, 4380.0], [38.7, 4399.0], [38.8, 4406.0], [38.9, 4421.0], [39.0, 4425.0], [39.1, 4442.0], [39.2, 4457.0], [39.3, 4471.0], [39.4, 4475.0], [39.5, 4499.0], [39.6, 4522.0], [39.7, 4538.0], [39.8, 4554.0], [39.9, 4567.0], [40.0, 4594.0], [40.1, 4620.0], [40.2, 4678.0], [40.3, 4695.0], [40.4, 4701.0], [40.5, 4713.0], [40.6, 4720.0], [40.7, 4791.0], [40.8, 4800.0], [40.9, 4831.0], [41.0, 4850.0], [41.1, 4859.0], [41.2, 4890.0], [41.3, 4926.0], [41.4, 4942.0], [41.5, 4966.0], [41.6, 4978.0], [41.7, 5000.0], [41.8, 5011.0], [41.9, 5044.0], [42.0, 5049.0], [42.1, 5060.0], [42.2, 5069.0], [42.3, 5118.0], [42.4, 5130.0], [42.5, 5151.0], [42.6, 5199.0], [42.7, 5211.0], [42.8, 5215.0], [42.9, 5240.0], [43.0, 5271.0], [43.1, 5298.0], [43.2, 5327.0], [43.3, 5355.0], [43.4, 5386.0], [43.5, 5406.0], [43.6, 5433.0], [43.7, 5457.0], [43.8, 5482.0], [43.9, 5524.0], [44.0, 5552.0], [44.1, 5572.0], [44.2, 5586.0], [44.3, 5601.0], [44.4, 5616.0], [44.5, 5626.0], [44.6, 5647.0], [44.7, 5666.0], [44.8, 5688.0], [44.9, 5695.0], [45.0, 5720.0], [45.1, 5738.0], [45.2, 5761.0], [45.3, 5814.0], [45.4, 5827.0], [45.5, 5847.0], [45.6, 5858.0], [45.7, 5876.0], [45.8, 5891.0], [45.9, 5910.0], [46.0, 5923.0], [46.1, 5935.0], [46.2, 5958.0], [46.3, 5963.0], [46.4, 5983.0], [46.5, 6001.0], [46.6, 6029.0], [46.7, 6055.0], [46.8, 6070.0], [46.9, 6080.0], [47.0, 6106.0], [47.1, 6123.0], [47.2, 6135.0], [47.3, 6161.0], [47.4, 6173.0], [47.5, 6200.0], [47.6, 6208.0], [47.7, 6219.0], [47.8, 6224.0], [47.9, 6259.0], [48.0, 6270.0], [48.1, 6286.0], [48.2, 6299.0], [48.3, 6315.0], [48.4, 6336.0], [48.5, 6350.0], [48.6, 6364.0], [48.7, 6376.0], [48.8, 6383.0], [48.9, 6409.0], [49.0, 6414.0], [49.1, 6450.0], [49.2, 6455.0], [49.3, 6502.0], [49.4, 6527.0], [49.5, 6532.0], [49.6, 6553.0], [49.7, 6569.0], [49.8, 6597.0], [49.9, 6619.0], [50.0, 6654.0], [50.1, 6672.0], [50.2, 6679.0], [50.3, 6692.0], [50.4, 6700.0], [50.5, 6707.0], [50.6, 6737.0], [50.7, 6761.0], [50.8, 6777.0], [50.9, 6786.0], [51.0, 6799.0], [51.1, 6818.0], [51.2, 6824.0], [51.3, 6840.0], [51.4, 6854.0], [51.5, 6861.0], [51.6, 6889.0], [51.7, 6897.0], [51.8, 6926.0], [51.9, 6942.0], [52.0, 6957.0], [52.1, 6965.0], [52.2, 6985.0], [52.3, 7008.0], [52.4, 7016.0], [52.5, 7030.0], [52.6, 7052.0], [52.7, 7065.0], [52.8, 7094.0], [52.9, 7106.0], [53.0, 7121.0], [53.1, 7152.0], [53.2, 7170.0], [53.3, 7186.0], [53.4, 7191.0], [53.5, 7206.0], [53.6, 7227.0], [53.7, 7243.0], [53.8, 7260.0], [53.9, 7282.0], [54.0, 7298.0], [54.1, 7303.0], [54.2, 7315.0], [54.3, 7329.0], [54.4, 7344.0], [54.5, 7350.0], [54.6, 7362.0], [54.7, 7377.0], [54.8, 7390.0], [54.9, 7422.0], [55.0, 7461.0], [55.1, 7490.0], [55.2, 7502.0], [55.3, 7510.0], [55.4, 7533.0], [55.5, 7555.0], [55.6, 7578.0], [55.7, 7613.0], [55.8, 7626.0], [55.9, 7633.0], [56.0, 7640.0], [56.1, 7647.0], [56.2, 7661.0], [56.3, 7667.0], [56.4, 7696.0], [56.5, 7728.0], [56.6, 7761.0], [56.7, 7766.0], [56.8, 7780.0], [56.9, 7784.0], [57.0, 7792.0], [57.1, 7801.0], [57.2, 7820.0], [57.3, 7835.0], [57.4, 7848.0], [57.5, 7859.0], [57.6, 7894.0], [57.7, 7908.0], [57.8, 7946.0], [57.9, 7973.0], [58.0, 7978.0], [58.1, 7985.0], [58.2, 7993.0], [58.3, 8009.0], [58.4, 8024.0], [58.5, 8039.0], [58.6, 8052.0], [58.7, 8065.0], [58.8, 8073.0], [58.9, 8082.0], [59.0, 8092.0], [59.1, 8112.0], [59.2, 8141.0], [59.3, 8165.0], [59.4, 8200.0], [59.5, 8226.0], [59.6, 8252.0], [59.7, 8258.0], [59.8, 8281.0], [59.9, 8290.0], [60.0, 8318.0], [60.1, 8336.0], [60.2, 8344.0], [60.3, 8352.0], [60.4, 8358.0], [60.5, 8371.0], [60.6, 8384.0], [60.7, 8396.0], [60.8, 8408.0], [60.9, 8416.0], [61.0, 8428.0], [61.1, 8434.0], [61.2, 8472.0], [61.3, 8487.0], [61.4, 8508.0], [61.5, 8523.0], [61.6, 8543.0], [61.7, 8553.0], [61.8, 8554.0], [61.9, 8574.0], [62.0, 8598.0], [62.1, 8618.0], [62.2, 8624.0], [62.3, 8640.0], [62.4, 8656.0], [62.5, 8680.0], [62.6, 8690.0], [62.7, 8708.0], [62.8, 8725.0], [62.9, 8735.0], [63.0, 8744.0], [63.1, 8757.0], [63.2, 8774.0], [63.3, 8801.0], [63.4, 8803.0], [63.5, 8812.0], [63.6, 8827.0], [63.7, 8851.0], [63.8, 8870.0], [63.9, 8874.0], [64.0, 8906.0], [64.1, 8937.0], [64.2, 8954.0], [64.3, 8977.0], [64.4, 8996.0], [64.5, 9016.0], [64.6, 9040.0], [64.7, 9069.0], [64.8, 9083.0], [64.9, 9100.0], [65.0, 9126.0], [65.1, 9141.0], [65.2, 9151.0], [65.3, 9187.0], [65.4, 9203.0], [65.5, 9210.0], [65.6, 9226.0], [65.7, 9238.0], [65.8, 9245.0], [65.9, 9248.0], [66.0, 9263.0], [66.1, 9292.0], [66.2, 9305.0], [66.3, 9322.0], [66.4, 9327.0], [66.5, 9352.0], [66.6, 9386.0], [66.7, 9398.0], [66.8, 9417.0], [66.9, 9452.0], [67.0, 9465.0], [67.1, 9479.0], [67.2, 9515.0], [67.3, 9521.0], [67.4, 9553.0], [67.5, 9588.0], [67.6, 9617.0], [67.7, 9641.0], [67.8, 9666.0], [67.9, 9692.0], [68.0, 9734.0], [68.1, 9755.0], [68.2, 9757.0], [68.3, 9775.0], [68.4, 9800.0], [68.5, 9812.0], [68.6, 9841.0], [68.7, 9855.0], [68.8, 9863.0], [68.9, 9883.0], [69.0, 9915.0], [69.1, 9947.0], [69.2, 9960.0], [69.3, 9971.0], [69.4, 9980.0], [69.5, 10007.0], [69.6, 10021.0], [69.7, 10027.0], [69.8, 10054.0], [69.9, 10079.0], [70.0, 10092.0], [70.1, 10098.0], [70.2, 10109.0], [70.3, 10116.0], [70.4, 10140.0], [70.5, 10158.0], [70.6, 10170.0], [70.7, 10208.0], [70.8, 10237.0], [70.9, 10248.0], [71.0, 10288.0], [71.1, 10304.0], [71.2, 10312.0], [71.3, 10322.0], [71.4, 10343.0], [71.5, 10356.0], [71.6, 10380.0], [71.7, 10409.0], [71.8, 10418.0], [71.9, 10459.0], [72.0, 10482.0], [72.1, 10491.0], [72.2, 10506.0], [72.3, 10538.0], [72.4, 10545.0], [72.5, 10558.0], [72.6, 10603.0], [72.7, 10638.0], [72.8, 10667.0], [72.9, 10686.0], [73.0, 10701.0], [73.1, 10716.0], [73.2, 10747.0], [73.3, 10751.0], [73.4, 10764.0], [73.5, 10773.0], [73.6, 10776.0], [73.7, 10809.0], [73.8, 10828.0], [73.9, 10851.0], [74.0, 10878.0], [74.1, 10891.0], [74.2, 10903.0], [74.3, 10906.0], [74.4, 10913.0], [74.5, 10931.0], [74.6, 10952.0], [74.7, 10985.0], [74.8, 10997.0], [74.9, 11025.0], [75.0, 11049.0], [75.1, 11053.0], [75.2, 11068.0], [75.3, 11112.0], [75.4, 11126.0], [75.5, 11135.0], [75.6, 11161.0], [75.7, 11175.0], [75.8, 11192.0], [75.9, 11221.0], [76.0, 11247.0], [76.1, 11259.0], [76.2, 11285.0], [76.3, 11310.0], [76.4, 11329.0], [76.5, 11344.0], [76.6, 11372.0], [76.7, 11395.0], [76.8, 11414.0], [76.9, 11435.0], [77.0, 11454.0], [77.1, 11471.0], [77.2, 11519.0], [77.3, 11539.0], [77.4, 11544.0], [77.5, 11548.0], [77.6, 11568.0], [77.7, 11593.0], [77.8, 11616.0], [77.9, 11647.0], [78.0, 11671.0], [78.1, 11727.0], [78.2, 11737.0], [78.3, 11739.0], [78.4, 11762.0], [78.5, 11778.0], [78.6, 11805.0], [78.7, 11834.0], [78.8, 11866.0], [78.9, 11881.0], [79.0, 11907.0], [79.1, 11920.0], [79.2, 11940.0], [79.3, 11950.0], [79.4, 11980.0], [79.5, 11997.0], [79.6, 12012.0], [79.7, 12032.0], [79.8, 12041.0], [79.9, 12050.0], [80.0, 12076.0], [80.1, 12104.0], [80.2, 12115.0], [80.3, 12124.0], [80.4, 12145.0], [80.5, 12158.0], [80.6, 12166.0], [80.7, 12195.0], [80.8, 12203.0], [80.9, 12240.0], [81.0, 12248.0], [81.1, 12268.0], [81.2, 12276.0], [81.3, 12332.0], [81.4, 12352.0], [81.5, 12366.0], [81.6, 12381.0], [81.7, 12406.0], [81.8, 12413.0], [81.9, 12423.0], [82.0, 12435.0], [82.1, 12451.0], [82.2, 12466.0], [82.3, 12474.0], [82.4, 12495.0], [82.5, 12514.0], [82.6, 12530.0], [82.7, 12550.0], [82.8, 12557.0], [82.9, 12583.0], [83.0, 12605.0], [83.1, 12622.0], [83.2, 12636.0], [83.3, 12650.0], [83.4, 12668.0], [83.5, 12671.0], [83.6, 12688.0], [83.7, 12707.0], [83.8, 12715.0], [83.9, 12731.0], [84.0, 12756.0], [84.1, 12768.0], [84.2, 12780.0], [84.3, 12791.0], [84.4, 12812.0], [84.5, 12820.0], [84.6, 12834.0], [84.7, 12855.0], [84.8, 12880.0], [84.9, 12884.0], [85.0, 12899.0], [85.1, 12912.0], [85.2, 12931.0], [85.3, 12944.0], [85.4, 12957.0], [85.5, 12988.0], [85.6, 12998.0], [85.7, 13021.0], [85.8, 13051.0], [85.9, 13059.0], [86.0, 13093.0], [86.1, 13113.0], [86.2, 13136.0], [86.3, 13167.0], [86.4, 13197.0], [86.5, 13214.0], [86.6, 13226.0], [86.7, 13239.0], [86.8, 13257.0], [86.9, 13274.0], [87.0, 13283.0], [87.1, 13298.0], [87.2, 13314.0], [87.3, 13322.0], [87.4, 13341.0], [87.5, 13353.0], [87.6, 13364.0], [87.7, 13383.0], [87.8, 13393.0], [87.9, 13405.0], [88.0, 13419.0], [88.1, 13434.0], [88.2, 13446.0], [88.3, 13460.0], [88.4, 13475.0], [88.5, 13501.0], [88.6, 13511.0], [88.7, 13526.0], [88.8, 13564.0], [88.9, 13580.0], [89.0, 13598.0], [89.1, 13606.0], [89.2, 13616.0], [89.3, 13622.0], [89.4, 13632.0], [89.5, 13668.0], [89.6, 13691.0], [89.7, 13716.0], [89.8, 13733.0], [89.9, 13738.0], [90.0, 13748.0], [90.1, 13761.0], [90.2, 13788.0], [90.3, 13818.0], [90.4, 13831.0], [90.5, 13859.0], [90.6, 13878.0], [90.7, 13887.0], [90.8, 13908.0], [90.9, 13921.0], [91.0, 13937.0], [91.1, 13967.0], [91.2, 13985.0], [91.3, 14008.0], [91.4, 14036.0], [91.5, 14053.0], [91.6, 14071.0], [91.7, 14093.0], [91.8, 14106.0], [91.9, 14112.0], [92.0, 14158.0], [92.1, 14168.0], [92.2, 14194.0], [92.3, 14207.0], [92.4, 14215.0], [92.5, 14234.0], [92.6, 14251.0], [92.7, 14281.0], [92.8, 14300.0], [92.9, 14319.0], [93.0, 14333.0], [93.1, 14363.0], [93.2, 14372.0], [93.3, 14397.0], [93.4, 14418.0], [93.5, 14443.0], [93.6, 14451.0], [93.7, 14472.0], [93.8, 14492.0], [93.9, 14511.0], [94.0, 14538.0], [94.1, 14584.0], [94.2, 14605.0], [94.3, 14635.0], [94.4, 14650.0], [94.5, 14659.0], [94.6, 14714.0], [94.7, 14771.0], [94.8, 14789.0], [94.9, 14824.0], [95.0, 14852.0], [95.1, 14868.0], [95.2, 14892.0], [95.3, 14902.0], [95.4, 14933.0], [95.5, 14992.0], [95.6, 15016.0], [95.7, 15034.0], [95.8, 15037.0], [95.9, 15051.0], [96.0, 15062.0], [96.1, 15072.0], [96.2, 15083.0], [96.3, 15092.0], [96.4, 15099.0], [96.5, 15116.0], [96.6, 15146.0], [96.7, 15153.0], [96.8, 15182.0], [96.9, 15198.0], [97.0, 15214.0], [97.1, 15229.0], [97.2, 15236.0], [97.3, 15265.0], [97.4, 15301.0], [97.5, 15311.0], [97.6, 15324.0], [97.7, 15363.0], [97.8, 15398.0], [97.9, 15426.0], [98.0, 15455.0], [98.1, 15472.0], [98.2, 15487.0], [98.3, 15512.0], [98.4, 15538.0], [98.5, 15552.0], [98.6, 15576.0], [98.7, 15601.0], [98.8, 15631.0], [98.9, 15652.0], [99.0, 15680.0], [99.1, 15688.0], [99.2, 15731.0], [99.3, 15754.0], [99.4, 15865.0], [99.5, 15984.0], [99.6, 16070.0], [99.7, 16307.0], [99.8, 16601.0], [99.9, 17097.0], [100.0, 17561.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 737.0, "series": [{"data": [[0.0, 737.0], [100.0, 61.0], [200.0, 24.0], [300.0, 18.0], [400.0, 21.0], [500.0, 15.0], [600.0, 14.0], [700.0, 8.0], [800.0, 19.0], [900.0, 18.0], [1000.0, 12.0], [1100.0, 16.0], [1200.0, 16.0], [1300.0, 14.0], [1400.0, 18.0], [1500.0, 18.0], [1600.0, 17.0], [1700.0, 11.0], [1800.0, 14.0], [1900.0, 20.0], [2000.0, 12.0], [2100.0, 16.0], [2300.0, 23.0], [2200.0, 14.0], [2400.0, 14.0], [2500.0, 25.0], [2600.0, 25.0], [2700.0, 20.0], [2800.0, 21.0], [2900.0, 19.0], [3000.0, 23.0], [3100.0, 20.0], [3200.0, 15.0], [3300.0, 24.0], [3400.0, 25.0], [3500.0, 24.0], [3700.0, 19.0], [3600.0, 10.0], [3800.0, 15.0], [3900.0, 22.0], [4000.0, 21.0], [4300.0, 20.0], [4100.0, 15.0], [4200.0, 19.0], [4400.0, 32.0], [4500.0, 22.0], [4600.0, 14.0], [4700.0, 15.0], [4800.0, 18.0], [5100.0, 15.0], [4900.0, 19.0], [5000.0, 23.0], [5300.0, 15.0], [5200.0, 19.0], [5500.0, 18.0], [5400.0, 14.0], [5600.0, 25.0], [5700.0, 13.0], [5800.0, 25.0], [6100.0, 22.0], [6000.0, 18.0], [5900.0, 25.0], [6200.0, 29.0], [6300.0, 26.0], [6400.0, 17.0], [6600.0, 24.0], [6500.0, 21.0], [6800.0, 28.0], [6900.0, 22.0], [6700.0, 25.0], [7000.0, 24.0], [7100.0, 24.0], [7300.0, 32.0], [7200.0, 23.0], [7400.0, 13.0], [7600.0, 30.0], [7500.0, 20.0], [7900.0, 26.0], [7800.0, 21.0], [7700.0, 27.0], [8000.0, 31.0], [8100.0, 14.0], [8300.0, 34.0], [8400.0, 24.0], [8500.0, 27.0], [8200.0, 21.0], [8600.0, 25.0], [8700.0, 26.0], [8800.0, 28.0], [9200.0, 32.0], [9100.0, 19.0], [9000.0, 17.0], [8900.0, 19.0], [9300.0, 22.0], [9400.0, 18.0], [9500.0, 16.0], [9600.0, 14.0], [9700.0, 19.0], [9800.0, 23.0], [9900.0, 20.0], [10000.0, 27.0], [10200.0, 18.0], [10100.0, 21.0], [10600.0, 16.0], [10300.0, 23.0], [10500.0, 16.0], [10700.0, 26.0], [10400.0, 21.0], [11000.0, 18.0], [10900.0, 28.0], [10800.0, 19.0], [11200.0, 18.0], [11100.0, 22.0], [11700.0, 21.0], [11500.0, 23.0], [11300.0, 18.0], [11600.0, 13.0], [11400.0, 18.0], [12100.0, 29.0], [11900.0, 21.0], [12200.0, 19.0], [11800.0, 16.0], [12000.0, 22.0], [12300.0, 18.0], [12700.0, 26.0], [12600.0, 27.0], [12400.0, 29.0], [12500.0, 23.0], [12800.0, 28.0], [12900.0, 24.0], [13100.0, 15.0], [13000.0, 17.0], [13200.0, 28.0], [13300.0, 29.0], [13600.0, 25.0], [13400.0, 26.0], [13500.0, 21.0], [13800.0, 22.0], [13700.0, 24.0], [14300.0, 21.0], [14000.0, 21.0], [13900.0, 19.0], [14200.0, 21.0], [14100.0, 20.0], [14500.0, 13.0], [14400.0, 21.0], [14800.0, 18.0], [14600.0, 16.0], [14700.0, 10.0], [15200.0, 19.0], [15300.0, 17.0], [15000.0, 35.0], [14900.0, 11.0], [15100.0, 20.0], [15500.0, 16.0], [15600.0, 18.0], [15400.0, 18.0], [15700.0, 9.0], [15800.0, 4.0], [16000.0, 4.0], [16100.0, 3.0], [15900.0, 3.0], [16300.0, 2.0], [16500.0, 2.0], [16900.0, 1.0], [17000.0, 2.0], [17300.0, 1.0], [16600.0, 1.0], [17400.0, 1.0], [17100.0, 1.0], [16700.0, 1.0], [17500.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 17500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 150.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2999.0, "series": [{"data": [[0.0, 861.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 150.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2999.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 7.705035971223024, "minX": 1.699972842E12, "maxY": 2287.1418439716313, "series": [{"data": [[1.699972845E12, 847.8346456692911], [1.699972844E12, 484.92253521126776], [1.699972843E12, 42.706329113924056], [1.699972848E12, 1910.5081967213114], [1.699972847E12, 1571.617834394905], [1.699972846E12, 1228.7037037037037], [1.69997285E12, 2287.1418439716313], [1.699972849E12, 2279.9177215189875], [1.699972853E12, 1828.0915032679743], [1.699972852E12, 1985.6234567901238], [1.699972851E12, 2141.6600000000003], [1.699972856E12, 1348.1192052980136], [1.699972855E12, 1499.592105263158], [1.699972854E12, 1663.5795454545455], [1.699972858E12, 1049.6233766233768], [1.699972857E12, 1199.6164383561643], [1.699972861E12, 604.114649681529], [1.69997286E12, 758.0728476821191], [1.699972859E12, 903.1294964028785], [1.699972864E12, 105.22966507177016], [1.699972842E12, 7.705035971223024], [1.699972863E12, 287.109677419355], [1.699972862E12, 445.08074534161517]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699972864E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 8.144144144144148, "minX": 1.0, "maxY": 17442.0, "series": [{"data": [[2.0, 467.8529411764706], [3.0, 180.57303370786516], [4.0, 8.144144144144148], [5.0, 321.03921568627453], [6.0, 152.56190476190477], [7.0, 244.2], [8.0, 458.25714285714287], [9.0, 704.2272727272726], [10.0, 892.7777777777778], [11.0, 796.75], [12.0, 13.105263157894736], [13.0, 1886.5555555555557], [14.0, 889.5555555555557], [15.0, 3810.25], [16.0, 5329.0], [17.0, 15621.0], [18.0, 3183.4], [19.0, 15.0], [20.0, 2766.333333333333], [21.0, 5124.333333333333], [22.0, 5153.333333333333], [23.0, 17.5], [24.0, 8060.5], [25.0, 7771.5], [26.0, 15409.0], [27.0, 7690.5], [28.0, 89.0], [29.0, 10528.666666666666], [30.0, 7766.0], [31.0, 77.0], [33.0, 5166.833333333333], [32.0, 4063.25], [35.0, 5419.333333333333], [34.0, 15130.0], [37.0, 15651.5], [39.0, 1958.5], [40.0, 15892.0], [43.0, 7853.0], [42.0, 15460.0], [45.0, 5249.666666666667], [44.0, 48.0], [47.0, 3844.25], [46.0, 7685.0], [48.0, 5405.0], [49.0, 7811.5], [50.0, 3965.25], [51.0, 5229.333333333333], [53.0, 3143.0], [52.0, 15182.0], [54.0, 3123.6], [55.0, 17442.0], [56.0, 66.66666666666667], [57.0, 7894.0], [58.0, 7669.5], [59.0, 15104.5], [61.0, 15430.0], [60.0, 15302.0], [63.0, 15321.0], [62.0, 15512.0], [66.0, 16601.0], [65.0, 15571.0], [64.0, 15070.0], [71.0, 3846.5], [69.0, 5226.333333333333], [70.0, 15551.0], [68.0, 15293.5], [75.0, 126.33333333333333], [73.0, 55.0], [72.0, 3163.8], [74.0, 15648.0], [79.0, 15132.666666666666], [77.0, 15539.0], [76.0, 15301.0], [83.0, 16008.0], [82.0, 15601.0], [81.0, 15569.0], [80.0, 15012.0], [87.0, 15083.0], [86.0, 15366.5], [85.0, 15147.0], [89.0, 3218.4], [90.0, 5098.666666666667], [91.0, 100.0], [88.0, 15373.0], [92.0, 8166.25], [94.0, 5078.666666666667], [95.0, 15214.0], [93.0, 15308.0], [98.0, 5225.333333333333], [99.0, 15078.0], [97.0, 15707.0], [96.0, 15212.0], [103.0, 15680.0], [102.0, 15092.0], [101.0, 15459.0], [100.0, 15052.0], [107.0, 15190.0], [106.0, 15037.0], [105.0, 15114.0], [104.0, 15921.0], [108.0, 7563.5], [110.0, 15175.0], [114.0, 7599.0], [115.0, 7856.0], [113.0, 14902.0], [112.0, 15053.5], [118.0, 7511.5], [119.0, 3874.0], [117.0, 16187.0], [116.0, 15433.0], [121.0, 9985.666666666666], [120.0, 94.0], [123.0, 15152.0], [122.0, 15734.0], [126.0, 17097.0], [125.0, 15878.0], [124.0, 16571.0], [129.0, 10876.666666666666], [132.0, 7602.0], [135.0, 15037.0], [134.0, 15631.0], [133.0, 14902.0], [131.0, 15395.0], [130.0, 15078.0], [128.0, 14849.0], [137.0, 5122.666666666667], [138.0, 194.5], [139.0, 3799.75], [140.0, 7536.5], [141.0, 10008.0], [143.0, 14745.0], [142.0, 14771.0], [136.0, 15236.0], [150.0, 62.0], [149.0, 7562.0], [151.0, 10063.333333333334], [148.0, 14876.0], [147.0, 14828.0], [146.0, 15225.0], [145.0, 14789.0], [144.0, 14771.0], [154.0, 106.0], [158.0, 5140.0], [157.0, 14706.0], [156.0, 15283.666666666666], [153.0, 14772.0], [152.0, 15754.0], [162.0, 7375.5], [165.0, 7344.5], [164.0, 7342.0], [166.0, 7949.5], [163.0, 14570.0], [161.0, 14910.0], [160.0, 14828.5], [168.0, 3122.6], [171.0, 7537.25], [175.0, 14489.0], [174.0, 14748.0], [173.0, 15265.0], [172.0, 14659.0], [169.0, 15050.0], [181.0, 10100.0], [183.0, 15644.0], [182.0, 14868.0], [179.0, 15234.0], [178.0, 14644.0], [176.0, 14650.0], [191.0, 14433.0], [190.0, 15487.0], [189.0, 15324.0], [188.0, 15538.0], [187.0, 14651.0], [186.0, 14406.0], [185.0, 14443.0], [184.0, 15097.0], [199.0, 14617.0], [198.0, 14613.0], [197.0, 14451.0], [196.0, 14479.0], [195.0, 14449.0], [194.0, 14397.0], [193.0, 15146.0], [192.0, 14852.0], [207.0, 14602.0], [206.0, 15311.0], [205.0, 15062.0], [204.0, 14645.0], [203.0, 14282.0], [202.0, 14456.0], [201.0, 15205.0], [200.0, 14694.0], [212.0, 4982.666666666667], [213.0, 5227.666666666667], [214.0, 7502.5], [215.0, 14215.0], [211.0, 14251.0], [210.0, 14284.0], [209.0, 14272.0], [208.0, 14270.0], [217.0, 3783.0], [221.0, 9946.333333333334], [223.0, 14321.0], [222.0, 14508.0], [219.0, 14212.0], [218.0, 16926.0], [216.0, 14210.0], [224.0, 7853.0], [226.0, 9701.666666666666], [231.0, 14236.0], [230.0, 14385.0], [229.0, 15141.0], [228.0, 14875.0], [227.0, 14339.0], [236.0, 154.0], [235.0, 7313.5], [239.0, 4981.666666666667], [238.0, 8192.5], [237.0, 14162.0], [234.0, 14152.0], [233.0, 14213.0], [232.0, 15169.0], [246.0, 7157.5], [247.0, 14073.0], [245.0, 14071.0], [244.0, 14513.0], [243.0, 14897.0], [242.0, 15487.0], [241.0, 14182.0], [240.0, 14315.0], [249.0, 9646.666666666666], [255.0, 7608.0], [254.0, 14158.0], [253.0, 14492.0], [252.0, 14525.0], [250.0, 14112.0], [271.0, 13939.0], [258.0, 7411.5], [261.0, 9898.0], [263.0, 14525.0], [257.0, 14053.0], [256.0, 14415.0], [262.0, 14230.0], [266.0, 127.0], [270.0, 14981.0], [269.0, 16592.0], [268.0, 14004.0], [259.0, 14364.0], [267.0, 14212.5], [265.0, 14008.0], [264.0, 13995.0], [286.0, 13921.0], [276.0, 325.0], [277.0, 14353.0], [279.0, 14056.0], [272.0, 13937.0], [275.0, 13976.0], [274.0, 14151.5], [278.0, 14320.0], [287.0, 15092.0], [285.0, 14239.0], [284.0, 13935.0], [283.0, 14395.0], [282.0, 15593.0], [281.0, 14511.0], [280.0, 14363.0], [303.0, 14327.0], [296.0, 7101.5], [302.0, 14828.0], [301.0, 14852.0], [300.0, 14579.0], [291.0, 14300.0], [290.0, 14432.0], [289.0, 15549.0], [288.0, 14648.0], [299.0, 14095.0], [298.0, 13878.0], [297.0, 13879.0], [295.0, 15072.0], [294.0, 13901.0], [293.0, 14196.0], [292.0, 15164.0], [318.0, 13729.0], [306.0, 7254.5], [310.0, 4058.5], [309.0, 13897.0], [308.0, 13811.0], [311.0, 14506.0], [305.0, 13973.0], [304.0, 14112.0], [314.0, 7153.0], [313.0, 4969.333333333333], [319.0, 14135.0], [312.0, 13818.0], [317.0, 14408.0], [316.0, 13808.0], [307.0, 13807.0], [315.0, 13934.0], [323.0, 531.0], [326.0, 2947.6], [325.0, 13887.0], [324.0, 14067.5], [330.0, 4784.666666666667], [329.0, 9386.0], [334.0, 13674.0], [333.0, 13671.0], [332.0, 13915.0], [331.0, 14364.0], [327.0, 13697.0], [322.0, 13749.0], [320.0, 13746.0], [350.0, 13622.0], [344.0, 7179.0], [346.0, 6927.5], [351.0, 14933.0], [349.0, 13622.0], [348.0, 13725.0], [347.0, 13818.0], [345.0, 14050.0], [343.0, 14256.0], [338.0, 15440.5], [336.0, 14801.0], [342.0, 13751.0], [341.0, 14112.0], [340.0, 13779.0], [364.0, 7166.5], [354.0, 4916.0], [353.0, 9386.666666666666], [359.0, 15048.0], [358.0, 13616.0], [355.0, 3705.0], [356.0, 5467.333333333333], [357.0, 6942.0], [361.0, 317.0], [363.0, 7159.0], [362.0, 9418.0], [365.0, 6996.0], [367.0, 14161.0], [360.0, 13919.0], [366.0, 13668.0], [381.0, 14281.0], [374.0, 6953.5], [382.0, 13766.0], [380.0, 13473.0], [371.0, 13838.0], [370.0, 13734.0], [369.0, 13601.0], [368.0, 13738.0], [379.0, 13692.5], [377.0, 13523.0], [376.0, 13517.0], [373.0, 14301.0], [372.0, 14150.0], [397.0, 7200.5], [386.0, 6900.0], [385.0, 13652.0], [384.0, 13479.0], [391.0, 4809.0], [390.0, 7094.5], [389.0, 13883.0], [388.0, 13440.0], [393.0, 3105.4], [395.0, 7368.0], [394.0, 14446.0], [398.0, 7158.0], [399.0, 6869.0], [392.0, 13419.0], [396.0, 13419.0], [414.0, 13432.0], [407.0, 7362.0], [401.0, 13374.0], [400.0, 13397.0], [403.0, 13547.0], [402.0, 14029.0], [406.0, 13361.0], [405.0, 13831.0], [404.0, 13364.0], [415.0, 13626.0], [413.0, 14233.0], [412.0, 13471.0], [411.0, 14099.0], [410.0, 13298.0], [409.0, 13358.0], [408.0, 13353.0], [431.0, 15325.0], [418.0, 6923.5], [417.0, 13743.0], [416.0, 14813.0], [419.0, 13265.0], [428.0, 2434.5714285714284], [427.0, 7014.0], [430.0, 13423.5], [426.0, 13403.0], [425.0, 13908.0], [424.0, 13341.0], [423.0, 13746.0], [422.0, 13257.0], [421.0, 13691.0], [420.0, 13322.0], [446.0, 13457.0], [435.0, 9165.333333333334], [437.0, 7065.0], [436.0, 13259.0], [439.0, 13534.0], [433.0, 13233.0], [432.0, 13383.0], [438.0, 14034.0], [445.0, 9058.0], [447.0, 13616.0], [443.0, 13400.0], [442.0, 13580.0], [441.0, 14370.0], [440.0, 14524.0], [448.0, 7554.0], [452.0, 4157.5], [451.0, 7087.5], [450.0, 13285.0], [449.0, 14050.0], [461.0, 13209.0], [460.0, 13107.0], [454.0, 7420.5], [453.0, 7300.0], [455.0, 4997.333333333333], [457.0, 560.0], [459.0, 7131.0], [458.0, 13427.5], [463.0, 13130.0], [456.0, 13125.0], [462.0, 14093.0], [478.0, 14036.0], [469.0, 6910.0], [468.0, 13658.0], [470.0, 13149.0], [479.0, 13371.0], [477.0, 13376.5], [467.0, 13936.0], [466.0, 13223.0], [465.0, 14824.0], [464.0, 13717.0], [475.0, 14896.0], [474.0, 15206.0], [473.0, 14191.0], [472.0, 13275.0], [471.0, 13274.0], [494.0, 13586.0], [482.0, 6835.0], [487.0, 7214.0], [481.0, 13219.0], [480.0, 13526.0], [486.0, 13294.0], [485.0, 13054.0], [484.0, 13963.0], [492.0, 5286.0], [483.0, 13837.0], [490.0, 4820.333333333333], [491.0, 4862.0], [495.0, 13113.0], [493.0, 13341.0], [489.0, 13713.0], [488.0, 13866.0], [510.0, 6940.0], [498.0, 6802.0], [497.0, 13497.0], [496.0, 13059.0], [499.0, 15552.0], [503.0, 13307.0], [502.0, 13132.0], [501.0, 14463.0], [500.0, 14195.0], [511.0, 12968.0], [509.0, 12951.0], [508.0, 13283.0], [507.0, 13788.0], [506.0, 13300.0], [505.0, 12998.0], [504.0, 13266.0], [540.0, 12989.0], [516.0, 2894.0], [526.0, 6918.5], [514.0, 12912.0], [512.0, 13322.0], [524.0, 13137.0], [520.0, 13592.0], [532.0, 6882.0], [538.0, 13338.0], [536.0, 12944.0], [518.0, 13322.0], [534.0, 12924.0], [530.0, 13195.0], [528.0, 13518.0], [574.0, 13356.0], [550.0, 755.6], [552.0, 6849.5], [554.0, 12882.0], [558.0, 13412.0], [548.0, 13025.5], [546.0, 13608.0], [556.0, 12751.0], [560.0, 6927.0], [562.0, 12791.0], [572.0, 13011.0], [570.0, 12806.0], [568.0, 12780.0], [566.0, 12687.0], [564.0, 12899.0], [604.0, 6898.5], [592.0, 6779.0], [590.0, 4933.333333333334], [606.0, 7508.0], [602.0, 12731.0], [582.0, 12852.0], [580.0, 12662.0], [578.0, 13232.0], [598.0, 13898.0], [596.0, 12762.5], [594.0, 12828.0], [588.0, 12617.0], [586.0, 12722.0], [584.0, 13102.0], [634.0, 13170.0], [624.0, 3872.75], [622.0, 2626.142857142857], [626.0, 6867.5], [636.0, 12849.0], [632.0, 12410.5], [612.0, 12567.0], [608.0, 13508.0], [630.0, 12465.5], [628.0, 12786.0], [620.0, 12612.0], [618.0, 13076.0], [616.0, 13392.0], [668.0, 12438.0], [652.0, 3953.25], [650.0, 4705.333333333334], [648.0, 12885.0], [656.0, 6680.0], [666.0, 6598.5], [662.0, 6959.5], [670.0, 12960.5], [664.0, 12671.0], [654.0, 12650.0], [642.0, 12465.0], [640.0, 12675.0], [646.0, 13051.0], [644.0, 13255.0], [660.0, 12230.0], [658.0, 12552.0], [702.0, 12636.0], [686.0, 3945.75], [672.0, 12547.0], [678.0, 12452.0], [674.0, 12071.0], [698.0, 6847.5], [700.0, 6979.5], [694.0, 12850.0], [692.0, 12095.0], [690.0, 13272.0], [688.0, 12268.0], [684.0, 12627.0], [682.0, 12242.0], [680.0, 12452.0], [732.0, 12897.0], [712.0, 5008.0], [714.0, 6756.5], [734.0, 12020.0], [730.0, 13434.0], [728.0, 12076.0], [718.0, 12274.0], [710.0, 12555.0], [708.0, 12112.5], [706.0, 12239.0], [704.0, 12593.0], [716.0, 12453.0], [726.0, 13061.0], [724.0, 12042.0], [722.0, 13212.0], [720.0, 12931.0], [762.0, 11967.0], [742.0, 4865.0], [740.0, 8851.0], [738.0, 11945.0], [736.0, 11950.0], [750.0, 12433.0], [748.0, 12036.0], [746.0, 12474.0], [744.0, 12041.5], [766.0, 6777.0], [760.0, 13167.0], [758.0, 12515.0], [756.0, 12210.0], [754.0, 13579.0], [752.0, 12622.0], [796.0, 6733.5], [780.0, 5019.0], [768.0, 6810.5], [774.0, 12185.0], [772.0, 12629.0], [770.0, 12013.0], [782.0, 11784.0], [778.0, 1231.3333333333333], [776.0, 6519.0], [798.0, 11762.0], [786.0, 11792.0], [794.0, 11731.0], [792.0, 11879.0], [790.0, 12943.0], [788.0, 12240.5], [826.0, 7258.0], [816.0, 4805.333333333334], [818.0, 5070.666666666666], [824.0, 4905.0], [806.0, 12114.0], [804.0, 11907.0], [802.0, 12438.0], [800.0, 11738.5], [830.0, 11546.0], [828.0, 13475.0], [822.0, 12104.0], [820.0, 12425.0], [814.0, 12583.0], [812.0, 11893.0], [810.0, 11999.0], [808.0, 11682.0], [860.0, 6468.0], [858.0, 6730.0], [832.0, 6954.5], [834.0, 11611.0], [846.0, 12012.0], [844.0, 11738.5], [842.0, 11695.0], [840.0, 11474.0], [836.0, 6716.0], [862.0, 6345.5], [856.0, 11414.0], [838.0, 13611.0], [854.0, 11411.0], [852.0, 11603.666666666666], [848.0, 11401.0], [892.0, 11309.0], [890.0, 6318.0], [894.0, 11539.0], [888.0, 11776.0], [886.0, 11401.0], [884.0, 11791.0], [882.0, 12709.0], [880.0, 11519.0], [878.0, 11470.5], [866.0, 11349.0], [864.0, 11344.0], [870.0, 11337.0], [868.0, 12715.0], [876.0, 11279.0], [874.0, 11538.0], [872.0, 12248.0], [926.0, 11987.0], [902.0, 6591.0], [904.0, 5280.666666666666], [908.0, 11107.0], [898.0, 11550.0], [916.0, 6465.5], [924.0, 12910.0], [922.0, 11938.5], [920.0, 11395.0], [918.0, 11051.5], [914.0, 11745.0], [912.0, 11068.0], [956.0, 10952.0], [928.0, 6437.0], [934.0, 5012.0], [930.0, 11008.0], [942.0, 4978.333333333334], [940.0, 11919.0], [938.0, 10952.0], [936.0, 11739.0], [958.0, 10855.0], [946.0, 10902.0], [944.0, 11252.0], [954.0, 11171.0], [952.0, 11165.0], [950.0, 12129.0], [948.0, 10995.0], [988.0, 10985.0], [960.0, 6641.5], [962.0, 12768.0], [974.0, 11170.5], [972.0, 10800.0], [970.0, 10830.0], [964.0, 6408.0], [978.0, 4013.0], [982.0, 6525.0], [990.0, 6264.5], [986.0, 10776.0], [984.0, 11568.0], [966.0, 11210.0], [976.0, 10765.0], [1016.0, 6657.0], [1006.0, 10709.0], [994.0, 10922.0], [992.0, 10906.0], [998.0, 10773.0], [996.0, 10877.0], [1004.0, 11206.0], [1002.0, 11294.0], [1000.0, 10748.0], [1012.0, 11161.0], [1014.0, 10742.0], [1010.0, 6650.0], [1018.0, 11057.0], [1008.0, 10655.0], [1020.0, 10701.0], [1072.0, 11259.0], [1036.0, 4103.0], [1044.0, 6365.5], [1040.0, 1919.0], [1056.0, 10409.0], [1080.0, 6094.5], [1076.0, 10535.5], [1060.0, 2261.0], [1064.0, 10463.5], [1048.0, 7780.666666666667], [1024.0, 10891.0], [1028.0, 10995.0], [1032.0, 10942.0], [1052.0, 10487.0], [1140.0, 10109.0], [1088.0, 11980.0], [1092.0, 10407.0], [1116.0, 10104.5], [1144.0, 10055.0], [1136.0, 10015.0], [1100.0, 11913.0], [1096.0, 10227.0], [1148.0, 5142.0], [1124.0, 7352.666666666667], [1128.0, 10237.0], [1120.0, 10092.0], [1132.0, 4597.5], [1104.0, 7439.333333333333], [1108.0, 4831.666666666666], [1112.0, 6213.5], [1180.0, 9863.0], [1172.0, 10088.0], [1168.0, 10498.0], [1176.0, 10304.0], [1196.0, 9841.0], [1192.0, 10242.0], [1188.0, 10111.0], [1212.0, 2048.0], [1200.0, 6014.0], [1160.0, 10558.0], [1156.0, 9976.0], [1152.0, 10005.5], [1204.0, 9755.0], [1208.0, 9765.0], [1276.0, 10118.0], [1272.0, 6061.5], [1228.0, 6169.5], [1220.0, 9758.0], [1224.0, 9791.0], [1256.0, 9460.0], [1252.0, 10619.0], [1248.0, 9956.5], [1260.0, 7103.333333333333], [1264.0, 9845.0], [1240.0, 11389.0], [1236.0, 10061.0], [1232.0, 9812.0], [1244.0, 5805.5], [1288.0, 10618.0], [1328.0, 6919.666666666667], [1280.0, 4360.0], [1308.0, 4928.666666666666], [1284.0, 9327.0], [1292.0, 10350.0], [1324.0, 9263.0], [1320.0, 9450.0], [1316.0, 9187.0], [1312.0, 9335.0], [1332.0, 9134.0], [1340.0, 9255.0], [1296.0, 5896.5], [1300.0, 9692.0], [1304.0, 9297.0], [1356.0, 5962.5], [1400.0, 5772.0], [1372.0, 6874.666666666667], [1348.0, 7053.333333333333], [1344.0, 8995.0], [1352.0, 8999.0], [1376.0, 8869.0], [1380.0, 8873.0], [1384.0, 9284.5], [1404.0, 5422.8], [1396.0, 8803.0], [1392.0, 8804.0], [1388.0, 4699.0], [1368.0, 9479.0], [1364.0, 9477.0], [1360.0, 8941.0], [1412.0, 8826.0], [1420.0, 7256.666666666667], [1460.0, 4221.5], [1416.0, 8977.0], [1408.0, 8745.0], [1424.0, 4953.666666666667], [1432.0, 9210.0], [1436.0, 9386.0], [1440.0, 4813.0], [1444.0, 8554.0], [1448.0, 8652.0], [1452.0, 8532.0], [1464.0, 9100.0], [1456.0, 5635.0], [1524.0, 8555.0], [1520.0, 8622.0], [1528.0, 4701.0], [1476.0, 8478.0], [1480.0, 8906.0], [1484.0, 8757.0], [1532.0, 5830.0], [1504.0, 5678.5], [1508.0, 9311.0], [1512.0, 8290.0], [1516.0, 8256.0], [1488.0, 5775.0], [1492.0, 2753.5], [1496.0, 8839.0], [1500.0, 5909.5], [1540.0, 8338.0], [1536.0, 8358.0], [1544.0, 8252.0], [1564.0, 9617.0], [1548.0, 5923.5], [1552.0, 2917.5], [1556.0, 8371.0], [1560.0, 5007.666666666667], [1572.0, 4436.5], [1596.0, 8066.0], [1592.0, 8230.0], [1588.0, 8413.0], [1584.0, 3009.5], [1576.0, 6026.0], [1580.0, 4845.666666666667], [1604.0, 8347.0], [1600.0, 8352.0], [1608.0, 5962.0], [1612.0, 7985.0], [1648.0, 7774.0], [1652.0, 9292.0], [1616.0, 7894.0], [1620.0, 8523.0], [1628.0, 7782.0], [1644.0, 5670.5], [1640.0, 8337.0], [1636.0, 7740.0], [1632.0, 3100.0], [1660.0, 7766.0], [1656.0, 7791.0], [1720.0, 7998.0], [1676.0, 3443.75], [1672.0, 8108.0], [1664.0, 9243.0], [1700.0, 5678.5], [1696.0, 7780.0], [1724.0, 7781.0], [1716.0, 7780.0], [1712.0, 7706.0], [1680.0, 5437.0], [1684.0, 7576.0], [1688.0, 7765.0], [1704.0, 5562.0], [1708.0, 4324.0], [1740.0, 5319.0], [1732.0, 5202.0], [1756.0, 5207.0], [1728.0, 7490.0], [1736.0, 7506.0], [1780.0, 7943.0], [1788.0, 7282.0], [1784.0, 9401.0], [1768.0, 5602.0], [1764.0, 7384.0], [1760.0, 7348.0], [1772.0, 7243.0], [1752.0, 5852.5], [1748.0, 7354.5], [1744.0, 7346.0], [1796.0, 7379.0], [1844.0, 5457.0], [1852.0, 6893.0], [1800.0, 5270.5], [1792.0, 5700.666666666667], [1840.0, 7106.0], [1820.0, 6431.333333333333], [1816.0, 7330.0], [1812.0, 7803.0], [1808.0, 7102.0], [1836.0, 5850.0], [1832.0, 7329.0], [1824.0, 7010.0], [1828.0, 7191.0], [1848.0, 7323.0], [1856.0, 6814.0], [1868.0, 5330.0], [1904.0, 6860.0], [1860.0, 5309.0], [1872.0, 7461.0], [1876.0, 6951.0], [1884.0, 6822.0], [1880.0, 6745.0], [1864.0, 6802.0], [1912.0, 6929.5], [1908.0, 6912.0], [1916.0, 7052.0], [1896.0, 4690.25], [1892.0, 7791.5], [1888.0, 6706.0], [1900.0, 6782.0], [1972.0, 6380.0], [1976.0, 5330.0], [1928.0, 4117.0], [1968.0, 6447.0], [1932.0, 6529.0], [1960.0, 4922.0], [1952.0, 6786.0], [1956.0, 6444.0], [1980.0, 6722.0], [1936.0, 5229.5], [1940.0, 5381.0], [1920.0, 6702.0], [1924.0, 6677.0], [1948.0, 6718.5], [1964.0, 6372.0], [1996.0, 4857.666666666667], [2032.0, 7588.0], [2000.0, 6303.0], [2004.0, 6597.0], [1984.0, 6737.0], [2012.0, 7209.0], [2020.0, 5038.5], [2040.0, 4571.333333333333], [2036.0, 7633.0], [2016.0, 6414.0], [2024.0, 5006.0], [2056.0, 6070.0], [2144.0, 6455.0], [2160.0, 4971.0], [2048.0, 5004.5], [2064.0, 5983.0], [2072.0, 6702.0], [2104.0, 5914.0], [2096.0, 6115.0], [2088.0, 5962.0], [2080.0, 6001.0], [2168.0, 5838.5], [2120.0, 5891.0], [2128.0, 7115.0], [2152.0, 5598.0], [2192.0, 5635.0], [2200.0, 5101.6], [2176.0, 5482.0], [2232.0, 6783.0], [2224.0, 5548.0], [2216.0, 6146.0], [2184.0, 5447.0], [2272.0, 6208.0], [2280.0, 5429.0], [2296.0, 4680.0], [2240.0, 5355.0], [2248.0, 4663.0], [2256.0, 5213.0], [2264.0, 4763.5], [2208.0, 5861.0], [2320.0, 4778.0], [2312.0, 5234.5], [2360.0, 4529.0], [2304.0, 6409.0], [2328.0, 4791.0], [2368.0, 4473.0], [2376.0, 4549.0], [2384.0, 4998.333333333333], [2336.0, 4494.5], [2344.0, 5000.0], [2352.0, 4536.0], [2153.0, 5717.5], [2169.0, 5653.0], [2049.0, 3756.3333333333335], [2105.0, 5761.0], [2097.0, 6508.0], [2089.0, 6889.0], [2081.0, 6350.0], [2113.0, 6413.0], [2121.0, 5680.0], [2129.0, 5688.0], [2161.0, 7301.0], [2073.0, 6661.0], [2065.0, 6450.0], [2057.0, 8052.0], [2137.0, 5979.5], [2193.0, 7666.0], [2177.0, 6208.0], [2185.0, 6322.0], [2233.0, 5701.333333333333], [2201.0, 4873.666666666667], [2297.0, 4925.0], [2281.0, 6204.0], [2289.0, 5055.333333333333], [2257.0, 5852.0], [2249.0, 5361.0], [2265.0, 5547.666666666667], [2209.0, 5604.0], [2217.0, 5345.0], [2313.0, 5618.0], [2321.0, 4813.0], [2305.0, 5253.0], [2329.0, 5118.0], [2353.0, 5843.0], [2345.0, 5565.0], [2337.0, 4712.0], [2361.0, 5084.0], [2377.0, 4839.5], [2369.0, 4857.0], [2385.0, 4424.0], [1029.0, 11079.0], [1073.0, 4864.0], [1041.0, 8116.666666666667], [1045.0, 10545.0], [1049.0, 10497.0], [1033.0, 12332.0], [1053.0, 10993.0], [1037.0, 10697.0], [1069.0, 7482.333333333333], [1065.0, 10770.0], [1061.0, 10599.0], [1057.0, 10902.0], [1085.0, 10402.0], [1081.0, 10364.0], [1077.0, 11181.0], [1101.0, 10357.0], [1145.0, 10295.0], [1093.0, 5285.666666666666], [1109.0, 6730.0], [1097.0, 10710.0], [1141.0, 11017.0], [1149.0, 6282.0], [1125.0, 6473.5], [1121.0, 10158.0], [1129.0, 11981.0], [1133.0, 6346.5], [1105.0, 6147.0], [1113.0, 6099.0], [1089.0, 10872.0], [1181.0, 6945.0], [1173.0, 9859.0], [1169.0, 10482.0], [1177.0, 9851.0], [1213.0, 5439.2], [1201.0, 6091.5], [1157.0, 10039.0], [1161.0, 9943.0], [1165.0, 10187.5], [1205.0, 6076.0], [1185.0, 10459.0], [1189.0, 10054.0], [1193.0, 10199.0], [1197.0, 11380.0], [1209.0, 9757.0], [1229.0, 6349.0], [1245.0, 2096.0], [1217.0, 10404.0], [1221.0, 10289.0], [1253.0, 9515.0], [1249.0, 11541.0], [1257.0, 10078.0], [1261.0, 10116.0], [1277.0, 11774.0], [1273.0, 9396.0], [1265.0, 9913.0], [1269.0, 9716.5], [1233.0, 10168.0], [1237.0, 9855.0], [1241.0, 5196.666666666666], [1341.0, 6436.0], [1337.0, 5771.5], [1293.0, 6296.5], [1289.0, 9530.0], [1285.0, 9327.0], [1313.0, 12195.0], [1317.0, 9674.0], [1321.0, 10477.0], [1325.0, 9151.0], [1329.0, 5760.5], [1333.0, 9069.0], [1301.0, 6160.5], [1297.0, 9226.0], [1305.0, 9816.0], [1357.0, 5886.0], [1349.0, 12833.0], [1345.0, 9730.0], [1353.0, 9736.0], [1377.0, 8873.0], [1405.0, 5697.0], [1401.0, 10027.0], [1393.0, 8807.0], [1389.0, 9639.0], [1361.0, 3269.0], [1365.0, 6179.5], [1369.0, 8880.0], [1373.0, 9189.0], [1409.0, 4824.333333333334], [1421.0, 6077.5], [1417.0, 8679.0], [1413.0, 9141.0], [1457.0, 9203.0], [1425.0, 8640.0], [1429.0, 8695.5], [1433.0, 8684.0], [1437.0, 5522.0], [1469.0, 5960.0], [1465.0, 8703.0], [1461.0, 8622.0], [1445.0, 8812.0], [1449.0, 8690.0], [1453.0, 6109.5], [1441.0, 5616.5], [1481.0, 5665.5], [1477.0, 8718.0], [1473.0, 8520.0], [1501.0, 8472.0], [1485.0, 8479.0], [1529.0, 8618.0], [1525.0, 8343.0], [1521.0, 8794.0], [1533.0, 8689.0], [1509.0, 5934.5], [1493.0, 6711.0], [1489.0, 9630.0], [1497.0, 5672.0], [1537.0, 8111.0], [1589.0, 5457.0], [1545.0, 5524.5], [1541.0, 8189.0], [1565.0, 8068.0], [1561.0, 9479.0], [1557.0, 8165.0], [1553.0, 8759.0], [1569.0, 8570.0], [1597.0, 8258.0], [1593.0, 7936.0], [1585.0, 6561.0], [1549.0, 8082.0], [1573.0, 5551.5], [1577.0, 9102.0], [1581.0, 8866.0], [1601.0, 4671.333333333333], [1633.0, 6363.666666666667], [1629.0, 7982.0], [1625.0, 8246.5], [1621.0, 9114.0], [1617.0, 7845.0], [1609.0, 8774.0], [1605.0, 8138.0], [1613.0, 8698.0], [1649.0, 8519.0], [1637.0, 8213.0], [1641.0, 5652.0], [1645.0, 4977.333333333333], [1657.0, 7693.0], [1661.0, 8152.0], [1669.0, 7639.0], [1721.0, 7644.0], [1701.0, 3838.0], [1673.0, 7613.0], [1665.0, 8200.0], [1693.0, 7698.0], [1689.0, 7792.0], [1685.0, 7579.0], [1681.0, 7974.0], [1677.0, 5084.6], [1713.0, 7639.0], [1717.0, 7510.0], [1697.0, 7660.0], [1725.0, 7662.0], [1705.0, 5262.333333333333], [1709.0, 5350.5], [1729.0, 7823.0], [1733.0, 5895.5], [1757.0, 7299.0], [1753.0, 7313.0], [1749.0, 7946.0], [1745.0, 7639.0], [1737.0, 5992.0], [1741.0, 7728.0], [1777.0, 7877.0], [1781.0, 7652.0], [1761.0, 5964.5], [1789.0, 7204.0], [1785.0, 8082.0], [1765.0, 5693.5], [1769.0, 4179.8], [1797.0, 7238.0], [1801.0, 3226.0], [1793.0, 7541.0], [1805.0, 6139.666666666667], [1845.0, 7065.0], [1817.0, 4635.666666666667], [1813.0, 7131.0], [1809.0, 7092.0], [1821.0, 7053.0], [1837.0, 6946.0], [1833.0, 7315.0], [1829.0, 7055.0], [1849.0, 6939.0], [1861.0, 5088.333333333333], [1857.0, 4812.666666666667], [1885.0, 7196.0], [1881.0, 6985.0], [1877.0, 6853.0], [1873.0, 7336.0], [1865.0, 6933.0], [1917.0, 5144.0], [1913.0, 6882.0], [1909.0, 7170.0], [1905.0, 6658.0], [1893.0, 6934.0], [1889.0, 7615.0], [1897.0, 4843.666666666667], [1901.0, 6647.0], [1933.0, 6527.0], [1981.0, 5657.0], [1929.0, 4638.666666666667], [1969.0, 6605.0], [1973.0, 6795.0], [1977.0, 6362.0], [1961.0, 4436.6], [1937.0, 5318.0], [1941.0, 6979.0], [1945.0, 6852.5], [1921.0, 6691.0], [1925.0, 6942.0], [1949.0, 6512.0], [1965.0, 4760.75], [1989.0, 4635.666666666666], [2037.0, 7047.0], [2045.0, 6487.0], [2021.0, 4809.666666666667], [2009.0, 5743.0], [2005.0, 6405.0], [1985.0, 6338.0], [2013.0, 6590.0], [2017.0, 6376.0], [2025.0, 6199.0], [2029.0, 5418.333333333333], [2041.0, 6104.0], [2033.0, 6126.0], [1997.0, 6799.0], [1993.0, 6342.0], [2058.0, 6676.0], [2146.0, 6010.666666666667], [2154.0, 6169.5], [2050.0, 5708.0], [2066.0, 6034.0], [2074.0, 8052.0], [2098.0, 6304.0], [2090.0, 5963.0], [2082.0, 5881.0], [2162.0, 4912.5], [2170.0, 5552.0], [2138.0, 5626.0], [2130.0, 6055.0], [2186.0, 5072.0], [2178.0, 5550.5], [2234.0, 5516.5], [2226.0, 6102.5], [2218.0, 4771.0], [2194.0, 5853.0], [2202.0, 4577.0], [2274.0, 5130.5], [2282.0, 5942.0], [2290.0, 5151.0], [2298.0, 4893.5], [2242.0, 5211.5], [2258.0, 5935.0], [2266.0, 5047.0], [2210.0, 4881.0], [2314.0, 5069.0], [2306.0, 4978.0], [2330.0, 4695.0], [2370.0, 4631.5], [2378.0, 4858.0], [2386.0, 4720.0], [2338.0, 4540.0], [2346.0, 4840.5], [2354.0, 4800.0], [2362.0, 4567.0], [2067.0, 6850.0], [2147.0, 5913.0], [2163.0, 5572.0], [2155.0, 4494.0], [2051.0, 4796.333333333333], [2075.0, 5910.0], [2107.0, 6320.0], [2091.0, 5928.0], [2083.0, 6015.0], [2139.0, 4029.0], [2115.0, 5938.0], [2123.0, 5895.0], [2131.0, 5707.0], [2195.0, 5372.0], [2179.0, 4628.333333333333], [2187.0, 5940.0], [2235.0, 5207.0], [2203.0, 5484.0], [2243.0, 5341.0], [2291.0, 4484.5], [2299.0, 4917.0], [2283.0, 4983.0], [2275.0, 4538.0], [2259.0, 6135.0], [2251.0, 6032.0], [2267.0, 5044.0], [2211.0, 5110.75], [2227.0, 5271.0], [2219.0, 5218.0], [2315.0, 4867.0], [2307.0, 4853.0], [2323.0, 5796.0], [2331.0, 4822.5], [2355.0, 4509.5], [2347.0, 5582.0], [2363.0, 4569.0], [2371.0, 4622.0], [2379.0, 5005.0], [2387.0, 4842.5], [541.0, 13214.0], [513.0, 6798.5], [527.0, 14207.0], [525.0, 13748.0], [523.0, 13311.333333333334], [515.0, 3734.75], [543.0, 13711.5], [539.0, 13452.0], [537.0, 12870.0], [519.0, 13206.0], [535.0, 13318.0], [533.0, 12880.0], [531.0, 12884.0], [529.0, 12879.0], [573.0, 13385.0], [551.0, 8842.0], [549.0, 4705.0], [553.0, 7043.0], [557.0, 13021.0], [545.0, 13699.5], [555.0, 12813.0], [575.0, 12724.0], [571.0, 12690.0], [567.0, 12813.0], [565.0, 12780.0], [563.0, 12855.0], [561.0, 13154.0], [603.0, 12706.0], [591.0, 4765.333333333334], [593.0, 6880.0], [589.0, 5203.666666666666], [587.0, 13393.0], [585.0, 12707.0], [607.0, 12435.0], [605.0, 12755.0], [601.0, 12883.5], [583.0, 12665.0], [581.0, 12987.0], [579.0, 12776.0], [577.0, 12723.5], [599.0, 12530.0], [597.0, 12668.0], [633.0, 6922.0], [623.0, 6927.0], [621.0, 4706.0], [615.0, 12668.0], [613.0, 13372.0], [611.0, 12674.5], [609.0, 13344.0], [639.0, 12948.0], [637.0, 12381.0], [635.0, 12504.0], [627.0, 12641.0], [625.0, 12514.0], [619.0, 12406.0], [617.0, 12809.0], [671.0, 12352.0], [653.0, 5045.0], [651.0, 3993.75], [649.0, 12353.0], [657.0, 6673.0], [659.0, 934.0], [663.0, 6980.5], [667.0, 12915.0], [665.0, 12151.0], [655.0, 12646.0], [643.0, 12915.0], [647.0, 12551.0], [645.0, 12418.0], [661.0, 13093.0], [699.0, 12162.0], [687.0, 6805.0], [685.0, 3904.5], [683.0, 12766.0], [681.0, 13435.0], [691.0, 6792.0], [703.0, 12261.0], [701.0, 12218.0], [697.0, 12755.5], [679.0, 13569.0], [677.0, 12626.5], [675.0, 13420.0], [673.0, 12203.0], [695.0, 12145.0], [693.0, 12981.0], [735.0, 12468.0], [715.0, 7068.5], [713.0, 3406.6], [723.0, 6619.0], [721.0, 12275.0], [731.0, 6825.0], [733.0, 12507.0], [729.0, 12406.0], [711.0, 12124.0], [709.0, 13632.0], [705.0, 12593.0], [719.0, 13550.0], [717.0, 12273.0], [727.0, 13405.0], [725.0, 11997.0], [765.0, 12386.5], [741.0, 3939.25], [739.0, 1309.0], [737.0, 11946.0], [751.0, 12161.0], [749.0, 12166.0], [747.0, 12007.0], [745.0, 12117.0], [743.0, 1186.5], [767.0, 7822.0], [755.0, 11931.0], [753.0, 12951.0], [763.0, 11940.0], [761.0, 11861.0], [759.0, 12248.0], [757.0, 12493.0], [793.0, 11736.0], [779.0, 5881.4], [777.0, 3932.25], [791.0, 4141.5], [797.0, 11735.0], [795.0, 11727.0], [789.0, 12472.0], [785.0, 12157.0], [783.0, 13501.0], [775.0, 11826.0], [773.0, 11895.0], [771.0, 12039.0], [769.0, 12276.0], [781.0, 12577.0], [831.0, 11540.0], [809.0, 1310.0], [813.0, 11817.0], [811.0, 12640.0], [817.0, 6590.0], [827.0, 6637.0], [829.0, 11550.0], [825.0, 11527.0], [807.0, 12048.0], [805.0, 11666.0], [803.0, 11926.0], [801.0, 11737.0], [815.0, 11594.0], [823.0, 12801.0], [821.0, 11915.0], [819.0, 12262.0], [859.0, 6596.5], [835.0, 6641.5], [833.0, 11545.0], [837.0, 12538.0], [843.0, 1948.0], [845.0, 12820.0], [847.0, 7170.5], [861.0, 4038.25], [863.0, 12032.0], [857.0, 11431.0], [839.0, 11471.0], [855.0, 11579.0], [853.0, 12009.0], [849.0, 12170.0], [891.0, 11185.0], [865.0, 1583.0], [867.0, 11979.0], [879.0, 11548.0], [875.0, 12718.0], [873.0, 11456.0], [869.0, 4203.75], [885.0, 6348.5], [887.0, 1734.0], [895.0, 11192.0], [889.0, 11372.0], [871.0, 11652.0], [883.0, 11261.0], [881.0, 11371.0], [897.0, 7949.333333333333], [925.0, 6323.0], [923.0, 12374.0], [903.0, 12051.0], [901.0, 11126.5], [899.0, 12041.0], [905.0, 4208.25], [907.0, 8026.0], [909.0, 6532.0], [911.0, 8229.666666666666], [913.0, 5217.333333333334], [919.0, 12530.0], [915.0, 11258.0], [927.0, 11049.0], [959.0, 12100.0], [943.0, 6477.5], [931.0, 11633.0], [929.0, 11048.0], [935.0, 11125.0], [933.0, 11380.0], [955.0, 6296.0], [957.0, 10851.0], [951.0, 10883.0], [949.0, 11002.0], [947.0, 10903.0], [945.0, 12688.0], [941.0, 11242.0], [939.0, 11025.0], [937.0, 10905.0], [991.0, 10754.0], [979.0, 6569.0], [989.0, 6297.0], [987.0, 11838.0], [985.0, 10773.0], [967.0, 11546.0], [965.0, 10828.0], [963.0, 12306.0], [961.0, 11444.0], [983.0, 11752.0], [981.0, 11084.0], [977.0, 10764.0], [975.0, 10767.0], [971.0, 10803.0], [969.0, 10887.5], [993.0, 4903.666666666666], [1021.0, 6441.0], [1007.0, 10652.0], [1005.0, 12336.0], [1003.0, 10752.0], [1001.0, 10776.0], [995.0, 6471.5], [997.0, 10913.0], [1011.0, 4821.333333333334], [1015.0, 12044.0], [1009.0, 6648.0], [999.0, 10748.0], [1017.0, 10691.0], [1023.0, 5026.333333333334], [1019.0, 11513.0], [1086.0, 11127.0], [1042.0, 6208.0], [1058.0, 6232.5], [1082.0, 10296.0], [1074.0, 4934.333333333334], [1038.0, 11285.0], [1078.0, 10686.0], [1062.0, 10409.0], [1070.0, 11257.0], [1066.0, 10343.0], [1046.0, 4919.666666666666], [1050.0, 2031.0], [1054.0, 10494.0], [1026.0, 11200.5], [1030.0, 10747.0], [1102.0, 12285.0], [1094.0, 6016.0], [1118.0, 7916.666666666667], [1090.0, 10886.0], [1114.0, 10206.0], [1146.0, 6716.0], [1142.0, 10111.0], [1138.0, 10370.0], [1098.0, 10259.0], [1130.0, 10248.0], [1126.0, 10150.0], [1150.0, 11443.0], [1122.0, 10906.0], [1134.0, 2322.3333333333335], [1110.0, 6509.0], [1202.0, 9755.0], [1210.0, 9883.0], [1182.0, 6044.0], [1174.0, 6984.5], [1170.0, 9915.0], [1178.0, 9846.0], [1198.0, 7095.0], [1194.0, 9805.0], [1190.0, 10244.0], [1186.0, 10474.0], [1214.0, 4951.0], [1166.0, 9960.0], [1162.0, 9971.0], [1158.0, 9952.0], [1154.0, 10422.0], [1206.0, 9751.0], [1226.0, 7133.333333333333], [1246.0, 10313.0], [1218.0, 9973.0], [1222.0, 9755.0], [1270.0, 5955.0], [1258.0, 6059.0], [1254.0, 10311.0], [1250.0, 9800.0], [1278.0, 9322.0], [1274.0, 10026.0], [1262.0, 2836.0], [1230.0, 6346.5], [1266.0, 10916.0], [1242.0, 6036.5], [1238.0, 10096.0], [1294.0, 9230.0], [1290.0, 5814.0], [1286.0, 9641.0], [1282.0, 9456.5], [1326.0, 5784.5], [1318.0, 9962.0], [1314.0, 9247.0], [1342.0, 6000.5], [1338.0, 6223.75], [1330.0, 9083.0], [1298.0, 9236.0], [1302.0, 9238.0], [1306.0, 9243.0], [1310.0, 7188.0], [1398.0, 6784.333333333333], [1346.0, 9221.0], [1350.0, 9362.0], [1354.0, 9034.0], [1374.0, 4466.5], [1406.0, 5938.0], [1378.0, 8874.0], [1382.0, 9875.5], [1386.0, 9688.5], [1402.0, 8788.0], [1394.0, 8791.0], [1358.0, 8910.0], [1390.0, 8822.0], [1370.0, 6302.5], [1366.0, 9885.0], [1362.0, 9169.5], [1414.0, 9651.0], [1438.0, 5954.0], [1418.0, 8871.0], [1410.0, 8774.0], [1422.0, 9058.0], [1426.0, 8618.0], [1430.0, 9246.0], [1434.0, 8652.0], [1442.0, 9368.0], [1446.0, 8851.0], [1450.0, 8973.0], [1462.0, 4068.5], [1470.0, 8886.0], [1458.0, 8571.0], [1522.0, 8667.0], [1530.0, 5409.0], [1502.0, 8877.0], [1474.0, 8459.0], [1478.0, 10638.0], [1482.0, 8418.0], [1486.0, 8430.0], [1534.0, 9305.0], [1510.0, 4320.0], [1506.0, 8407.0], [1514.0, 8328.5], [1518.0, 8488.0], [1490.0, 8383.0], [1498.0, 5543.0], [1494.0, 8397.0], [1546.0, 3761.7142857142853], [1586.0, 4576.666666666667], [1542.0, 5935.5], [1538.0, 9452.0], [1566.0, 8009.0], [1562.0, 8384.0], [1554.0, 8303.0], [1570.0, 8412.0], [1574.0, 8141.0], [1594.0, 8020.0], [1590.0, 9248.0], [1550.0, 8119.0], [1578.0, 8404.0], [1582.0, 7994.0], [1606.0, 5842.0], [1654.0, 6450.333333333333], [1602.0, 6168.0], [1610.0, 7859.0], [1614.0, 7873.0], [1650.0, 8254.0], [1618.0, 3760.6666666666665], [1626.0, 7985.0], [1622.0, 8080.0], [1642.0, 7749.0], [1638.0, 8324.0], [1646.0, 9556.0], [1634.0, 6189.0], [1662.0, 7785.0], [1658.0, 7769.0], [1674.0, 7781.0], [1722.0, 8602.0], [1702.0, 6825.0], [1678.0, 4807.75], [1670.0, 8085.0], [1666.0, 7803.0], [1698.0, 7523.0], [1726.0, 7438.0], [1718.0, 7616.0], [1714.0, 7491.0], [1682.0, 8040.0], [1686.0, 7576.0], [1690.0, 7541.0], [1694.0, 7531.0], [1706.0, 5531.5], [1710.0, 5451.5], [1738.0, 7937.0], [1758.0, 7303.0], [1730.0, 8092.0], [1734.0, 5326.0], [1742.0, 5391.0], [1778.0, 5831.5], [1790.0, 3675.0], [1782.0, 5595.5], [1766.0, 7785.0], [1770.0, 4685.666666666667], [1774.0, 7799.0], [1746.0, 7487.0], [1754.0, 5286.5], [1798.0, 7284.0], [1794.0, 7332.0], [1842.0, 6967.5], [1806.0, 8236.0], [1802.0, 7318.5], [1846.0, 6993.0], [1818.0, 8278.0], [1814.0, 7908.0], [1810.0, 7094.0], [1822.0, 7010.0], [1834.0, 7080.0], [1838.0, 6958.0], [1830.0, 5656.0], [1854.0, 6888.5], [1826.0, 7086.5], [1850.0, 6889.0], [1858.0, 5615.5], [1870.0, 6007.0], [1874.0, 5486.0], [1878.0, 5733.5], [1886.0, 7476.0], [1882.0, 6732.0], [1862.0, 5075.5], [1866.0, 6825.0], [1906.0, 5626.0], [1914.0, 5464.5], [1918.0, 5365.0], [1894.0, 7973.0], [1890.0, 7633.0], [1898.0, 5676.5], [1902.0, 6646.0], [1970.0, 6897.0], [1974.0, 6413.0], [1934.0, 7237.0], [1930.0, 6535.0], [1982.0, 6364.0], [1954.0, 6856.0], [1958.0, 7058.5], [1978.0, 6554.0], [1938.0, 6861.0], [1946.0, 5002.5], [1942.0, 6742.0], [1950.0, 7349.0], [1922.0, 6765.0], [1926.0, 7667.0], [1962.0, 5764.0], [1994.0, 8802.0], [2034.0, 4960.5], [1990.0, 4433.5], [1998.0, 6581.0], [2002.0, 5849.666666666667], [2010.0, 6214.0], [2006.0, 7106.0], [2014.0, 6381.0], [1986.0, 6336.0], [2022.0, 4266.0], [2038.0, 6315.0], [2046.0, 6081.0], [2018.0, 6222.0], [2042.0, 6262.0], [2030.0, 6603.0], [2026.0, 6375.0], [2060.0, 6083.0], [2052.0, 7041.0], [2068.0, 5930.0], [2076.0, 5958.0], [2108.0, 6316.0], [2100.0, 5816.5], [2092.0, 6502.0], [2084.0, 5863.0], [2140.0, 4692.0], [2164.0, 5381.0], [2172.0, 5591.5], [2116.0, 6356.0], [2124.0, 5912.0], [2132.0, 5986.0], [2156.0, 5981.0], [2148.0, 5923.0], [2196.0, 6173.5], [2188.0, 5600.0], [2180.0, 4971.333333333333], [2236.0, 5215.0], [2220.0, 4619.5], [2276.0, 5059.0], [2284.0, 4976.0], [2292.0, 5007.0], [2300.0, 4721.0], [2244.0, 5221.0], [2252.0, 5134.0], [2260.0, 5298.0], [2268.0, 4993.0], [2212.0, 4649.0], [2316.0, 5052.0], [2308.0, 5386.0], [2324.0, 4728.5], [2332.0, 4712.666666666667], [2372.0, 4524.0], [2380.0, 4462.5], [2340.0, 4819.5], [2348.0, 4809.0], [2356.0, 5327.0], [2364.0, 4429.0], [2165.0, 4284.5], [2109.0, 6687.0], [2101.0, 6270.0], [2093.0, 5847.0], [2173.0, 6679.0], [2117.0, 6286.0], [2125.0, 6264.0], [2133.0, 5851.0], [2157.0, 5647.0], [2149.0, 6185.0], [2061.0, 8007.0], [2141.0, 6220.0], [2205.0, 5309.333333333333], [2181.0, 5448.0], [2189.0, 5459.0], [2237.0, 6148.0], [2197.0, 6911.0], [2245.0, 5567.5], [2293.0, 5827.0], [2301.0, 4767.0], [2285.0, 4978.0], [2277.0, 5067.0], [2261.0, 5227.0], [2253.0, 5132.0], [2269.0, 4438.285714285715], [2213.0, 5463.0], [2229.0, 4988.666666666667], [2317.0, 6080.0], [2325.0, 4775.5], [2309.0, 5509.0], [2333.0, 4702.0], [2341.0, 4613.0], [2357.0, 4542.0], [2365.0, 4817.0], [2373.0, 4469.0], [2381.0, 4380.0], [1027.0, 10612.0], [1035.0, 7593.666666666667], [1043.0, 10545.0], [1051.0, 10487.5], [1055.0, 14333.0], [1031.0, 11112.0], [1039.0, 6801.0], [1067.0, 10343.0], [1059.0, 12834.0], [1071.0, 10355.0], [1087.0, 10679.0], [1083.0, 10903.0], [1079.0, 10425.0], [1139.0, 10024.0], [1103.0, 1981.0], [1099.0, 10942.0], [1095.0, 11145.0], [1143.0, 10052.0], [1147.0, 9947.0], [1127.0, 10321.0], [1131.0, 10274.0], [1135.0, 10721.0], [1107.0, 10589.5], [1111.0, 10160.0], [1119.0, 10098.0], [1091.0, 10384.0], [1183.0, 10023.0], [1203.0, 5232.0], [1175.0, 5149.0], [1171.0, 10583.0], [1179.0, 9881.0], [1155.0, 10909.0], [1159.0, 10079.0], [1163.0, 10603.0], [1167.0, 11259.0], [1215.0, 9977.0], [1187.0, 10312.0], [1191.0, 9921.0], [1195.0, 9811.0], [1199.0, 10021.0], [1211.0, 10201.0], [1227.0, 4662.333333333334], [1231.0, 4107.25], [1243.0, 9517.0], [1247.0, 9538.0], [1219.0, 9734.0], [1223.0, 11036.0], [1255.0, 4815.0], [1251.0, 9521.0], [1263.0, 10253.5], [1279.0, 9322.0], [1275.0, 9398.0], [1271.0, 5864.0], [1267.0, 6182.0], [1235.0, 7158.0], [1239.0, 9980.0], [1335.0, 7244.333333333333], [1291.0, 10082.0], [1283.0, 10243.0], [1295.0, 9669.0], [1343.0, 5855.0], [1315.0, 9186.0], [1319.0, 9636.0], [1323.0, 9987.5], [1339.0, 4215.75], [1331.0, 9074.0], [1299.0, 9237.0], [1303.0, 4108.75], [1307.0, 5790.5], [1311.0, 5814.0], [1359.0, 8937.0], [1399.0, 6085.5], [1375.0, 4761.0], [1351.0, 9035.0], [1355.0, 5840.0], [1387.0, 6026.5], [1379.0, 9247.0], [1403.0, 3029.0], [1395.0, 5748.0], [1391.0, 6270.5], [1363.0, 9016.0], [1371.0, 2462.0], [1367.0, 8935.0], [1415.0, 8702.0], [1459.0, 5129.0], [1411.0, 5867.5], [1423.0, 9181.0], [1439.0, 4639.333333333333], [1427.0, 5800.5], [1431.0, 8801.0], [1435.0, 8731.0], [1463.0, 5074.0], [1467.0, 7081.666666666667], [1443.0, 4725.333333333334], [1447.0, 8870.0], [1451.0, 9014.0], [1455.0, 7339.666666666667], [1471.0, 8553.0], [1479.0, 5831.5], [1499.0, 5040.666666666667], [1503.0, 8394.0], [1475.0, 8512.0], [1483.0, 8544.0], [1487.0, 6352.5], [1531.0, 4731.333333333333], [1527.0, 9124.5], [1523.0, 9205.0], [1507.0, 8736.0], [1511.0, 8598.0], [1519.0, 8271.0], [1515.0, 8658.0], [1535.0, 8654.0], [1491.0, 8428.0], [1495.0, 5514.5], [1543.0, 8281.0], [1547.0, 5560.5], [1567.0, 9137.0], [1563.0, 8711.0], [1559.0, 8184.0], [1555.0, 9306.0], [1571.0, 5407.5], [1599.0, 8172.0], [1595.0, 8349.0], [1591.0, 8816.0], [1551.0, 8065.0], [1587.0, 7978.0], [1579.0, 4815.666666666667], [1575.0, 7993.0], [1583.0, 8618.0], [1611.0, 4811.333333333333], [1655.0, 4775.333333333333], [1631.0, 8347.5], [1627.0, 7991.0], [1623.0, 7801.0], [1619.0, 7969.5], [1603.0, 5958.0], [1607.0, 8490.0], [1615.0, 7828.0], [1651.0, 7685.0], [1635.0, 5535.0], [1639.0, 8337.0], [1643.0, 5424.0], [1647.0, 8186.0], [1659.0, 5309.5], [1663.0, 7761.0], [1671.0, 8318.0], [1675.0, 6303.5], [1667.0, 8126.0], [1695.0, 7647.0], [1691.0, 7907.0], [1687.0, 8037.0], [1683.0, 7555.0], [1679.0, 5692.0], [1715.0, 7795.0], [1719.0, 7533.0], [1723.0, 8024.0], [1727.0, 7422.0], [1699.0, 8837.0], [1703.0, 3167.0], [1707.0, 4560.0], [1711.0, 7840.0], [1739.0, 7660.0], [1783.0, 5238.5], [1731.0, 7835.0], [1759.0, 7325.0], [1755.0, 8481.0], [1751.0, 7615.5], [1735.0, 4259.0], [1743.0, 8336.0], [1779.0, 7298.0], [1763.0, 7631.0], [1791.0, 7421.0], [1787.0, 7932.5], [1767.0, 5360.5], [1775.0, 5962.666666666667], [1771.0, 9860.0], [1803.0, 5184.0], [1851.0, 8358.0], [1799.0, 7390.0], [1795.0, 7274.0], [1807.0, 7728.0], [1843.0, 7121.0], [1815.0, 7311.0], [1811.0, 7578.0], [1823.0, 7833.0], [1831.0, 5018.333333333333], [1839.0, 5081.333333333333], [1835.0, 7350.0], [1855.0, 7026.0], [1827.0, 7005.0], [1847.0, 7328.0], [1863.0, 7209.0], [1871.0, 5600.0], [1887.0, 6694.0], [1883.0, 7366.0], [1879.0, 7661.0], [1875.0, 7646.0], [1859.0, 5916.5], [1867.0, 6854.0], [1919.0, 5117.666666666667], [1915.0, 6821.0], [1911.0, 6623.0], [1907.0, 6672.0], [1895.0, 5042.0], [1903.0, 6870.0], [1899.0, 7305.0], [1935.0, 6958.0], [1971.0, 6489.0], [1931.0, 6530.0], [1975.0, 8346.0], [1959.0, 5230.0], [1983.0, 6553.0], [1955.0, 7171.0], [1927.0, 4783.666666666667], [1939.0, 7008.0], [1943.0, 7496.0], [1951.0, 7186.0], [1923.0, 7027.0], [1963.0, 4961.5], [2015.0, 7094.0], [2007.0, 6218.0], [2003.0, 7273.0], [2011.0, 6386.0], [1987.0, 7139.0], [2047.0, 4934.5], [2019.0, 6433.0], [2023.0, 5165.666666666667], [2027.0, 6855.0], [2031.0, 6287.0], [2043.0, 6860.0], [2039.0, 6791.0], [2035.0, 6796.0], [1995.0, 6595.0], [1991.0, 6531.0], [2062.0, 6259.0], [2166.0, 5157.0], [2054.0, 6143.5], [2078.0, 6559.5], [2110.0, 5747.0], [2102.0, 6555.0], [2094.0, 6273.0], [2086.0, 5966.0], [2174.0, 5524.0], [2142.0, 6234.0], [2134.0, 5724.0], [2126.0, 5881.0], [2118.0, 6692.0], [2158.0, 6777.0], [2150.0, 5666.0], [2190.0, 5440.0], [2222.0, 5556.0], [2230.0, 5185.0], [2214.0, 4736.5], [2182.0, 5688.0], [2198.0, 6200.0], [2206.0, 5481.0], [2278.0, 4994.0], [2286.0, 5807.0], [2294.0, 5722.0], [2302.0, 4740.0], [2246.0, 6011.0], [2254.0, 5923.0], [2270.0, 5406.0], [2310.0, 4812.5], [2366.0, 4457.0], [2318.0, 5000.0], [2326.0, 4798.0], [2334.0, 5623.0], [2382.0, 4701.666666666667], [2350.0, 4793.0], [2358.0, 4609.0], [2063.0, 6700.0], [2055.0, 7377.0], [2071.0, 6092.666666666667], [2079.0, 6219.0], [2111.0, 6732.0], [2103.0, 5882.0], [2095.0, 6173.0], [2087.0, 5891.0], [2143.0, 4960.0], [2159.0, 4767.0], [2175.0, 5510.0], [2119.0, 7399.0], [2127.0, 5695.0], [2135.0, 5651.0], [2151.0, 6123.0], [2207.0, 4805.5], [2191.0, 4813.0], [2183.0, 5968.0], [2239.0, 6044.5], [2199.0, 4167.5], [2303.0, 5301.0], [2295.0, 5738.0], [2287.0, 4829.0], [2279.0, 4647.0], [2247.0, 4720.0], [2255.0, 5130.0], [2263.0, 4674.25], [2271.0, 4602.5], [2215.0, 5071.5], [2223.0, 5397.0], [2231.0, 5136.5], [2319.0, 5946.0], [2311.0, 4859.0], [2327.0, 5043.0], [2335.0, 4664.75], [2351.0, 5254.0], [2343.0, 4969.5], [2359.0, 4720.0], [2367.0, 4701.0], [2375.0, 4471.0], [2383.0, 4404.0], [1.0, 5162.666666666667]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[992.9506234413999, 6621.84912718205]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2387.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 39374.0, "minX": 1.699972842E12, "maxY": 195056.0, "series": [{"data": [[1.699972845E12, 59405.0], [1.699972844E12, 66421.0], [1.699972843E12, 184847.0], [1.699972848E12, 57064.0], [1.699972847E12, 73435.0], [1.699972846E12, 63189.0], [1.69997285E12, 65949.0], [1.699972849E12, 73940.0], [1.699972853E12, 71590.0], [1.699972852E12, 75747.0], [1.699972851E12, 70198.0], [1.699972856E12, 70624.0], [1.699972855E12, 71115.0], [1.699972854E12, 82275.0], [1.699972858E12, 72042.0], [1.699972857E12, 68315.0], [1.699972861E12, 73459.0], [1.69997286E12, 70656.0], [1.699972859E12, 65022.0], [1.699972864E12, 97794.0], [1.699972842E12, 195056.0], [1.699972863E12, 72507.0], [1.699972862E12, 75292.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.699972845E12, 40990.0], [1.699972844E12, 45831.0], [1.699972843E12, 127572.0], [1.699972848E12, 39374.0], [1.699972847E12, 50670.0], [1.699972846E12, 43614.0], [1.69997285E12, 45504.0], [1.699972849E12, 51030.0], [1.699972853E12, 49405.0], [1.699972852E12, 52257.0], [1.699972851E12, 48448.0], [1.699972856E12, 48729.0], [1.699972855E12, 49075.0], [1.699972854E12, 56755.0], [1.699972858E12, 49712.0], [1.699972857E12, 47145.0], [1.699972861E12, 50694.0], [1.69997286E12, 48761.0], [1.699972859E12, 44867.0], [1.699972864E12, 67489.0], [1.699972842E12, 134591.0], [1.699972863E12, 50032.0], [1.699972862E12, 51947.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699972864E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 15.517985611510776, "minX": 1.699972842E12, "maxY": 15291.468899521533, "series": [{"data": [[1.699972845E12, 1556.6062992125985], [1.699972844E12, 681.7957746478874], [1.699972843E12, 41.863291139240495], [1.699972848E12, 3732.59836065574], [1.699972847E12, 3089.5222929936313], [1.699972846E12, 2380.637037037037], [1.69997285E12, 5331.042553191485], [1.699972849E12, 4513.012658227847], [1.699972853E12, 7393.882352941176], [1.699972852E12, 6696.691358024689], [1.699972851E12, 6050.853333333334], [1.699972856E12, 9385.649006622525], [1.699972855E12, 8669.769736842105], [1.699972854E12, 8038.710227272726], [1.699972858E12, 10826.168831168832], [1.699972857E12, 10161.171232876708], [1.699972861E12, 12840.738853503186], [1.69997286E12, 12286.476821192053], [1.699972859E12, 11536.525179856118], [1.699972864E12, 15291.468899521533], [1.699972842E12, 15.517985611510776], [1.699972863E12, 14333.42580645161], [1.699972862E12, 13619.60248447205]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699972864E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 15.021582733812956, "minX": 1.699972842E12, "maxY": 15291.43062200957, "series": [{"data": [[1.699972845E12, 1555.9921259842522], [1.699972844E12, 681.7464788732395], [1.699972843E12, 41.76962025316456], [1.699972848E12, 3732.540983606558], [1.699972847E12, 3089.490445859872], [1.699972846E12, 2380.57037037037], [1.69997285E12, 5330.9361702127635], [1.699972849E12, 4512.962025316455], [1.699972853E12, 7393.738562091504], [1.699972852E12, 6696.672839506173], [1.699972851E12, 6050.766666666668], [1.699972856E12, 9385.576158940397], [1.699972855E12, 8669.71710526316], [1.699972854E12, 8038.642045454545], [1.699972858E12, 10826.155844155846], [1.699972857E12, 10161.095890410958], [1.699972861E12, 12840.694267515926], [1.69997286E12, 12286.430463576162], [1.699972859E12, 11536.474820143885], [1.699972864E12, 15291.43062200957], [1.699972842E12, 15.021582733812956], [1.699972863E12, 14333.361290322575], [1.699972862E12, 13619.534161490683]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699972864E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.6387096774193548, "minX": 1.699972842E12, "maxY": 15.267942583732063, "series": [{"data": [[1.699972845E12, 1.6141732283464565], [1.699972844E12, 1.1056338028169017], [1.699972843E12, 1.1518987341772156], [1.699972848E12, 1.4672131147540979], [1.699972847E12, 1.5605095541401275], [1.699972846E12, 1.2296296296296307], [1.69997285E12, 1.354609929078015], [1.699972849E12, 1.3607594936708862], [1.699972853E12, 1.2026143790849664], [1.699972852E12, 1.4876543209876547], [1.699972851E12, 1.473333333333334], [1.699972856E12, 0.6887417218543048], [1.699972855E12, 1.4671052631578954], [1.699972854E12, 1.079545454545455], [1.699972858E12, 0.9545454545454549], [1.699972857E12, 0.6849315068493154], [1.699972861E12, 1.3821656050955418], [1.69997286E12, 1.0463576158940393], [1.699972859E12, 0.9640287769784178], [1.699972864E12, 15.267942583732063], [1.699972842E12, 4.925659472422061], [1.699972863E12, 0.6387096774193548], [1.699972862E12, 0.8260869565217392]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699972864E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.699972842E12, "maxY": 17561.0, "series": [{"data": [[1.699972845E12, 2382.0], [1.699972844E12, 1413.0], [1.699972843E12, 442.0], [1.699972848E12, 5199.0], [1.699972847E12, 4481.0], [1.699972846E12, 3397.0], [1.69997285E12, 6978.0], [1.699972849E12, 6104.0], [1.699972853E12, 9860.0], [1.699972852E12, 8802.0], [1.699972851E12, 8052.0], [1.699972856E12, 12833.0], [1.699972855E12, 10660.0], [1.699972854E12, 9556.0], [1.699972858E12, 14333.0], [1.699972857E12, 12333.0], [1.699972861E12, 14538.0], [1.69997286E12, 14045.0], [1.699972859E12, 13611.0], [1.699972864E12, 17561.0], [1.699972842E12, 119.0], [1.699972863E12, 16926.0], [1.699972862E12, 15552.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.699972845E12, 1990.2], [1.699972844E12, 1120.3000000000002], [1.699972843E12, 129.0], [1.699972848E12, 4227.1], [1.699972847E12, 3598.000000000001], [1.699972846E12, 2841.6], [1.69997285E12, 6072.599999999999], [1.699972849E12, 5011.2], [1.699972853E12, 8052.8], [1.699972852E12, 7246.1], [1.699972851E12, 6758.1], [1.699972856E12, 10071.0], [1.699972855E12, 9278.2], [1.699972854E12, 8656.7], [1.699972858E12, 11527.0], [1.699972857E12, 10911.1], [1.699972861E12, 13396.0], [1.69997286E12, 13045.0], [1.699972859E12, 12352.0], [1.699972864E12, 15878.0], [1.699972842E12, 19.19999999999999], [1.699972863E12, 15158.6], [1.699972862E12, 14283.4]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.699972845E12, 2376.12], [1.699972844E12, 1391.0699999999997], [1.699972843E12, 326.84000000000094], [1.699972848E12, 5125.169999999998], [1.699972847E12, 4254.219999999995], [1.699972846E12, 3372.519999999999], [1.69997285E12, 6969.18], [1.699972849E12, 5898.089999999999], [1.699972853E12, 9612.140000000003], [1.699972852E12, 8558.820000000002], [1.699972851E12, 7855.140000000003], [1.699972856E12, 12501.239999999994], [1.699972855E12, 10648.34], [1.699972854E12, 9527.51], [1.699972858E12, 13508.549999999983], [1.699972857E12, 12167.560000000001], [1.699972861E12, 14346.019999999995], [1.69997286E12, 13830.239999999996], [1.699972859E12, 13330.599999999997], [1.699972864E12, 17436.8], [1.699972842E12, 107.82], [1.699972863E12, 16738.96], [1.699972862E12, 15411.259999999998]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.699972845E12, 2163.7999999999997], [1.699972844E12, 1269.1999999999998], [1.699972843E12, 188.9999999999999], [1.699972848E12, 4497.2], [1.699972847E12, 3844.2999999999997], [1.699972846E12, 3030.2], [1.69997285E12, 6391.200000000001], [1.699972849E12, 5398.0999999999985], [1.699972853E12, 8434.599999999999], [1.699972852E12, 7626.25], [1.699972851E12, 6968.5999999999985], [1.699972856E12, 10488.6], [1.699972855E12, 9439.65], [1.699972854E12, 9133.35], [1.699972858E12, 11929.75], [1.699972857E12, 11385.85], [1.699972861E12, 13523.1], [1.69997286E12, 13416.6], [1.699972859E12, 12709.0], [1.699972864E12, 16339.5], [1.699972842E12, 84.0], [1.699972863E12, 15529.8], [1.699972862E12, 14517.9]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.699972845E12, 992.0], [1.699972844E12, 152.0], [1.699972843E12, 5.0], [1.699972848E12, 3119.0], [1.699972847E12, 2480.0], [1.699972846E12, 1710.0], [1.69997285E12, 4536.0], [1.699972849E12, 3915.0], [1.699972853E12, 6646.0], [1.699972852E12, 5983.0], [1.699972851E12, 5273.0], [1.699972856E12, 8679.0], [1.699972855E12, 7993.0], [1.699972854E12, 7344.0], [1.699972858E12, 10091.0], [1.699972857E12, 9389.0], [1.699972861E12, 12071.0], [1.69997286E12, 11527.0], [1.699972859E12, 10800.0], [1.699972864E12, 14270.0], [1.699972842E12, 5.0], [1.699972863E12, 13606.0], [1.699972862E12, 12912.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.699972845E12, 1551.0], [1.699972844E12, 662.0], [1.699972843E12, 8.0], [1.699972848E12, 3702.5], [1.699972847E12, 3047.0], [1.699972846E12, 2367.0], [1.69997285E12, 5211.0], [1.699972849E12, 4436.5], [1.699972853E12, 7295.0], [1.699972852E12, 6600.0], [1.699972851E12, 5935.0], [1.699972856E12, 9242.0], [1.699972855E12, 8597.0], [1.699972854E12, 7955.5], [1.699972858E12, 10748.0], [1.699972857E12, 10023.5], [1.699972861E12, 12785.0], [1.69997286E12, 12162.0], [1.699972859E12, 11431.0], [1.699972864E12, 15225.0], [1.699972842E12, 8.0], [1.699972863E12, 14210.0], [1.699972862E12, 13510.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699972864E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 122.0, "maxY": 15225.0, "series": [{"data": [[135.0, 2367.0], [142.0, 662.0], [141.0, 5211.0], [139.0, 11431.0], [150.0, 5935.0], [151.0, 11542.5], [146.0, 10023.5], [157.0, 8276.0], [158.0, 4436.5], [153.0, 7295.0], [152.0, 8597.0], [154.0, 10748.0], [155.0, 14210.0], [162.0, 6600.0], [161.0, 13510.0], [176.0, 7955.5], [209.0, 15225.0], [395.0, 8.0], [417.0, 8.0], [122.0, 3702.5], [127.0, 1551.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 417.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 122.0, "maxY": 15225.0, "series": [{"data": [[135.0, 2367.0], [142.0, 662.0], [141.0, 5211.0], [139.0, 11431.0], [150.0, 5935.0], [151.0, 11542.5], [146.0, 10023.0], [157.0, 8276.0], [158.0, 4436.5], [153.0, 7295.0], [152.0, 8597.0], [154.0, 10748.0], [155.0, 14210.0], [162.0, 6600.0], [161.0, 13510.0], [176.0, 7955.5], [209.0, 15225.0], [395.0, 8.0], [417.0, 8.0], [122.0, 3702.5], [127.0, 1551.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 417.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 39.0, "minX": 1.699972841E12, "maxY": 666.0, "series": [{"data": [[1.699972845E12, 501.0], [1.699972844E12, 529.0], [1.699972843E12, 666.0], [1.699972848E12, 500.0], [1.699972847E12, 500.0], [1.699972846E12, 501.0], [1.699972849E12, 389.0], [1.699972842E12, 385.0], [1.699972841E12, 39.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699972849E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 122.0, "minX": 1.699972842E12, "maxY": 417.0, "series": [{"data": [[1.699972845E12, 127.0], [1.699972844E12, 142.0], [1.699972843E12, 395.0], [1.699972848E12, 122.0], [1.699972847E12, 157.0], [1.699972846E12, 135.0], [1.69997285E12, 141.0], [1.699972849E12, 158.0], [1.699972853E12, 153.0], [1.699972852E12, 162.0], [1.699972851E12, 150.0], [1.699972856E12, 151.0], [1.699972855E12, 152.0], [1.699972854E12, 176.0], [1.699972858E12, 154.0], [1.699972857E12, 146.0], [1.699972861E12, 157.0], [1.69997286E12, 151.0], [1.699972859E12, 139.0], [1.699972864E12, 209.0], [1.699972842E12, 417.0], [1.699972863E12, 155.0], [1.699972862E12, 161.0]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699972864E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 122.0, "minX": 1.699972842E12, "maxY": 417.0, "series": [{"data": [[1.699972845E12, 127.0], [1.699972844E12, 142.0], [1.699972843E12, 395.0], [1.699972848E12, 122.0], [1.699972847E12, 157.0], [1.699972846E12, 135.0], [1.69997285E12, 141.0], [1.699972849E12, 158.0], [1.699972853E12, 153.0], [1.699972852E12, 162.0], [1.699972851E12, 150.0], [1.699972856E12, 151.0], [1.699972855E12, 152.0], [1.699972854E12, 176.0], [1.699972858E12, 154.0], [1.699972857E12, 146.0], [1.699972861E12, 157.0], [1.69997286E12, 151.0], [1.699972859E12, 139.0], [1.699972864E12, 209.0], [1.699972842E12, 417.0], [1.699972863E12, 155.0], [1.699972862E12, 161.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699972864E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 122.0, "minX": 1.699972842E12, "maxY": 417.0, "series": [{"data": [[1.699972845E12, 127.0], [1.699972844E12, 142.0], [1.699972843E12, 395.0], [1.699972848E12, 122.0], [1.699972847E12, 157.0], [1.699972846E12, 135.0], [1.69997285E12, 141.0], [1.699972849E12, 158.0], [1.699972853E12, 153.0], [1.699972852E12, 162.0], [1.699972851E12, 150.0], [1.699972856E12, 151.0], [1.699972855E12, 152.0], [1.699972854E12, 176.0], [1.699972858E12, 154.0], [1.699972857E12, 146.0], [1.699972861E12, 157.0], [1.69997286E12, 151.0], [1.699972859E12, 139.0], [1.699972864E12, 209.0], [1.699972842E12, 417.0], [1.699972863E12, 155.0], [1.699972862E12, 161.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699972864E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

