/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 16064.0, "series": [{"data": [[0.0, 5.0], [0.1, 5.0], [0.2, 5.0], [0.3, 5.0], [0.4, 5.0], [0.5, 5.0], [0.6, 6.0], [0.7, 6.0], [0.8, 6.0], [0.9, 6.0], [1.0, 6.0], [1.1, 6.0], [1.2, 6.0], [1.3, 6.0], [1.4, 6.0], [1.5, 6.0], [1.6, 6.0], [1.7, 6.0], [1.8, 6.0], [1.9, 6.0], [2.0, 6.0], [2.1, 6.0], [2.2, 6.0], [2.3, 6.0], [2.4, 6.0], [2.5, 6.0], [2.6, 6.0], [2.7, 6.0], [2.8, 6.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 6.0], [3.3, 6.0], [3.4, 6.0], [3.5, 7.0], [3.6, 7.0], [3.7, 7.0], [3.8, 7.0], [3.9, 7.0], [4.0, 7.0], [4.1, 7.0], [4.2, 7.0], [4.3, 7.0], [4.4, 7.0], [4.5, 7.0], [4.6, 7.0], [4.7, 7.0], [4.8, 7.0], [4.9, 7.0], [5.0, 7.0], [5.1, 7.0], [5.2, 7.0], [5.3, 7.0], [5.4, 7.0], [5.5, 7.0], [5.6, 7.0], [5.7, 7.0], [5.8, 7.0], [5.9, 7.0], [6.0, 7.0], [6.1, 7.0], [6.2, 7.0], [6.3, 7.0], [6.4, 7.0], [6.5, 7.0], [6.6, 7.0], [6.7, 7.0], [6.8, 7.0], [6.9, 7.0], [7.0, 7.0], [7.1, 7.0], [7.2, 7.0], [7.3, 7.0], [7.4, 7.0], [7.5, 7.0], [7.6, 7.0], [7.7, 7.0], [7.8, 7.0], [7.9, 7.0], [8.0, 7.0], [8.1, 7.0], [8.2, 7.0], [8.3, 7.0], [8.4, 7.0], [8.5, 7.0], [8.6, 7.0], [8.7, 7.0], [8.8, 7.0], [8.9, 7.0], [9.0, 7.0], [9.1, 7.0], [9.2, 7.0], [9.3, 8.0], [9.4, 8.0], [9.5, 8.0], [9.6, 8.0], [9.7, 8.0], [9.8, 8.0], [9.9, 8.0], [10.0, 8.0], [10.1, 8.0], [10.2, 8.0], [10.3, 8.0], [10.4, 8.0], [10.5, 8.0], [10.6, 8.0], [10.7, 8.0], [10.8, 8.0], [10.9, 8.0], [11.0, 8.0], [11.1, 8.0], [11.2, 8.0], [11.3, 8.0], [11.4, 8.0], [11.5, 8.0], [11.6, 8.0], [11.7, 8.0], [11.8, 8.0], [11.9, 8.0], [12.0, 8.0], [12.1, 8.0], [12.2, 8.0], [12.3, 8.0], [12.4, 8.0], [12.5, 8.0], [12.6, 8.0], [12.7, 8.0], [12.8, 8.0], [12.9, 8.0], [13.0, 8.0], [13.1, 8.0], [13.2, 8.0], [13.3, 8.0], [13.4, 8.0], [13.5, 8.0], [13.6, 9.0], [13.7, 9.0], [13.8, 9.0], [13.9, 9.0], [14.0, 9.0], [14.1, 9.0], [14.2, 9.0], [14.3, 9.0], [14.4, 9.0], [14.5, 9.0], [14.6, 9.0], [14.7, 9.0], [14.8, 9.0], [14.9, 9.0], [15.0, 9.0], [15.1, 9.0], [15.2, 9.0], [15.3, 9.0], [15.4, 9.0], [15.5, 9.0], [15.6, 9.0], [15.7, 9.0], [15.8, 9.0], [15.9, 9.0], [16.0, 9.0], [16.1, 9.0], [16.2, 9.0], [16.3, 9.0], [16.4, 9.0], [16.5, 10.0], [16.6, 10.0], [16.7, 10.0], [16.8, 10.0], [16.9, 10.0], [17.0, 10.0], [17.1, 10.0], [17.2, 10.0], [17.3, 10.0], [17.4, 10.0], [17.5, 10.0], [17.6, 10.0], [17.7, 10.0], [17.8, 10.0], [17.9, 10.0], [18.0, 10.0], [18.1, 10.0], [18.2, 10.0], [18.3, 10.0], [18.4, 10.0], [18.5, 11.0], [18.6, 11.0], [18.7, 11.0], [18.8, 11.0], [18.9, 11.0], [19.0, 11.0], [19.1, 11.0], [19.2, 11.0], [19.3, 11.0], [19.4, 11.0], [19.5, 11.0], [19.6, 12.0], [19.7, 12.0], [19.8, 12.0], [19.9, 12.0], [20.0, 12.0], [20.1, 12.0], [20.2, 12.0], [20.3, 12.0], [20.4, 12.0], [20.5, 12.0], [20.6, 13.0], [20.7, 13.0], [20.8, 13.0], [20.9, 14.0], [21.0, 14.0], [21.1, 14.0], [21.2, 14.0], [21.3, 15.0], [21.4, 15.0], [21.5, 16.0], [21.6, 16.0], [21.7, 16.0], [21.8, 17.0], [21.9, 17.0], [22.0, 18.0], [22.1, 19.0], [22.2, 19.0], [22.3, 20.0], [22.4, 21.0], [22.5, 22.0], [22.6, 24.0], [22.7, 26.0], [22.8, 28.0], [22.9, 31.0], [23.0, 32.0], [23.1, 35.0], [23.2, 39.0], [23.3, 41.0], [23.4, 45.0], [23.5, 52.0], [23.6, 58.0], [23.7, 58.0], [23.8, 60.0], [23.9, 61.0], [24.0, 64.0], [24.1, 65.0], [24.2, 66.0], [24.3, 70.0], [24.4, 72.0], [24.5, 80.0], [24.6, 83.0], [24.7, 85.0], [24.8, 87.0], [24.9, 90.0], [25.0, 92.0], [25.1, 95.0], [25.2, 103.0], [25.3, 103.0], [25.4, 105.0], [25.5, 115.0], [25.6, 119.0], [25.7, 126.0], [25.8, 131.0], [25.9, 143.0], [26.0, 167.0], [26.1, 174.0], [26.2, 201.0], [26.3, 206.0], [26.4, 237.0], [26.5, 255.0], [26.6, 265.0], [26.7, 287.0], [26.8, 302.0], [26.9, 337.0], [27.0, 352.0], [27.1, 369.0], [27.2, 382.0], [27.3, 387.0], [27.4, 410.0], [27.5, 422.0], [27.6, 438.0], [27.7, 476.0], [27.8, 489.0], [27.9, 549.0], [28.0, 556.0], [28.1, 576.0], [28.2, 585.0], [28.3, 609.0], [28.4, 636.0], [28.5, 687.0], [28.6, 701.0], [28.7, 717.0], [28.8, 740.0], [28.9, 754.0], [29.0, 776.0], [29.1, 799.0], [29.2, 816.0], [29.3, 834.0], [29.4, 869.0], [29.5, 919.0], [29.6, 941.0], [29.7, 950.0], [29.8, 964.0], [29.9, 985.0], [30.0, 993.0], [30.1, 1007.0], [30.2, 1022.0], [30.3, 1077.0], [30.4, 1083.0], [30.5, 1106.0], [30.6, 1117.0], [30.7, 1139.0], [30.8, 1161.0], [30.9, 1180.0], [31.0, 1191.0], [31.1, 1200.0], [31.2, 1207.0], [31.3, 1223.0], [31.4, 1233.0], [31.5, 1252.0], [31.6, 1270.0], [31.7, 1290.0], [31.8, 1324.0], [31.9, 1344.0], [32.0, 1374.0], [32.1, 1391.0], [32.2, 1404.0], [32.3, 1431.0], [32.4, 1485.0], [32.5, 1540.0], [32.6, 1551.0], [32.7, 1561.0], [32.8, 1588.0], [32.9, 1597.0], [33.0, 1605.0], [33.1, 1611.0], [33.2, 1644.0], [33.3, 1654.0], [33.4, 1665.0], [33.5, 1681.0], [33.6, 1711.0], [33.7, 1721.0], [33.8, 1732.0], [33.9, 1739.0], [34.0, 1764.0], [34.1, 1772.0], [34.2, 1786.0], [34.3, 1807.0], [34.4, 1823.0], [34.5, 1857.0], [34.6, 1903.0], [34.7, 1927.0], [34.8, 1944.0], [34.9, 1976.0], [35.0, 1983.0], [35.1, 1995.0], [35.2, 2006.0], [35.3, 2052.0], [35.4, 2069.0], [35.5, 2078.0], [35.6, 2129.0], [35.7, 2139.0], [35.8, 2154.0], [35.9, 2196.0], [36.0, 2227.0], [36.1, 2237.0], [36.2, 2250.0], [36.3, 2268.0], [36.4, 2298.0], [36.5, 2333.0], [36.6, 2342.0], [36.7, 2370.0], [36.8, 2411.0], [36.9, 2434.0], [37.0, 2463.0], [37.1, 2504.0], [37.2, 2545.0], [37.3, 2561.0], [37.4, 2571.0], [37.5, 2612.0], [37.6, 2621.0], [37.7, 2625.0], [37.8, 2630.0], [37.9, 2658.0], [38.0, 2683.0], [38.1, 2703.0], [38.2, 2752.0], [38.3, 2780.0], [38.4, 2797.0], [38.5, 2810.0], [38.6, 2850.0], [38.7, 2875.0], [38.8, 2885.0], [38.9, 2900.0], [39.0, 2907.0], [39.1, 2943.0], [39.2, 2962.0], [39.3, 3003.0], [39.4, 3017.0], [39.5, 3037.0], [39.6, 3062.0], [39.7, 3066.0], [39.8, 3095.0], [39.9, 3117.0], [40.0, 3133.0], [40.1, 3159.0], [40.2, 3179.0], [40.3, 3198.0], [40.4, 3235.0], [40.5, 3250.0], [40.6, 3269.0], [40.7, 3300.0], [40.8, 3314.0], [40.9, 3327.0], [41.0, 3351.0], [41.1, 3379.0], [41.2, 3415.0], [41.3, 3431.0], [41.4, 3455.0], [41.5, 3462.0], [41.6, 3478.0], [41.7, 3501.0], [41.8, 3521.0], [41.9, 3529.0], [42.0, 3545.0], [42.1, 3561.0], [42.2, 3582.0], [42.3, 3604.0], [42.4, 3615.0], [42.5, 3634.0], [42.6, 3661.0], [42.7, 3674.0], [42.8, 3681.0], [42.9, 3692.0], [43.0, 3721.0], [43.1, 3745.0], [43.2, 3783.0], [43.3, 3802.0], [43.4, 3824.0], [43.5, 3849.0], [43.6, 3877.0], [43.7, 3886.0], [43.8, 3900.0], [43.9, 3934.0], [44.0, 3950.0], [44.1, 3954.0], [44.2, 3974.0], [44.3, 3998.0], [44.4, 4021.0], [44.5, 4064.0], [44.6, 4076.0], [44.7, 4095.0], [44.8, 4109.0], [44.9, 4129.0], [45.0, 4139.0], [45.1, 4146.0], [45.2, 4167.0], [45.3, 4196.0], [45.4, 4231.0], [45.5, 4256.0], [45.6, 4274.0], [45.7, 4285.0], [45.8, 4302.0], [45.9, 4312.0], [46.0, 4336.0], [46.1, 4344.0], [46.2, 4357.0], [46.3, 4369.0], [46.4, 4380.0], [46.5, 4405.0], [46.6, 4419.0], [46.7, 4445.0], [46.8, 4457.0], [46.9, 4483.0], [47.0, 4504.0], [47.1, 4518.0], [47.2, 4538.0], [47.3, 4558.0], [47.4, 4571.0], [47.5, 4591.0], [47.6, 4595.0], [47.7, 4603.0], [47.8, 4610.0], [47.9, 4655.0], [48.0, 4672.0], [48.1, 4692.0], [48.2, 4731.0], [48.3, 4743.0], [48.4, 4773.0], [48.5, 4782.0], [48.6, 4791.0], [48.7, 4813.0], [48.8, 4840.0], [48.9, 4888.0], [49.0, 4904.0], [49.1, 4914.0], [49.2, 4936.0], [49.3, 4953.0], [49.4, 4961.0], [49.5, 4979.0], [49.6, 4989.0], [49.7, 5000.0], [49.8, 5008.0], [49.9, 5031.0], [50.0, 5046.0], [50.1, 5070.0], [50.2, 5103.0], [50.3, 5120.0], [50.4, 5142.0], [50.5, 5174.0], [50.6, 5191.0], [50.7, 5202.0], [50.8, 5234.0], [50.9, 5251.0], [51.0, 5262.0], [51.1, 5291.0], [51.2, 5296.0], [51.3, 5322.0], [51.4, 5336.0], [51.5, 5346.0], [51.6, 5384.0], [51.7, 5395.0], [51.8, 5402.0], [51.9, 5408.0], [52.0, 5420.0], [52.1, 5441.0], [52.2, 5448.0], [52.3, 5482.0], [52.4, 5495.0], [52.5, 5509.0], [52.6, 5541.0], [52.7, 5584.0], [52.8, 5607.0], [52.9, 5631.0], [53.0, 5654.0], [53.1, 5668.0], [53.2, 5687.0], [53.3, 5710.0], [53.4, 5732.0], [53.5, 5739.0], [53.6, 5755.0], [53.7, 5774.0], [53.8, 5816.0], [53.9, 5833.0], [54.0, 5855.0], [54.1, 5872.0], [54.2, 5882.0], [54.3, 5901.0], [54.4, 5925.0], [54.5, 5933.0], [54.6, 5939.0], [54.7, 5964.0], [54.8, 5994.0], [54.9, 6016.0], [55.0, 6033.0], [55.1, 6065.0], [55.2, 6077.0], [55.3, 6088.0], [55.4, 6119.0], [55.5, 6133.0], [55.6, 6149.0], [55.7, 6153.0], [55.8, 6178.0], [55.9, 6201.0], [56.0, 6211.0], [56.1, 6243.0], [56.2, 6279.0], [56.3, 6318.0], [56.4, 6335.0], [56.5, 6351.0], [56.6, 6385.0], [56.7, 6402.0], [56.8, 6430.0], [56.9, 6447.0], [57.0, 6453.0], [57.1, 6463.0], [57.2, 6495.0], [57.3, 6510.0], [57.4, 6523.0], [57.5, 6533.0], [57.6, 6547.0], [57.7, 6551.0], [57.8, 6558.0], [57.9, 6576.0], [58.0, 6597.0], [58.1, 6621.0], [58.2, 6626.0], [58.3, 6634.0], [58.4, 6657.0], [58.5, 6673.0], [58.6, 6687.0], [58.7, 6702.0], [58.8, 6716.0], [58.9, 6739.0], [59.0, 6761.0], [59.1, 6773.0], [59.2, 6789.0], [59.3, 6818.0], [59.4, 6828.0], [59.5, 6845.0], [59.6, 6884.0], [59.7, 6901.0], [59.8, 6941.0], [59.9, 6950.0], [60.0, 6955.0], [60.1, 6967.0], [60.2, 6980.0], [60.3, 7000.0], [60.4, 7032.0], [60.5, 7050.0], [60.6, 7059.0], [60.7, 7072.0], [60.8, 7098.0], [60.9, 7108.0], [61.0, 7117.0], [61.1, 7155.0], [61.2, 7163.0], [61.3, 7184.0], [61.4, 7195.0], [61.5, 7237.0], [61.6, 7244.0], [61.7, 7288.0], [61.8, 7295.0], [61.9, 7302.0], [62.0, 7324.0], [62.1, 7360.0], [62.2, 7370.0], [62.3, 7395.0], [62.4, 7408.0], [62.5, 7417.0], [62.6, 7446.0], [62.7, 7469.0], [62.8, 7500.0], [62.9, 7524.0], [63.0, 7551.0], [63.1, 7562.0], [63.2, 7573.0], [63.3, 7593.0], [63.4, 7602.0], [63.5, 7634.0], [63.6, 7651.0], [63.7, 7662.0], [63.8, 7670.0], [63.9, 7684.0], [64.0, 7704.0], [64.1, 7711.0], [64.2, 7737.0], [64.3, 7749.0], [64.4, 7773.0], [64.5, 7790.0], [64.6, 7814.0], [64.7, 7827.0], [64.8, 7840.0], [64.9, 7859.0], [65.0, 7885.0], [65.1, 7927.0], [65.2, 7940.0], [65.3, 7963.0], [65.4, 7985.0], [65.5, 8012.0], [65.6, 8018.0], [65.7, 8026.0], [65.8, 8046.0], [65.9, 8074.0], [66.0, 8094.0], [66.1, 8104.0], [66.2, 8121.0], [66.3, 8134.0], [66.4, 8145.0], [66.5, 8167.0], [66.6, 8183.0], [66.7, 8197.0], [66.8, 8206.0], [66.9, 8222.0], [67.0, 8236.0], [67.1, 8261.0], [67.2, 8284.0], [67.3, 8299.0], [67.4, 8321.0], [67.5, 8337.0], [67.6, 8353.0], [67.7, 8378.0], [67.8, 8422.0], [67.9, 8429.0], [68.0, 8434.0], [68.1, 8468.0], [68.2, 8498.0], [68.3, 8512.0], [68.4, 8567.0], [68.5, 8599.0], [68.6, 8631.0], [68.7, 8645.0], [68.8, 8661.0], [68.9, 8675.0], [69.0, 8686.0], [69.1, 8689.0], [69.2, 8710.0], [69.3, 8740.0], [69.4, 8763.0], [69.5, 8809.0], [69.6, 8845.0], [69.7, 8856.0], [69.8, 8868.0], [69.9, 8879.0], [70.0, 8905.0], [70.1, 8918.0], [70.2, 8929.0], [70.3, 8934.0], [70.4, 8947.0], [70.5, 8968.0], [70.6, 8989.0], [70.7, 9005.0], [70.8, 9041.0], [70.9, 9051.0], [71.0, 9058.0], [71.1, 9066.0], [71.2, 9074.0], [71.3, 9089.0], [71.4, 9109.0], [71.5, 9129.0], [71.6, 9145.0], [71.7, 9152.0], [71.8, 9172.0], [71.9, 9199.0], [72.0, 9206.0], [72.1, 9226.0], [72.2, 9244.0], [72.3, 9254.0], [72.4, 9263.0], [72.5, 9278.0], [72.6, 9302.0], [72.7, 9321.0], [72.8, 9325.0], [72.9, 9344.0], [73.0, 9363.0], [73.1, 9391.0], [73.2, 9406.0], [73.3, 9431.0], [73.4, 9440.0], [73.5, 9459.0], [73.6, 9472.0], [73.7, 9491.0], [73.8, 9526.0], [73.9, 9536.0], [74.0, 9551.0], [74.1, 9567.0], [74.2, 9580.0], [74.3, 9595.0], [74.4, 9606.0], [74.5, 9613.0], [74.6, 9638.0], [74.7, 9648.0], [74.8, 9679.0], [74.9, 9696.0], [75.0, 9726.0], [75.1, 9740.0], [75.2, 9749.0], [75.3, 9774.0], [75.4, 9798.0], [75.5, 9828.0], [75.6, 9842.0], [75.7, 9857.0], [75.8, 9872.0], [75.9, 9890.0], [76.0, 9918.0], [76.1, 9947.0], [76.2, 9963.0], [76.3, 9973.0], [76.4, 10003.0], [76.5, 10031.0], [76.6, 10034.0], [76.7, 10055.0], [76.8, 10063.0], [76.9, 10080.0], [77.0, 10095.0], [77.1, 10097.0], [77.2, 10111.0], [77.3, 10115.0], [77.4, 10127.0], [77.5, 10138.0], [77.6, 10146.0], [77.7, 10154.0], [77.8, 10173.0], [77.9, 10227.0], [78.0, 10231.0], [78.1, 10260.0], [78.2, 10292.0], [78.3, 10314.0], [78.4, 10325.0], [78.5, 10361.0], [78.6, 10369.0], [78.7, 10375.0], [78.8, 10422.0], [78.9, 10437.0], [79.0, 10450.0], [79.1, 10476.0], [79.2, 10496.0], [79.3, 10516.0], [79.4, 10530.0], [79.5, 10567.0], [79.6, 10623.0], [79.7, 10644.0], [79.8, 10661.0], [79.9, 10664.0], [80.0, 10718.0], [80.1, 10758.0], [80.2, 10768.0], [80.3, 10783.0], [80.4, 10797.0], [80.5, 10816.0], [80.6, 10829.0], [80.7, 10847.0], [80.8, 10905.0], [80.9, 10919.0], [81.0, 10965.0], [81.1, 11014.0], [81.2, 11034.0], [81.3, 11065.0], [81.4, 11085.0], [81.5, 11103.0], [81.6, 11126.0], [81.7, 11143.0], [81.8, 11152.0], [81.9, 11196.0], [82.0, 11219.0], [82.1, 11259.0], [82.2, 11266.0], [82.3, 11277.0], [82.4, 11288.0], [82.5, 11308.0], [82.6, 11313.0], [82.7, 11335.0], [82.8, 11344.0], [82.9, 11368.0], [83.0, 11401.0], [83.1, 11407.0], [83.2, 11445.0], [83.3, 11483.0], [83.4, 11498.0], [83.5, 11510.0], [83.6, 11556.0], [83.7, 11568.0], [83.8, 11591.0], [83.9, 11609.0], [84.0, 11655.0], [84.1, 11670.0], [84.2, 11698.0], [84.3, 11727.0], [84.4, 11739.0], [84.5, 11747.0], [84.6, 11776.0], [84.7, 11792.0], [84.8, 11808.0], [84.9, 11825.0], [85.0, 11860.0], [85.1, 11880.0], [85.2, 11889.0], [85.3, 11890.0], [85.4, 11914.0], [85.5, 11936.0], [85.6, 11951.0], [85.7, 11984.0], [85.8, 12019.0], [85.9, 12040.0], [86.0, 12055.0], [86.1, 12084.0], [86.2, 12098.0], [86.3, 12111.0], [86.4, 12117.0], [86.5, 12128.0], [86.6, 12141.0], [86.7, 12163.0], [86.8, 12173.0], [86.9, 12189.0], [87.0, 12213.0], [87.1, 12240.0], [87.2, 12256.0], [87.3, 12285.0], [87.4, 12304.0], [87.5, 12312.0], [87.6, 12330.0], [87.7, 12344.0], [87.8, 12365.0], [87.9, 12370.0], [88.0, 12384.0], [88.1, 12410.0], [88.2, 12430.0], [88.3, 12448.0], [88.4, 12463.0], [88.5, 12474.0], [88.6, 12484.0], [88.7, 12502.0], [88.8, 12533.0], [88.9, 12543.0], [89.0, 12555.0], [89.1, 12581.0], [89.2, 12596.0], [89.3, 12604.0], [89.4, 12609.0], [89.5, 12620.0], [89.6, 12649.0], [89.7, 12664.0], [89.8, 12680.0], [89.9, 12702.0], [90.0, 12713.0], [90.1, 12735.0], [90.2, 12742.0], [90.3, 12783.0], [90.4, 12813.0], [90.5, 12829.0], [90.6, 12846.0], [90.7, 12864.0], [90.8, 12875.0], [90.9, 12891.0], [91.0, 12902.0], [91.1, 12924.0], [91.2, 12947.0], [91.3, 12953.0], [91.4, 12972.0], [91.5, 13001.0], [91.6, 13026.0], [91.7, 13039.0], [91.8, 13045.0], [91.9, 13065.0], [92.0, 13073.0], [92.1, 13105.0], [92.2, 13125.0], [92.3, 13150.0], [92.4, 13156.0], [92.5, 13174.0], [92.6, 13213.0], [92.7, 13239.0], [92.8, 13246.0], [92.9, 13257.0], [93.0, 13267.0], [93.1, 13313.0], [93.2, 13334.0], [93.3, 13349.0], [93.4, 13354.0], [93.5, 13406.0], [93.6, 13440.0], [93.7, 13448.0], [93.8, 13488.0], [93.9, 13513.0], [94.0, 13540.0], [94.1, 13578.0], [94.2, 13593.0], [94.3, 13618.0], [94.4, 13639.0], [94.5, 13654.0], [94.6, 13665.0], [94.7, 13709.0], [94.8, 13735.0], [94.9, 13746.0], [95.0, 13750.0], [95.1, 13754.0], [95.2, 13779.0], [95.3, 13786.0], [95.4, 13797.0], [95.5, 13807.0], [95.6, 13821.0], [95.7, 13828.0], [95.8, 13837.0], [95.9, 13866.0], [96.0, 13901.0], [96.1, 13908.0], [96.2, 13957.0], [96.3, 13980.0], [96.4, 14001.0], [96.5, 14005.0], [96.6, 14025.0], [96.7, 14040.0], [96.8, 14052.0], [96.9, 14057.0], [97.0, 14074.0], [97.1, 14084.0], [97.2, 14108.0], [97.3, 14137.0], [97.4, 14176.0], [97.5, 14201.0], [97.6, 14215.0], [97.7, 14234.0], [97.8, 14245.0], [97.9, 14260.0], [98.0, 14279.0], [98.1, 14333.0], [98.2, 14390.0], [98.3, 14411.0], [98.4, 14436.0], [98.5, 14477.0], [98.6, 14525.0], [98.7, 14564.0], [98.8, 14594.0], [98.9, 14604.0], [99.0, 14667.0], [99.1, 14710.0], [99.2, 14770.0], [99.3, 14817.0], [99.4, 14867.0], [99.5, 14920.0], [99.6, 14980.0], [99.7, 15113.0], [99.8, 15280.0], [99.9, 15450.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1008.0, "series": [{"data": [[0.0, 1008.0], [100.0, 41.0], [200.0, 23.0], [300.0, 23.0], [400.0, 20.0], [500.0, 17.0], [600.0, 13.0], [700.0, 21.0], [800.0, 14.0], [900.0, 24.0], [1000.0, 16.0], [1100.0, 24.0], [1200.0, 28.0], [1300.0, 15.0], [1400.0, 11.0], [1500.0, 20.0], [1600.0, 26.0], [1700.0, 27.0], [1800.0, 14.0], [1900.0, 22.0], [2000.0, 17.0], [2100.0, 14.0], [2300.0, 13.0], [2200.0, 20.0], [2400.0, 14.0], [2500.0, 16.0], [2600.0, 24.0], [2700.0, 13.0], [2800.0, 19.0], [2900.0, 16.0], [3000.0, 21.0], [3100.0, 21.0], [3200.0, 15.0], [3300.0, 17.0], [3400.0, 23.0], [3500.0, 23.0], [3600.0, 27.0], [3700.0, 14.0], [3800.0, 20.0], [3900.0, 21.0], [4000.0, 18.0], [4100.0, 22.0], [4300.0, 28.0], [4200.0, 18.0], [4500.0, 28.0], [4600.0, 19.0], [4400.0, 20.0], [4700.0, 21.0], [4800.0, 13.0], [4900.0, 28.0], [5000.0, 19.0], [5100.0, 20.0], [5300.0, 22.0], [5200.0, 22.0], [5400.0, 27.0], [5600.0, 21.0], [5500.0, 12.0], [5700.0, 19.0], [5800.0, 22.0], [6000.0, 20.0], [6100.0, 22.0], [5900.0, 22.0], [6200.0, 14.0], [6300.0, 18.0], [6400.0, 21.0], [6600.0, 24.0], [6500.0, 34.0], [6800.0, 17.0], [6900.0, 26.0], [6700.0, 23.0], [7100.0, 24.0], [7000.0, 22.0], [7200.0, 17.0], [7300.0, 19.0], [7400.0, 18.0], [7600.0, 25.0], [7500.0, 23.0], [7900.0, 18.0], [7800.0, 21.0], [7700.0, 21.0], [8100.0, 28.0], [8000.0, 23.0], [8200.0, 22.0], [8400.0, 18.0], [8500.0, 12.0], [8700.0, 11.0], [8300.0, 18.0], [8600.0, 27.0], [9100.0, 24.0], [8900.0, 27.0], [8800.0, 20.0], [9000.0, 28.0], [9200.0, 26.0], [9400.0, 22.0], [9700.0, 19.0], [9600.0, 24.0], [9500.0, 25.0], [9300.0, 23.0], [9900.0, 17.0], [10000.0, 31.0], [9800.0, 21.0], [10200.0, 14.0], [10100.0, 29.0], [10300.0, 23.0], [10700.0, 20.0], [10500.0, 15.0], [10400.0, 17.0], [10600.0, 15.0], [10900.0, 13.0], [10800.0, 13.0], [11000.0, 16.0], [11100.0, 18.0], [11200.0, 21.0], [11600.0, 15.0], [11700.0, 23.0], [11300.0, 21.0], [11500.0, 17.0], [11400.0, 17.0], [12000.0, 20.0], [12100.0, 31.0], [11900.0, 15.0], [11800.0, 22.0], [12200.0, 16.0], [12700.0, 17.0], [12500.0, 24.0], [12300.0, 28.0], [12400.0, 23.0], [12600.0, 25.0], [12800.0, 27.0], [12900.0, 20.0], [13100.0, 20.0], [13000.0, 23.0], [13200.0, 21.0], [13300.0, 15.0], [13600.0, 18.0], [13700.0, 29.0], [13400.0, 15.0], [13800.0, 22.0], [13500.0, 16.0], [14000.0, 31.0], [13900.0, 17.0], [14300.0, 8.0], [14200.0, 23.0], [14100.0, 12.0], [14800.0, 8.0], [14700.0, 8.0], [14400.0, 12.0], [14600.0, 8.0], [14500.0, 13.0], [15000.0, 1.0], [15200.0, 3.0], [15300.0, 2.0], [14900.0, 6.0], [15100.0, 5.0], [15400.0, 2.0], [15500.0, 1.0], [16000.0, 1.0], [15900.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 16000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 183.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2707.0, "series": [{"data": [[0.0, 1115.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 183.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2707.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 6.513333333333329, "minX": 1.699972953E12, "maxY": 2085.6280487804884, "series": [{"data": [[1.699972973E12, 301.67605633802833], [1.699972972E12, 450.0838709677419], [1.699972971E12, 605.5769230769232], [1.699972954E12, 6.513333333333329], [1.699972975E12, 9.61111111111111], [1.699972953E12, 7.685015290519875], [1.699972974E12, 124.66981132075459], [1.699972957E12, 928.2302158273382], [1.699972956E12, 587.5906040268453], [1.699972955E12, 172.00487804878048], [1.69997296E12, 2008.127659574468], [1.699972959E12, 1654.8296296296298], [1.699972958E12, 1288.401408450704], [1.699972962E12, 1933.085106382979], [1.699972961E12, 2085.6280487804884], [1.699972965E12, 1489.590277777778], [1.699972964E12, 1635.594594594595], [1.699972963E12, 1786.098039215686], [1.699972968E12, 1027.1082802547771], [1.699972967E12, 1185.5687499999997], [1.699972966E12, 1341.592105263158], [1.69997297E12, 748.6230769230774], [1.699972969E12, 881.1259259259258]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699972975E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 8.770833333333336, "minX": 1.0, "maxY": 15475.0, "series": [{"data": [[2.0, 469.35483870967744], [3.0, 149.462962962963], [4.0, 100.55625], [5.0, 101.42857142857143], [6.0, 112.07042253521126], [7.0, 8.770833333333336], [8.0, 326.0537634408602], [9.0, 342.9333333333334], [10.0, 493.8709677419355], [11.0, 694.0], [12.0, 1095.0714285714284], [13.0, 22.0], [14.0, 7144.75], [15.0, 2980.0], [16.0, 4860.333333333333], [17.0, 5025.666666666667], [18.0, 5085.333333333333], [19.0, 4950.333333333333], [20.0, 2878.2], [21.0, 4795.666666666667], [22.0, 63.166666666666664], [23.0, 7292.0], [24.0, 52.333333333333336], [25.0, 4115.571428571428], [26.0, 2988.4], [27.0, 2392.1666666666665], [28.0, 7342.5], [29.0, 67.5], [30.0, 5752.0], [31.0, 4923.666666666667], [33.0, 4919.666666666667], [32.0, 14427.0], [34.0, 4888.333333333333], [37.0, 14568.0], [36.0, 14159.5], [39.0, 7229.5], [38.0, 14137.0], [41.0, 34.5], [40.0, 14052.0], [42.0, 2061.8571428571427], [43.0, 3571.5], [44.0, 32.0], [45.0, 14678.0], [47.0, 9497.0], [49.0, 4020.5], [48.0, 7434.5], [51.0, 2890.0], [50.0, 14084.0], [52.0, 3590.5], [53.0, 14022.0], [55.0, 14704.0], [54.0, 14740.0], [57.0, 9349.666666666666], [58.0, 4776.666666666667], [59.0, 14564.0], [61.0, 7042.0], [60.0, 7073.5], [62.0, 49.0], [63.0, 15066.0], [64.0, 39.0], [67.0, 14235.0], [66.0, 14092.0], [65.0, 14208.0], [69.0, 7590.5], [71.0, 14285.0], [70.0, 14594.0], [68.0, 13943.0], [73.0, 5063.666666666667], [72.0, 7485.0], [74.0, 4808.0], [75.0, 14193.0], [79.0, 6994.0], [78.0, 14203.0], [77.0, 14052.0], [76.0, 14535.0], [83.0, 13950.0], [82.0, 15392.0], [81.0, 14221.0], [87.0, 7766.5], [86.0, 14002.0], [85.0, 13864.0], [84.0, 14083.0], [88.0, 132.33333333333334], [90.0, 4680.333333333333], [89.0, 9460.666666666666], [91.0, 14505.0], [95.0, 9326.666666666666], [93.0, 15113.0], [92.0, 14891.0], [97.0, 173.0], [99.0, 14200.5], [98.0, 14300.0], [96.0, 14033.0], [101.0, 6937.5], [102.0, 14276.0], [100.0, 13806.0], [106.0, 13792.0], [105.0, 14520.0], [104.0, 14146.5], [109.0, 7007.0], [110.0, 13768.0], [108.0, 14057.5], [115.0, 14635.0], [114.0, 14975.0], [113.0, 14556.0], [119.0, 14011.0], [118.0, 14005.0], [117.0, 13864.0], [116.0, 13998.0], [123.0, 7104.5], [122.0, 7107.0], [121.0, 13894.0], [120.0, 14264.0], [124.0, 144.0], [127.0, 14205.0], [126.0, 13827.0], [125.0, 14139.5], [131.0, 5761.2], [130.0, 2851.8], [129.0, 148.0], [134.0, 4653.666666666667], [135.0, 7115.5], [133.0, 4687.0], [132.0, 13908.0], [128.0, 15348.0], [141.0, 7213.5], [142.0, 14249.0], [140.0, 13807.0], [139.0, 13792.0], [138.0, 14057.0], [137.0, 14990.0], [147.0, 6847.0], [151.0, 13754.0], [150.0, 13578.0], [149.0, 13750.0], [148.0, 14333.0], [146.0, 13963.5], [144.0, 13813.0], [153.0, 71.0], [159.0, 14201.0], [158.0, 14343.0], [157.0, 13751.0], [156.0, 13686.0], [154.0, 13574.0], [152.0, 13980.0], [167.0, 13957.0], [166.0, 13514.0], [165.0, 13507.0], [164.0, 13508.0], [163.0, 13709.0], [162.0, 14406.0], [161.0, 13664.0], [160.0, 13821.0], [175.0, 13662.0], [174.0, 13837.0], [173.0, 13789.0], [172.0, 14751.0], [171.0, 13751.0], [170.0, 14753.0], [169.0, 14689.0], [168.0, 13866.0], [178.0, 6845.0], [180.0, 2867.0], [179.0, 87.0], [183.0, 4685.333333333333], [182.0, 10222.75], [177.0, 14001.0], [176.0, 13779.0], [187.0, 6829.0], [188.0, 6936.0], [191.0, 7089.0], [190.0, 14582.0], [189.0, 13747.0], [186.0, 13746.0], [185.0, 13828.0], [184.0, 13735.0], [196.0, 4930.333333333333], [197.0, 6908.0], [195.0, 5196.333333333333], [194.0, 2872.0], [199.0, 13630.0], [198.0, 13319.0], [193.0, 13654.0], [192.0, 14496.0], [207.0, 13254.0], [206.0, 13233.0], [205.0, 13442.0], [204.0, 13233.0], [203.0, 13264.0], [202.0, 13267.0], [201.0, 13785.0], [200.0, 14238.0], [208.0, 190.5], [215.0, 13518.0], [214.0, 13683.0], [213.0, 13595.0], [212.0, 13488.0], [211.0, 14110.5], [209.0, 13246.0], [216.0, 7034.5], [223.0, 13806.0], [222.0, 13246.0], [221.0, 13710.0], [220.0, 13144.0], [219.0, 13150.0], [218.0, 13861.5], [226.0, 3841.75], [225.0, 4559.0], [229.0, 60.0], [228.0, 7049.5], [227.0, 6612.0], [230.0, 9124.0], [231.0, 13156.0], [224.0, 13257.0], [239.0, 4513.666666666667], [238.0, 13342.0], [237.0, 13110.0], [235.0, 13071.0], [234.0, 13146.0], [233.0, 13069.0], [232.0, 13078.0], [241.0, 6905.0], [240.0, 4750.666666666667], [247.0, 13239.0], [246.0, 13024.0], [245.0, 13210.0], [244.0, 13101.0], [243.0, 13714.5], [248.0, 4785.666666666667], [250.0, 9180.333333333334], [255.0, 13415.0], [254.0, 13804.0], [253.0, 13749.0], [252.0, 14390.0], [251.0, 13720.0], [270.0, 13052.0], [256.0, 4596.0], [258.0, 6920.0], [257.0, 13443.0], [259.0, 15475.0], [260.0, 7562.5], [263.0, 14001.0], [262.0, 13102.5], [271.0, 13039.0], [265.0, 13045.0], [264.0, 13320.0], [269.0, 13026.0], [268.0, 13041.0], [267.0, 13354.0], [266.0, 13315.0], [285.0, 4653.666666666667], [274.0, 6895.0], [272.0, 6889.5], [275.0, 4767.333333333333], [284.0, 13639.0], [276.0, 314.0], [278.0, 13826.0], [277.0, 13900.0], [279.0, 13638.0], [280.0, 203.0], [282.0, 201.0], [281.0, 13054.5], [283.0, 9953.0], [286.0, 6746.0], [287.0, 12953.0], [301.0, 4497.666666666667], [288.0, 4510.666666666667], [295.0, 12861.0], [294.0, 13073.5], [292.0, 13010.0], [289.0, 6682.5], [300.0, 4509.666666666667], [291.0, 12867.0], [290.0, 12862.0], [303.0, 13105.0], [302.0, 14056.0], [299.0, 13765.0], [298.0, 13260.0], [296.0, 13313.0], [318.0, 410.0], [314.0, 6790.0], [317.0, 6571.5], [319.0, 12737.5], [316.0, 12724.0], [315.0, 14477.0], [313.0, 13154.0], [312.0, 12909.0], [311.0, 14638.0], [305.0, 12990.0], [304.0, 13275.0], [307.0, 13028.0], [306.0, 13352.0], [310.0, 13455.0], [309.0, 12915.0], [334.0, 12927.0], [321.0, 4496.333333333333], [322.0, 6548.0], [326.0, 3746.75], [327.0, 12665.0], [320.0, 12704.0], [325.0, 6651.0], [324.0, 13001.0], [335.0, 12641.0], [328.0, 13403.0], [332.0, 12772.0], [323.0, 13371.0], [330.0, 12683.0], [329.0, 12922.0], [350.0, 12593.0], [345.0, 4525.0], [338.0, 6624.0], [346.0, 6452.0], [351.0, 12613.0], [348.0, 12569.0], [339.0, 13152.0], [347.0, 12845.0], [344.0, 13614.5], [342.0, 12831.5], [337.0, 12581.0], [336.0, 12664.0], [340.0, 12582.0], [366.0, 9267.0], [354.0, 6423.0], [360.0, 4747.0], [359.0, 8738.0], [353.0, 13735.0], [352.0, 12518.0], [357.0, 12491.0], [356.0, 12509.0], [361.0, 4730.0], [362.0, 4687.666666666666], [364.0, 7179.5], [355.0, 12604.0], [367.0, 13002.0], [363.0, 12699.0], [368.0, 6514.5], [372.0, 6803.5], [373.0, 4855.0], [376.0, 6369.0], [375.0, 6601.5], [374.0, 13171.0], [383.0, 6456.5], [382.0, 8490.666666666666], [380.0, 12428.0], [371.0, 13609.0], [370.0, 12564.0], [369.0, 12439.0], [378.0, 13039.0], [377.0, 12502.0], [396.0, 7079.0], [392.0, 6335.5], [390.0, 6955.0], [389.0, 12365.0], [388.0, 13547.0], [391.0, 12321.0], [385.0, 12422.0], [384.0, 12360.0], [387.0, 12427.0], [386.0, 12817.0], [395.0, 5279.333333333333], [397.0, 4709.666666666667], [399.0, 12296.0], [398.0, 12410.0], [394.0, 12995.0], [393.0, 12472.0], [415.0, 6644.0], [406.0, 4368.0], [405.0, 4621.0], [404.0, 12471.0], [411.0, 425.0], [413.0, 6838.0], [414.0, 6715.5], [412.0, 12417.0], [407.0, 12829.0], [400.0, 12259.0], [402.0, 13180.0], [401.0, 13334.0], [403.0, 12930.0], [410.0, 12537.0], [409.0, 12924.0], [408.0, 12249.0], [430.0, 12783.0], [431.0, 12660.0], [429.0, 12543.0], [428.0, 14058.0], [427.0, 12478.0], [426.0, 12334.0], [425.0, 12247.0], [424.0, 12649.0], [423.0, 12314.0], [416.0, 12362.0], [419.0, 12181.0], [418.0, 12430.5], [422.0, 12213.0], [421.0, 12302.5], [445.0, 6769.5], [434.0, 3568.25], [433.0, 6576.0], [432.0, 12949.0], [439.0, 12547.0], [438.0, 12239.0], [437.0, 12128.0], [436.0, 12389.0], [444.0, 4816.333333333334], [435.0, 12163.0], [443.0, 6495.5], [447.0, 12373.0], [446.0, 12596.0], [442.0, 12620.0], [440.0, 13243.0], [462.0, 12059.0], [455.0, 6345.0], [448.0, 6485.5], [449.0, 12120.0], [451.0, 12120.0], [450.0, 12111.0], [454.0, 4658.0], [453.0, 2657.666666666667], [452.0, 12114.0], [463.0, 12620.0], [457.0, 12087.0], [456.0, 13039.0], [461.0, 12338.0], [460.0, 13784.0], [459.0, 13440.0], [458.0, 12256.0], [479.0, 12607.0], [477.0, 6354.5], [475.0, 6513.5], [478.0, 11984.0], [476.0, 12540.0], [467.0, 12546.0], [466.0, 12654.5], [464.0, 12189.0], [474.0, 12000.0], [473.0, 12891.0], [472.0, 12702.0], [471.0, 12322.0], [469.0, 13810.0], [495.0, 12129.0], [491.0, 4610.666666666666], [494.0, 6234.0], [493.0, 12058.0], [492.0, 12327.0], [483.0, 12386.0], [482.0, 11929.0], [481.0, 12117.0], [480.0, 12053.0], [490.0, 12144.0], [489.0, 12044.0], [488.0, 12101.0], [487.0, 12116.0], [486.0, 12020.0], [484.0, 11936.0], [509.0, 7194.5], [499.0, 6720.5], [510.0, 4548.666666666666], [508.0, 6627.5], [511.0, 6237.5], [507.0, 11827.0], [506.0, 11860.0], [505.0, 11991.5], [503.0, 11824.0], [498.0, 12531.5], [496.0, 11878.0], [502.0, 12006.0], [501.0, 11889.0], [500.0, 11867.0], [540.0, 4576.666666666666], [516.0, 4520.666666666666], [514.0, 6504.5], [526.0, 11951.0], [512.0, 12463.0], [518.0, 8325.0], [538.0, 11706.0], [536.0, 11728.0], [542.0, 687.0], [530.0, 12370.0], [528.0, 11727.0], [534.0, 12094.0], [532.0, 12644.0], [522.0, 6241.0], [520.0, 12050.0], [524.0, 6556.5], [572.0, 11556.0], [546.0, 4355.0], [544.0, 11896.0], [558.0, 13448.0], [556.0, 11596.0], [554.0, 11655.0], [552.0, 13811.0], [548.0, 6761.5], [574.0, 12193.0], [570.0, 12742.0], [550.0, 11628.0], [566.0, 11564.0], [564.0, 12806.5], [562.0, 12305.0], [560.0, 11670.0], [606.0, 7015.0], [578.0, 951.3333333333334], [576.0, 3133.6], [590.0, 11586.0], [588.0, 13628.5], [586.0, 12663.0], [584.0, 12462.0], [596.0, 6437.5], [600.0, 4556.333333333334], [582.0, 12367.0], [580.0, 12863.0], [604.0, 11690.0], [602.0, 11824.0], [598.0, 12040.0], [594.0, 12897.0], [592.0, 12631.0], [636.0, 11264.0], [610.0, 6242.5], [612.0, 6991.0], [616.0, 3189.2], [618.0, 1217.0], [622.0, 11496.5], [608.0, 11404.0], [620.0, 11368.0], [638.0, 11440.0], [626.0, 12059.0], [624.0, 11344.0], [632.0, 12947.0], [614.0, 11429.0], [630.0, 11288.0], [628.0, 12896.0], [666.0, 3758.5], [664.0, 6316.0], [646.0, 11609.0], [644.0, 11309.0], [640.0, 11729.0], [662.0, 4523.666666666666], [670.0, 12430.0], [660.0, 11402.0], [658.0, 11335.0], [656.0, 11698.0], [654.0, 11486.0], [652.0, 11907.5], [650.0, 11338.0], [648.0, 11311.0], [700.0, 10996.0], [674.0, 6186.0], [672.0, 11196.0], [678.0, 11085.0], [676.0, 11759.5], [688.0, 1007.0], [692.0, 6350.5], [702.0, 6291.5], [698.0, 11068.0], [696.0, 11330.0], [694.0, 10965.0], [686.0, 11811.5], [684.0, 11125.0], [682.0, 11564.0], [680.0, 11196.0], [732.0, 10791.0], [712.0, 6583.0], [716.0, 10919.0], [714.0, 12178.0], [718.0, 1343.0], [734.0, 4494.666666666666], [730.0, 10990.0], [728.0, 10834.0], [710.0, 11483.0], [708.0, 10913.0], [706.0, 11828.0], [704.0, 11277.0], [726.0, 11357.0], [724.0, 10819.0], [722.0, 11266.0], [720.0, 11227.0], [764.0, 10483.0], [738.0, 6157.0], [736.0, 6058.5], [740.0, 1174.0], [742.0, 10761.0], [744.0, 3645.25], [746.0, 6212.5], [766.0, 10795.5], [754.0, 10564.0], [752.0, 10846.0], [758.0, 10777.0], [756.0, 11568.0], [762.0, 12877.0], [760.0, 11788.0], [794.0, 3865.0], [792.0, 1441.25], [774.0, 10644.0], [768.0, 1135.0], [770.0, 10476.0], [772.0, 6102.5], [778.0, 6141.0], [776.0, 10527.0], [780.0, 10589.0], [782.0, 11124.0], [790.0, 5825.5], [796.0, 10373.0], [786.0, 12555.0], [788.0, 12164.0], [798.0, 10874.0], [784.0, 10450.0], [800.0, 6505.5], [826.0, 10626.0], [830.0, 6532.5], [802.0, 10638.0], [814.0, 10240.0], [812.0, 10360.0], [810.0, 10847.0], [808.0, 11120.0], [804.0, 7714.666666666667], [806.0, 10908.0], [818.0, 5965.5], [820.0, 10720.0], [822.0, 10230.0], [816.0, 10238.0], [828.0, 11793.0], [834.0, 5959.5], [832.0, 3400.8], [846.0, 10118.0], [844.0, 10100.0], [842.0, 10157.0], [840.0, 10095.0], [836.0, 7384.0], [838.0, 12713.0], [848.0, 10279.0], [850.0, 10120.0], [852.0, 10044.0], [854.0, 10376.0], [862.0, 10060.0], [864.0, 10395.0], [866.0, 6098.5], [878.0, 10174.0], [876.0, 10132.5], [868.0, 6144.0], [870.0, 10661.0], [888.0, 10114.0], [874.0, 5791.5], [872.0, 5820.0], [886.0, 9918.0], [882.0, 10074.0], [880.0, 10033.0], [894.0, 10217.0], [892.0, 10146.0], [890.0, 10325.0], [896.0, 9862.0], [898.0, 1537.2], [910.0, 9838.0], [908.0, 9920.0], [906.0, 10432.0], [904.0, 10087.5], [918.0, 5718.5], [916.0, 9764.0], [914.0, 10292.0], [912.0, 9801.0], [926.0, 10319.0], [924.0, 10072.0], [922.0, 9878.5], [920.0, 9743.0], [902.0, 9857.0], [900.0, 10926.0], [930.0, 5762.5], [932.0, 6030.0], [934.0, 9687.5], [952.0, 9543.0], [942.0, 9609.0], [928.0, 9679.0], [940.0, 10080.0], [938.0, 9928.0], [936.0, 9841.0], [956.0, 7268.333333333333], [950.0, 10272.0], [948.0, 10097.0], [946.0, 9967.0], [944.0, 10094.5], [958.0, 9692.5], [954.0, 9741.0], [964.0, 9449.0], [986.0, 9963.0], [962.0, 4370.333333333334], [966.0, 10000.0], [984.0, 9864.5], [960.0, 3341.2], [974.0, 9947.0], [972.0, 9532.0], [970.0, 9440.0], [988.0, 6118.5], [982.0, 9391.0], [978.0, 9610.0], [976.0, 9397.0], [1018.0, 2022.3333333333333], [992.0, 2652.0], [1006.0, 9526.0], [1004.0, 9253.0], [1002.0, 9268.0], [1000.0, 9645.0], [1020.0, 3312.5], [1016.0, 5539.5], [998.0, 9344.0], [1010.0, 9843.0], [1012.0, 9798.0], [1014.0, 10715.0], [1022.0, 9222.0], [1032.0, 9254.0], [1052.0, 3899.5], [1024.0, 9324.0], [1028.0, 10111.0], [1072.0, 9432.0], [1036.0, 9657.0], [1076.0, 9066.0], [1084.0, 5502.0], [1068.0, 9399.0], [1064.0, 9244.0], [1060.0, 11154.0], [1056.0, 9152.0], [1080.0, 1954.0], [1044.0, 10056.0], [1040.0, 9793.0], [1048.0, 9167.0], [1088.0, 3882.5], [1112.0, 6867.0], [1108.0, 5559.5], [1104.0, 9308.0], [1120.0, 2225.5], [1124.0, 8947.0], [1128.0, 9606.0], [1132.0, 9406.0], [1116.0, 8870.0], [1144.0, 5912.0], [1140.0, 8998.0], [1136.0, 8873.0], [1100.0, 8987.0], [1096.0, 9040.0], [1092.0, 9280.5], [1148.0, 8845.0], [1160.0, 8689.0], [1164.0, 4279.0], [1156.0, 8678.0], [1200.0, 9116.0], [1204.0, 8609.0], [1208.0, 8469.0], [1152.0, 3783.0], [1176.0, 6271.0], [1172.0, 8871.0], [1168.0, 8631.0], [1180.0, 5601.0], [1188.0, 8567.0], [1184.0, 9266.0], [1212.0, 8882.0], [1192.0, 5450.0], [1196.0, 8940.0], [1216.0, 9201.0], [1224.0, 5238.5], [1240.0, 6284.666666666667], [1244.0, 8261.0], [1236.0, 5572.5], [1232.0, 8498.0], [1220.0, 2230.0], [1264.0, 9051.0], [1268.0, 8801.0], [1228.0, 5653.0], [1272.0, 8209.0], [1248.0, 8636.0], [1252.0, 8299.0], [1256.0, 8931.333333333334], [1260.0, 8357.0], [1280.0, 8118.0], [1284.0, 5353.0], [1308.0, 6663.5], [1300.0, 5142.0], [1304.0, 9334.0], [1292.0, 5410.5], [1296.0, 3779.2], [1336.0, 5721.0], [1340.0, 7811.0], [1332.0, 5545.0], [1328.0, 8178.0], [1320.0, 5072.5], [1316.0, 8419.0], [1312.0, 8320.0], [1324.0, 7887.0], [1392.0, 7842.0], [1400.0, 3066.0], [1344.0, 7806.0], [1348.0, 5680.0], [1352.0, 3153.0], [1396.0, 7739.0], [1404.0, 8425.0], [1376.0, 7958.0], [1380.0, 5235.5], [1388.0, 7994.0], [1384.0, 7664.0], [1360.0, 4658.5], [1364.0, 7670.0], [1372.0, 8653.0], [1420.0, 7689.0], [1416.0, 7729.0], [1412.0, 7815.0], [1408.0, 7511.0], [1436.0, 7437.0], [1432.0, 7564.0], [1460.0, 8095.0], [1444.0, 8130.0], [1440.0, 7412.0], [1448.0, 8021.5], [1452.0, 8025.0], [1424.0, 7596.0], [1428.0, 7769.0], [1468.0, 7237.0], [1464.0, 7835.0], [1520.0, 6992.0], [1480.0, 5743.5], [1472.0, 7360.0], [1476.0, 7179.0], [1524.0, 5125.5], [1484.0, 7355.0], [1528.0, 7426.0], [1508.0, 6999.0], [1504.0, 7036.5], [1532.0, 7244.0], [1488.0, 4890.5], [1492.0, 5140.5], [1500.0, 5307.5], [1544.0, 9915.0], [1536.0, 7209.0], [1540.0, 8713.0], [1564.0, 6845.0], [1560.0, 6828.0], [1548.0, 6931.0], [1588.0, 6727.0], [1572.0, 6762.0], [1568.0, 7942.0], [1576.0, 7551.0], [1580.0, 6701.0], [1556.0, 4927.5], [1552.0, 7276.0], [1592.0, 6786.0], [1604.0, 6556.0], [1600.0, 5270.0], [1612.0, 5360.333333333333], [1648.0, 6416.0], [1652.0, 6545.0], [1628.0, 4281.25], [1624.0, 6495.0], [1620.0, 6623.0], [1616.0, 7098.0], [1636.0, 5664.0], [1644.0, 6379.0], [1640.0, 6597.0], [1660.0, 4027.333333333333], [1632.0, 6744.0], [1664.0, 6772.0], [1712.0, 5609.5], [1676.0, 5162.0], [1684.0, 6558.0], [1680.0, 6492.0], [1688.0, 7251.0], [1668.0, 6364.0], [1672.0, 6234.0], [1692.0, 6279.0], [1696.0, 4341.0], [1724.0, 4985.0], [1720.0, 4717.5], [1716.0, 6152.0], [1700.0, 6133.0], [1704.0, 7099.0], [1732.0, 4505.0], [1784.0, 5967.0], [1740.0, 6067.0], [1736.0, 6203.0], [1776.0, 7974.0], [1744.0, 4788.0], [1728.0, 6507.0], [1756.0, 6839.0], [1752.0, 5999.0], [1748.0, 5902.0], [1764.0, 6185.0], [1768.0, 6055.0], [1772.0, 6531.0], [1788.0, 6462.0], [1780.0, 5910.0], [1804.0, 5927.0], [1800.0, 3367.0], [1796.0, 5689.0], [1792.0, 6665.0], [1820.0, 4458.0], [1844.0, 4354.0], [1840.0, 5647.0], [1848.0, 5499.0], [1824.0, 5530.0], [1828.0, 5541.0], [1852.0, 5655.0], [1836.0, 5952.0], [1812.0, 4586.5], [1808.0, 5712.0], [1816.0, 6452.0], [1864.0, 3724.0], [1868.0, 5293.0], [1860.0, 3665.0], [1856.0, 4441.5], [1880.0, 4714.0], [1884.0, 5493.0], [1888.0, 4329.5], [1892.0, 5405.0], [1896.0, 6169.0], [1900.0, 5960.5], [1916.0, 5180.0], [1912.0, 5411.0], [1904.0, 4782.0], [1908.0, 4852.0], [1872.0, 6630.0], [1876.0, 5305.0], [1928.0, 5346.0], [1932.0, 5070.0], [1936.0, 4572.5], [1920.0, 5160.0], [1924.0, 5820.0], [1968.0, 5436.0], [1972.0, 5114.0], [1976.0, 6511.0], [1980.0, 4776.0], [1952.0, 4964.0], [1956.0, 4982.0], [1960.0, 4887.0], [1940.0, 5004.0], [1948.0, 4449.5], [1944.0, 5013.0], [1996.0, 4620.5], [1984.0, 4916.0], [1988.0, 5845.0], [1992.0, 5100.0], [2016.0, 5141.0], [2020.0, 5384.0], [2040.0, 4591.0], [2044.0, 4504.0], [2036.0, 3851.0], [2032.0, 4208.333333333333], [2024.0, 4981.0], [2000.0, 4735.0], [2008.0, 4603.0], [2004.0, 4967.0], [2012.0, 4114.0], [2072.0, 5263.0], [2056.0, 5147.666666666667], [2048.0, 4509.0], [2064.0, 4699.5], [2144.0, 4655.0], [2112.0, 4183.0], [2120.0, 4232.0], [2128.0, 4539.0], [2136.0, 4784.0], [2168.0, 4117.0], [2152.0, 5132.0], [2160.0, 4051.0], [2088.0, 4262.0], [2096.0, 4324.0], [2104.0, 4405.0], [2065.0, 4457.0], [2049.0, 4717.5], [2105.0, 5288.0], [2089.0, 4217.0], [2097.0, 5340.0], [2057.0, 4521.0], [2073.0, 4157.0], [2145.0, 4251.0], [2153.0, 3934.0], [2113.0, 4785.0], [2169.0, 4263.0], [2161.0, 4135.0], [2121.0, 4369.0], [2137.0, 4837.25], [2129.0, 4144.0], [2081.0, 4940.0], [1037.0, 5519.0], [1029.0, 5560.0], [1025.0, 9501.0], [1033.0, 9700.0], [1069.0, 9049.0], [1065.0, 9093.0], [1061.0, 9401.0], [1057.0, 9235.0], [1085.0, 9289.0], [1081.0, 6732.666666666667], [1077.0, 9536.0], [1073.0, 9065.0], [1045.0, 5612.5], [1041.0, 9777.0], [1049.0, 5773.5], [1053.0, 9106.0], [1093.0, 9963.0], [1137.0, 8936.0], [1149.0, 10172.0], [1089.0, 9053.0], [1097.0, 9083.0], [1101.0, 8897.0], [1117.0, 9239.0], [1113.0, 9229.0], [1109.0, 9012.0], [1105.0, 9384.0], [1121.0, 4853.0], [1125.0, 8934.0], [1129.0, 9074.0], [1141.0, 5456.0], [1145.0, 9738.0], [1157.0, 8672.0], [1205.0, 8645.0], [1213.0, 10812.0], [1161.0, 1921.0], [1153.0, 8918.0], [1181.0, 9004.0], [1177.0, 8900.0], [1173.0, 8645.0], [1169.0, 8663.0], [1185.0, 8833.0], [1189.0, 8933.0], [1193.0, 8692.0], [1197.0, 5798.5], [1209.0, 8422.0], [1201.0, 8572.0], [1165.0, 10314.0], [1245.0, 8975.0], [1233.0, 2761.0], [1237.0, 9263.0], [1241.0, 9746.0], [1217.0, 8809.0], [1229.0, 5589.0], [1225.0, 8429.0], [1221.0, 9013.0], [1249.0, 5640.5], [1277.0, 8897.5], [1273.0, 10905.0], [1269.0, 8560.0], [1265.0, 8327.0], [1257.0, 5370.5], [1253.0, 8248.0], [1261.0, 5442.5], [1285.0, 8100.0], [1293.0, 9519.0], [1329.0, 8789.0], [1281.0, 5518.0], [1289.0, 8231.5], [1297.0, 5573.5], [1301.0, 8158.0], [1305.0, 9177.0], [1317.0, 9546.0], [1313.0, 8213.0], [1341.0, 5266.0], [1337.0, 2750.0], [1333.0, 7825.0], [1321.0, 5311.5], [1325.0, 5266.0], [1357.0, 6000.666666666667], [1345.0, 7790.0], [1349.0, 7837.0], [1353.0, 7974.0], [1393.0, 3726.25], [1397.0, 5075.0], [1385.0, 6549.0], [1381.0, 7648.0], [1405.0, 7658.0], [1401.0, 8273.0], [1389.0, 7711.0], [1361.0, 5217.5], [1365.0, 5611.0], [1369.0, 6146.333333333333], [1373.0, 8227.0], [1421.0, 7465.0], [1413.0, 2727.0], [1409.0, 7507.0], [1417.0, 5326.5], [1453.0, 8383.0], [1449.0, 9912.0], [1445.0, 5350.0], [1469.0, 5543.5], [1441.0, 7408.0], [1465.0, 7244.0], [1461.0, 6200.5], [1425.0, 5683.0], [1433.0, 7395.0], [1429.0, 7614.0], [1437.0, 7561.0], [1485.0, 7338.0], [1521.0, 5314.5], [1501.0, 5333.5], [1473.0, 5624.0], [1481.0, 7398.0], [1525.0, 4536.666666666667], [1529.0, 4817.666666666667], [1533.0, 5440.0], [1517.0, 5203.0], [1513.0, 6988.5], [1509.0, 7573.0], [1505.0, 6998.0], [1493.0, 3880.75], [1489.0, 7111.0], [1497.0, 7355.5], [1593.0, 4853.5], [1541.0, 4774.0], [1537.0, 6967.0], [1597.0, 6198.666666666667], [1569.0, 7292.0], [1573.0, 7072.0], [1577.0, 6941.0], [1581.0, 7524.0], [1589.0, 4827.5], [1585.0, 6810.0], [1549.0, 7362.0], [1545.0, 6836.0], [1553.0, 5004.0], [1557.0, 3785.8], [1561.0, 7087.0], [1565.0, 7002.0], [1613.0, 6652.0], [1629.0, 4349.666666666667], [1625.0, 7306.0], [1621.0, 6743.0], [1649.0, 6335.0], [1609.0, 6542.0], [1605.0, 6551.0], [1637.0, 5209.5], [1633.0, 6447.0], [1641.0, 6402.0], [1653.0, 5113.0], [1661.0, 4346.25], [1657.0, 6430.5], [1669.0, 6385.0], [1717.0, 6455.0], [1725.0, 4593.5], [1665.0, 4253.666666666667], [1713.0, 6519.0], [1677.0, 6393.0], [1673.0, 6235.0], [1721.0, 6074.0], [1693.0, 6136.0], [1689.0, 7747.0], [1685.0, 6189.0], [1681.0, 6544.0], [1697.0, 4896.5], [1701.0, 4914.5], [1709.0, 6352.5], [1705.0, 6151.0], [1733.0, 3029.0], [1729.0, 3502.0], [1785.0, 4355.25], [1745.0, 5888.0], [1749.0, 5901.0], [1753.0, 4294.0], [1757.0, 5877.0], [1789.0, 5732.0], [1761.0, 5917.5], [1765.0, 6712.0], [1769.0, 5925.0], [1773.0, 6112.0], [1781.0, 6099.0], [1777.0, 6749.0], [1741.0, 6052.0], [1737.0, 6560.0], [1801.0, 6205.0], [1793.0, 6132.0], [1821.0, 5882.0], [1797.0, 5816.0], [1805.0, 5686.0], [1845.0, 5199.0], [1849.0, 4477.5], [1853.0, 6142.0], [1825.0, 4022.0], [1837.0, 6153.0], [1833.0, 6120.0], [1813.0, 4142.0], [1809.0, 6261.0], [1869.0, 5933.0], [1857.0, 4469.5], [1861.0, 5408.0], [1885.0, 5861.0], [1881.0, 5390.0], [1877.0, 5347.0], [1905.0, 4437.333333333333], [1865.0, 5802.0], [1913.0, 4137.0], [1909.0, 5420.0], [1917.0, 6243.0], [1889.0, 3895.0], [1893.0, 5600.0], [1897.0, 5767.0], [1901.0, 5336.0], [1969.0, 4651.0], [1929.0, 5811.0], [1937.0, 4278.333333333333], [1921.0, 5831.0], [1925.0, 5191.0], [1933.0, 5847.0], [1977.0, 4463.5], [1981.0, 4716.5], [1961.0, 4498.0], [1965.0, 4497.333333333333], [1957.0, 4340.75], [1941.0, 5477.0], [1949.0, 5185.5], [1945.0, 5296.0], [2041.0, 4571.0], [1985.0, 4314.0], [1989.0, 5833.0], [1997.0, 4668.0], [2021.0, 4563.5], [2017.0, 4776.0], [2045.0, 5070.0], [2037.0, 4980.5], [2033.0, 4017.0], [2029.0, 4947.0], [2025.0, 4585.0], [2001.0, 5329.0], [2009.0, 4122.0], [2005.0, 5446.0], [2013.0, 4968.5], [2066.0, 3838.0], [2050.0, 4509.0], [2106.0, 4892.0], [2058.0, 4610.0], [2074.0, 4597.5], [2146.0, 4082.0], [2122.0, 4195.0], [2130.0, 5687.0], [2138.0, 4735.0], [2162.0, 4004.0], [2170.0, 3985.0], [2154.0, 4361.5], [2082.0, 5325.0], [2090.0, 4411.666666666667], [2098.0, 4284.0], [2059.0, 4471.0], [2075.0, 4897.0], [2051.0, 4239.5], [2107.0, 4743.0], [2091.0, 4380.0], [2099.0, 5168.0], [2067.0, 4911.666666666667], [2147.0, 4076.0], [2171.0, 5210.0], [2163.0, 4129.0], [2155.0, 4076.0], [2115.0, 4415.5], [2123.0, 4435.5], [2131.0, 4310.0], [2139.0, 4140.0], [2083.0, 4651.0], [539.0, 11703.0], [513.0, 6357.0], [515.0, 6432.0], [517.0, 701.0], [529.0, 6389.0], [531.0, 11792.0], [535.0, 11754.0], [533.0, 11980.0], [521.0, 6574.5], [525.0, 12190.0], [523.0, 12304.0], [527.0, 12897.0], [543.0, 12187.0], [541.0, 11890.0], [537.0, 13048.0], [519.0, 11966.0], [573.0, 11586.0], [545.0, 3401.0], [549.0, 4664.333333333334], [547.0, 12490.0], [551.0, 11747.0], [557.0, 6452.0], [555.0, 11591.0], [553.0, 12596.0], [559.0, 4690.333333333334], [575.0, 7038.0], [561.0, 11875.0], [571.0, 11785.0], [569.0, 12032.0], [567.0, 11768.0], [565.0, 12308.0], [607.0, 13073.0], [579.0, 8375.0], [577.0, 3011.0], [591.0, 13125.0], [589.0, 11628.0], [585.0, 12158.0], [599.0, 6122.0], [605.0, 4665.333333333334], [603.0, 11558.0], [601.0, 11889.0], [583.0, 11530.0], [581.0, 11523.0], [597.0, 11739.0], [595.0, 12029.0], [593.0, 11465.0], [633.0, 2940.833333333333], [611.0, 4475.666666666666], [617.0, 4736.0], [623.0, 12771.0], [609.0, 13105.0], [619.0, 11618.5], [615.0, 4524.666666666666], [613.0, 12141.0], [639.0, 11275.0], [627.0, 11382.0], [625.0, 11488.0], [637.0, 11259.0], [635.0, 13165.0], [631.0, 11308.0], [629.0, 12538.0], [665.0, 3980.5], [655.0, 6402.0], [643.0, 12476.0], [641.0, 12344.0], [647.0, 12705.0], [645.0, 12178.0], [653.0, 11252.0], [649.0, 11313.0], [657.0, 6473.5], [663.0, 6237.5], [667.0, 6051.0], [669.0, 6405.5], [671.0, 11324.0], [661.0, 11127.0], [659.0, 11269.0], [703.0, 3387.8], [687.0, 4576.333333333334], [673.0, 11073.0], [679.0, 11776.0], [677.0, 11097.0], [689.0, 7810.666666666667], [701.0, 12443.0], [699.0, 10979.0], [695.0, 11070.0], [693.0, 11139.0], [691.0, 11637.5], [683.0, 11021.0], [681.0, 11354.0], [733.0, 6749.5], [707.0, 6352.0], [709.0, 6543.0], [715.0, 3884.25], [713.0, 12533.0], [719.0, 11225.5], [705.0, 11152.0], [717.0, 10925.0], [735.0, 6353.5], [731.0, 10863.0], [711.0, 10916.0], [727.0, 12367.0], [725.0, 11391.0], [723.0, 10822.0], [721.0, 11720.0], [765.0, 1476.3333333333333], [737.0, 5936.0], [745.0, 3243.2], [747.0, 10829.0], [751.0, 10939.5], [749.0, 10736.0], [767.0, 10787.0], [763.0, 10652.0], [761.0, 11065.0], [743.0, 10768.0], [741.0, 10755.5], [739.0, 11313.0], [759.0, 11267.0], [757.0, 10567.0], [755.0, 10570.0], [753.0, 10707.0], [795.0, 1710.0], [777.0, 3901.0], [779.0, 3322.8], [793.0, 5039.4], [775.0, 10798.0], [773.0, 11921.0], [771.0, 10531.0], [769.0, 11313.0], [783.0, 11092.0], [781.0, 11932.0], [791.0, 6955.0], [797.0, 10797.0], [799.0, 10361.0], [787.0, 10647.0], [785.0, 11657.0], [789.0, 10763.0], [805.0, 6250.5], [801.0, 10371.0], [815.0, 10516.0], [813.0, 10567.0], [809.0, 10448.0], [825.0, 10530.0], [807.0, 10304.0], [827.0, 10786.0], [821.0, 5748.5], [819.0, 10372.0], [823.0, 5899.5], [831.0, 4239.333333333334], [817.0, 10479.0], [829.0, 11283.0], [835.0, 1404.0], [847.0, 10115.0], [845.0, 10528.0], [833.0, 6095.5], [837.0, 10227.0], [857.0, 10033.0], [839.0, 10140.0], [863.0, 12173.0], [849.0, 10304.0], [851.0, 10496.0], [855.0, 10030.0], [861.0, 10208.5], [859.0, 10415.0], [865.0, 10390.0], [867.0, 4522.666666666666], [879.0, 10530.0], [877.0, 9991.0], [869.0, 10152.0], [871.0, 9958.0], [875.0, 1604.0], [873.0, 5687.5], [887.0, 6597.0], [885.0, 10080.0], [883.0, 9921.0], [881.0, 10512.0], [895.0, 9857.0], [893.0, 10346.0], [891.0, 11295.0], [889.0, 6115.0], [897.0, 10389.0], [925.0, 10458.0], [911.0, 9797.0], [909.0, 10231.0], [907.0, 10019.0], [905.0, 10003.0], [899.0, 4471.666666666666], [917.0, 10260.0], [915.0, 10031.0], [913.0, 9847.0], [919.0, 9868.0], [927.0, 9824.0], [923.0, 10095.0], [901.0, 9872.0], [935.0, 10079.0], [953.0, 11600.0], [931.0, 1746.5], [929.0, 6289.5], [941.0, 9613.0], [939.0, 9619.0], [937.0, 9723.0], [959.0, 4961.0], [951.0, 9673.0], [949.0, 9876.0], [947.0, 9667.0], [945.0, 9609.0], [965.0, 9601.0], [963.0, 5925.5], [967.0, 9485.0], [985.0, 9648.0], [961.0, 3796.25], [975.0, 9567.0], [973.0, 9751.0], [969.0, 9778.0], [991.0, 5894.25], [981.0, 10749.0], [979.0, 9411.0], [977.0, 9537.0], [989.0, 9333.0], [987.0, 9669.0], [993.0, 3584.5], [1019.0, 7218.0], [1007.0, 10516.0], [1005.0, 10430.0], [1003.0, 9260.0], [1001.0, 9431.0], [1021.0, 10363.0], [999.0, 10290.0], [997.0, 9518.5], [995.0, 9508.0], [1017.0, 5439.5], [1023.0, 9226.0], [1009.0, 10590.5], [1011.0, 9554.0], [1013.0, 9302.0], [1015.0, 9257.0], [1034.0, 5943.0], [1078.0, 6410.0], [1026.0, 5974.5], [1054.0, 9136.0], [1030.0, 10506.0], [1074.0, 9189.0], [1086.0, 8989.0], [1066.0, 9144.0], [1062.0, 9434.0], [1058.0, 10138.0], [1082.0, 3822.5], [1046.0, 4585.0], [1042.0, 9435.0], [1050.0, 4061.25], [1118.0, 5986.0], [1146.0, 9150.0], [1106.0, 8863.0], [1110.0, 8879.0], [1122.0, 8864.0], [1126.0, 8932.0], [1130.0, 9553.0], [1134.0, 9582.5], [1114.0, 9361.0], [1142.0, 9774.0], [1138.0, 10783.0], [1102.0, 9067.0], [1098.0, 8925.0], [1090.0, 9130.0], [1150.0, 5980.5], [1158.0, 8688.0], [1202.0, 8582.0], [1210.0, 4541.666666666666], [1162.0, 8773.5], [1154.0, 8686.0], [1166.0, 8672.0], [1206.0, 8641.0], [1174.0, 9060.0], [1170.0, 8655.0], [1178.0, 9355.0], [1182.0, 8675.0], [1190.0, 4431.666666666666], [1186.0, 8721.0], [1214.0, 8468.0], [1194.0, 4380.0], [1198.0, 5937.0], [1222.0, 8423.0], [1218.0, 4234.0], [1246.0, 8927.0], [1242.0, 8329.0], [1234.0, 9381.5], [1238.0, 8693.0], [1226.0, 5770.0], [1230.0, 4825.666666666666], [1266.0, 8202.0], [1270.0, 5441.0], [1278.0, 2574.0], [1274.0, 9363.0], [1250.0, 2334.0], [1258.0, 8236.0], [1262.0, 8382.0], [1290.0, 8337.0], [1334.0, 5220.0], [1282.0, 5530.5], [1286.0, 8133.0], [1310.0, 5411.75], [1306.0, 5467.0], [1298.0, 8034.0], [1338.0, 8140.5], [1330.0, 8236.0], [1294.0, 8196.0], [1318.0, 8274.0], [1314.0, 7927.0], [1322.0, 8321.0], [1326.0, 8678.0], [1342.0, 9749.0], [1358.0, 8119.0], [1346.0, 4470.333333333333], [1350.0, 8182.0], [1354.0, 8104.0], [1394.0, 7553.0], [1398.0, 7561.0], [1402.0, 5130.5], [1406.0, 5439.0], [1378.0, 5428.0], [1390.0, 8507.0], [1386.0, 7697.0], [1382.0, 7628.0], [1362.0, 8110.0], [1366.0, 7737.0], [1370.0, 8129.0], [1374.0, 8226.0], [1458.0, 8027.666666666667], [1462.0, 4090.25], [1418.0, 4991.5], [1414.0, 7783.0], [1410.0, 7681.0], [1422.0, 8018.0], [1438.0, 7718.0], [1446.0, 3935.0], [1442.0, 7403.0], [1450.0, 7600.0], [1454.0, 7945.0], [1426.0, 5848.0], [1430.0, 5152.5], [1470.0, 7488.0], [1466.0, 7247.0], [1482.0, 5437.0], [1502.0, 7023.0], [1474.0, 7988.0], [1478.0, 7239.5], [1522.0, 7417.0], [1486.0, 7118.0], [1526.0, 6980.0], [1530.0, 8071.0], [1534.0, 8429.0], [1510.0, 5565.0], [1514.0, 5091.5], [1518.0, 4809.5], [1490.0, 7639.0], [1494.0, 4423.666666666667], [1542.0, 4912.0], [1590.0, 4107.25], [1558.0, 4269.666666666667], [1566.0, 7446.0], [1538.0, 7051.0], [1562.0, 8299.0], [1546.0, 4857.5], [1550.0, 6901.0], [1586.0, 6839.0], [1574.0, 5346.5], [1570.0, 8161.0], [1578.0, 7370.0], [1582.0, 6794.0], [1554.0, 6800.0], [1598.0, 7788.0], [1594.0, 6737.0], [1602.0, 6684.0], [1654.0, 6501.0], [1610.0, 6673.0], [1606.0, 6658.0], [1614.0, 6510.0], [1650.0, 6350.0], [1626.0, 6901.0], [1622.0, 6862.0], [1618.0, 6813.0], [1630.0, 5286.0], [1646.0, 7599.0], [1642.0, 7239.0], [1638.0, 6678.0], [1662.0, 6945.0], [1634.0, 7075.0], [1658.0, 6442.0], [1694.0, 3155.5], [1678.0, 4949.0], [1686.0, 4653.5], [1682.0, 7032.0], [1690.0, 6625.0], [1666.0, 6341.0], [1670.0, 6643.0], [1674.0, 6667.0], [1726.0, 7817.0], [1718.0, 6073.0], [1714.0, 6184.0], [1702.0, 4933.0], [1698.0, 6582.0], [1710.0, 7787.0], [1706.0, 6522.0], [1738.0, 7055.0], [1742.0, 5235.5], [1734.0, 6698.0], [1778.0, 5880.0], [1746.0, 4022.3333333333335], [1758.0, 5993.0], [1730.0, 6229.5], [1754.0, 7575.0], [1750.0, 5877.0], [1790.0, 5733.0], [1762.0, 6274.0], [1766.0, 5930.0], [1770.0, 6549.0], [1774.0, 6533.0], [1786.0, 5865.0], [1782.0, 5755.0], [1802.0, 4407.333333333333], [1798.0, 3379.0], [1794.0, 6323.0], [1822.0, 4561.0], [1806.0, 4514.0], [1842.0, 6083.0], [1850.0, 5395.0], [1854.0, 6824.0], [1826.0, 5633.0], [1834.0, 4663.5], [1838.0, 5739.0], [1830.0, 4758.5], [1810.0, 6453.0], [1814.0, 6613.0], [1818.0, 6360.0], [1870.0, 5872.0], [1910.0, 4219.333333333333], [1866.0, 4472.5], [1882.0, 5295.0], [1886.0, 5285.0], [1858.0, 4490.0], [1862.0, 4831.666666666667], [1890.0, 5353.0], [1894.0, 5343.0], [1898.0, 5191.0], [1902.0, 6178.0], [1918.0, 5508.0], [1914.0, 5142.0], [1906.0, 4687.0], [1874.0, 5173.0], [1878.0, 4546.0], [1934.0, 5421.0], [1922.0, 5196.0], [1926.0, 5081.0], [1930.0, 5710.0], [1974.0, 4867.333333333333], [1970.0, 4979.0], [1978.0, 4828.0], [1954.0, 5040.5], [1982.0, 4777.0], [1958.0, 3896.4], [1966.0, 4495.0], [1938.0, 3595.0], [1942.0, 3793.0], [1950.0, 4467.5], [1946.0, 6311.0], [1994.0, 4344.2], [2010.0, 4714.0], [1986.0, 5251.0], [1990.0, 4704.0], [2014.0, 4157.5], [1998.0, 4301.5], [2022.0, 4596.0], [2042.0, 4575.0], [2038.0, 4178.333333333333], [2034.0, 4693.5], [2030.0, 4606.0], [2026.0, 4677.0], [2002.0, 4840.0], [2006.0, 5142.0], [2164.0, 4015.0], [2148.0, 4109.0], [2052.0, 4409.5], [2060.0, 4570.0], [2116.0, 4081.25], [2124.0, 4791.0], [2132.0, 4139.0], [2140.0, 4128.0], [2172.0, 5021.0], [2156.0, 4225.333333333333], [2084.0, 4511.0], [2100.0, 4280.0], [2092.0, 4997.0], [2053.0, 4518.0], [2109.0, 4443.5], [2093.0, 4380.0], [2101.0, 3826.0], [2061.0, 4361.0], [2069.0, 5738.0], [2077.0, 5035.333333333333], [2149.0, 4412.0], [2157.0, 4274.0], [2117.0, 4395.0], [2133.0, 4137.0], [2125.0, 4225.0], [2141.0, 4285.0], [2085.0, 4740.0], [1059.0, 9267.0], [1083.0, 5394.0], [1027.0, 10101.0], [1031.0, 10528.0], [1071.0, 7013.0], [1067.0, 9247.0], [1063.0, 9308.0], [1087.0, 9697.0], [1079.0, 9127.0], [1075.0, 9148.0], [1039.0, 9238.5], [1043.0, 9256.0], [1047.0, 9206.0], [1051.0, 3547.75], [1055.0, 9374.0], [1103.0, 8929.0], [1119.0, 4659.666666666666], [1095.0, 9656.0], [1099.0, 9047.0], [1115.0, 9759.0], [1107.0, 10340.0], [1139.0, 8763.0], [1123.0, 5657.5], [1127.0, 9158.0], [1135.0, 9069.0], [1131.0, 9089.0], [1151.0, 8746.0], [1147.0, 8834.0], [1143.0, 9325.0], [1155.0, 9580.0], [1159.0, 9244.0], [1183.0, 9109.0], [1179.0, 8923.0], [1175.0, 8775.0], [1171.0, 8910.0], [1163.0, 5312.5], [1191.0, 4346.666666666666], [1215.0, 5385.0], [1187.0, 8912.0], [1195.0, 4468.0], [1199.0, 8492.0], [1211.0, 8599.0], [1207.0, 8848.0], [1203.0, 9389.0], [1167.0, 8636.0], [1227.0, 8661.0], [1231.0, 5486.5], [1219.0, 4828.333333333334], [1235.0, 8740.0], [1243.0, 8678.0], [1247.0, 8284.0], [1223.0, 8612.0], [1279.0, 8880.5], [1275.0, 8162.0], [1271.0, 9959.0], [1267.0, 8198.0], [1251.0, 6418.333333333333], [1259.0, 4224.333333333333], [1263.0, 9055.0], [1283.0, 3814.75], [1291.0, 5772.0], [1295.0, 3956.25], [1287.0, 5215.0], [1299.0, 8134.0], [1303.0, 8409.5], [1307.0, 8183.0], [1311.0, 7969.0], [1315.0, 5712.5], [1343.0, 7859.0], [1339.0, 9644.0], [1335.0, 4013.25], [1331.0, 5809.0], [1319.0, 5411.0], [1327.0, 7861.0], [1359.0, 8460.0], [1347.0, 4660.333333333333], [1351.0, 7751.0], [1355.0, 7756.0], [1395.0, 7591.0], [1407.0, 7773.0], [1379.0, 8136.0], [1383.0, 7634.0], [1403.0, 8049.0], [1399.0, 7563.0], [1387.0, 5206.0], [1391.0, 8860.0], [1363.0, 7668.0], [1367.0, 7684.0], [1371.0, 7681.0], [1375.0, 7929.0], [1471.0, 7165.0], [1463.0, 5098.0], [1411.0, 5200.0], [1423.0, 7749.0], [1455.0, 4960.5], [1451.0, 7324.0], [1443.0, 7381.0], [1467.0, 5188.0], [1459.0, 7704.0], [1427.0, 4352.333333333333], [1435.0, 6197.666666666667], [1431.0, 7906.0], [1439.0, 8121.0], [1487.0, 7117.0], [1479.0, 7289.0], [1475.0, 7337.0], [1483.0, 7196.0], [1503.0, 3065.0], [1523.0, 6955.0], [1527.0, 6950.0], [1531.0, 7451.0], [1515.0, 6947.0], [1511.0, 7074.0], [1507.0, 7517.0], [1519.0, 8360.0], [1535.0, 7195.0], [1491.0, 7297.0], [1495.0, 7244.0], [1499.0, 7121.5], [1587.0, 6966.0], [1539.0, 5229.5], [1599.0, 5027.0], [1575.0, 7133.0], [1579.0, 7189.0], [1583.0, 6704.0], [1591.0, 4709.0], [1595.0, 6626.0], [1551.0, 8034.0], [1547.0, 7119.0], [1543.0, 7391.0], [1555.0, 7500.0], [1563.0, 4825.0], [1559.0, 6809.0], [1567.0, 5136.5], [1611.0, 7156.0], [1615.0, 7181.0], [1659.0, 4745.0], [1651.0, 4146.0], [1627.0, 6773.0], [1623.0, 6789.0], [1619.0, 6552.0], [1607.0, 6546.0], [1603.0, 6713.0], [1631.0, 6688.0], [1635.0, 7323.0], [1639.0, 7208.0], [1647.0, 6549.0], [1643.0, 7068.0], [1663.0, 8285.0], [1655.0, 6430.0], [1671.0, 4697.5], [1667.0, 7595.0], [1727.0, 4653.5], [1719.0, 4538.5], [1715.0, 6126.0], [1679.0, 6510.0], [1675.0, 6351.0], [1723.0, 6033.0], [1695.0, 6286.0], [1691.0, 6430.0], [1687.0, 6202.0], [1683.0, 6574.0], [1699.0, 4784.0], [1711.0, 6065.0], [1707.0, 6087.0], [1703.0, 7106.0], [1731.0, 6328.0], [1779.0, 5819.0], [1747.0, 5409.0], [1751.0, 6551.0], [1755.0, 4075.285714285714], [1759.0, 5855.0], [1763.0, 6119.0], [1771.0, 8242.0], [1775.0, 6364.0], [1787.0, 5772.0], [1783.0, 5753.0], [1743.0, 6211.0], [1739.0, 7052.0], [1735.0, 6014.0], [1803.0, 4149.333333333333], [1795.0, 5436.0], [1815.0, 4738.0], [1823.0, 6492.0], [1819.0, 5573.0], [1799.0, 5093.0], [1843.0, 4490.0], [1807.0, 6033.0], [1847.0, 5681.0], [1851.0, 5395.0], [1855.0, 5401.0], [1827.0, 4803.5], [1831.0, 4595.5], [1839.0, 5490.0], [1835.0, 6334.0], [1811.0, 6822.0], [1863.0, 4342.0], [1907.0, 4313.0], [1859.0, 5908.0], [1887.0, 5241.0], [1883.0, 6463.0], [1879.0, 5374.0], [1875.0, 5309.0], [1871.0, 5494.0], [1867.0, 5291.0], [1911.0, 6154.0], [1915.0, 6955.0], [1919.0, 5441.0], [1891.0, 6025.0], [1895.0, 5581.0], [1903.0, 5251.0], [1927.0, 5059.0], [1943.0, 5288.666666666667], [1935.0, 4655.0], [1951.0, 4969.0], [1923.0, 7288.0], [1931.0, 5187.0], [1971.0, 4854.0], [1979.0, 4912.0], [1983.0, 4772.0], [1955.0, 4961.0], [1959.0, 4562.5], [1963.0, 5197.333333333333], [1967.0, 5103.0], [1939.0, 5207.5], [1947.0, 4339.5], [1995.0, 5202.0], [1991.0, 5046.0], [1987.0, 4753.0], [2015.0, 4792.0], [2047.0, 5342.0], [2019.0, 5111.5], [2043.0, 4675.0], [2039.0, 4468.5], [2035.0, 4410.5], [1999.0, 5105.0], [2023.0, 4198.5], [2031.0, 5186.0], [2027.0, 4660.0], [2003.0, 4592.0], [2007.0, 5004.0], [2011.0, 4281.0], [2078.0, 4375.5], [2062.0, 4523.5], [2150.0, 4208.0], [2110.0, 4956.0], [2070.0, 4457.0], [2118.0, 4277.0], [2126.0, 4832.0], [2134.0, 4134.0], [2166.0, 4881.333333333333], [2158.0, 4100.0], [2086.0, 4336.0], [2102.0, 4332.333333333333], [2094.0, 4560.0], [2055.0, 4692.0], [2111.0, 4380.0], [2103.0, 4360.0], [2095.0, 4683.0], [2063.0, 4464.0], [2071.0, 4445.0], [2079.0, 4341.0], [2151.0, 4231.0], [2167.0, 4713.0], [2159.0, 4099.0], [2119.0, 4468.666666666667], [2135.0, 4738.0], [2127.0, 5670.0], [2143.0, 4145.0], [2087.0, 4537.333333333333], [1.0, 2940.8]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[823.2267166042442, 5564.398252184762]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2172.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 5825.0, "minX": 1.699972953E12, "maxY": 280701.0, "series": [{"data": [[1.699972973E12, 66439.0], [1.699972972E12, 72521.0], [1.699972971E12, 72977.0], [1.699972954E12, 280701.0], [1.699972975E12, 8435.0], [1.699972953E12, 153004.0], [1.699972974E12, 99170.0], [1.699972957E12, 65007.0], [1.699972956E12, 69623.0], [1.699972955E12, 95905.0], [1.69997296E12, 65940.0], [1.699972959E12, 63121.0], [1.699972958E12, 66410.0], [1.699972962E12, 65983.0], [1.699972961E12, 76713.0], [1.699972965E12, 67377.0], [1.699972964E12, 69162.0], [1.699972963E12, 71578.0], [1.699972968E12, 73437.0], [1.699972967E12, 74876.0], [1.699972966E12, 71098.0], [1.69997297E12, 60824.0], [1.699972969E12, 63139.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.699972973E12, 45849.0], [1.699972972E12, 50046.0], [1.699972971E12, 50357.0], [1.699972954E12, 193701.0], [1.699972975E12, 5825.0], [1.699972953E12, 105589.0], [1.699972974E12, 68430.0], [1.699972957E12, 44852.0], [1.699972956E12, 48018.0], [1.699972955E12, 66180.0], [1.69997296E12, 45495.0], [1.699972959E12, 43546.0], [1.699972958E12, 45820.0], [1.699972962E12, 45538.0], [1.699972961E12, 52933.0], [1.699972965E12, 46497.0], [1.699972964E12, 47702.0], [1.699972963E12, 49393.0], [1.699972968E12, 50672.0], [1.699972967E12, 51676.0], [1.699972966E12, 49058.0], [1.69997297E12, 41974.0], [1.699972969E12, 43564.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699972975E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 8.701666666666668, "minX": 1.699972953E12, "maxY": 14693.111111111111, "series": [{"data": [[1.699972973E12, 13164.380281690143], [1.699972972E12, 12442.729032258063], [1.699972971E12, 11913.455128205129], [1.699972954E12, 8.701666666666668], [1.699972975E12, 14693.111111111111], [1.699972953E12, 19.32110091743119], [1.699972974E12, 14082.462264150945], [1.699972957E12, 1739.6618705035962], [1.699972956E12, 1037.6174496644298], [1.699972955E12, 208.3024390243902], [1.69997296E12, 4008.1418439716317], [1.699972959E12, 3290.266666666667], [1.699972958E12, 2546.816901408452], [1.699972962E12, 5393.453900709221], [1.699972961E12, 4701.310975609754], [1.699972965E12, 7470.513888888887], [1.699972964E12, 6819.452702702706], [1.699972963E12, 6128.529411764709], [1.699972968E12, 9591.955414012738], [1.699972967E12, 8955.05625], [1.699972966E12, 8195.434210526315], [1.69997297E12, 11076.153846153846], [1.699972969E12, 10213.407407407403]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699972975E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 8.658333333333326, "minX": 1.699972953E12, "maxY": 14693.0, "series": [{"data": [[1.699972973E12, 13164.295774647888], [1.699972972E12, 12442.664516129033], [1.699972971E12, 11913.352564102563], [1.699972954E12, 8.658333333333326], [1.699972975E12, 14693.0], [1.699972953E12, 19.18654434250766], [1.699972974E12, 14082.349056603776], [1.699972957E12, 1739.553956834532], [1.699972956E12, 1037.58389261745], [1.699972955E12, 208.25365853658536], [1.69997296E12, 4008.099290780143], [1.699972959E12, 3290.17037037037], [1.699972958E12, 2546.760563380283], [1.699972962E12, 5393.4255319148915], [1.699972961E12, 4701.176829268289], [1.699972965E12, 7470.465277777776], [1.699972964E12, 6819.371621621621], [1.699972963E12, 6128.405228758169], [1.699972968E12, 9591.910828025486], [1.699972967E12, 8954.956250000003], [1.699972966E12, 8195.388157894737], [1.69997297E12, 11076.107692307694], [1.699972969E12, 10213.348148148147]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699972975E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.5987261146496815, "minX": 1.699972953E12, "maxY": 4.501529051987766, "series": [{"data": [[1.699972973E12, 0.8943661971830985], [1.699972972E12, 0.9677419354838714], [1.699972971E12, 0.826923076923077], [1.699972954E12, 1.2833333333333345], [1.699972975E12, 0.6666666666666667], [1.699972953E12, 4.501529051987766], [1.699972974E12, 1.165094339622642], [1.699972957E12, 1.5467625899280568], [1.699972956E12, 1.3825503355704691], [1.699972955E12, 1.1073170731707318], [1.69997296E12, 1.4397163120567378], [1.699972959E12, 1.5925925925925923], [1.699972958E12, 1.767605633802816], [1.699972962E12, 2.50354609929078], [1.699972961E12, 1.4024390243902443], [1.699972965E12, 0.7013888888888891], [1.699972964E12, 1.4324324324324327], [1.699972963E12, 1.2091503267973858], [1.699972968E12, 0.5987261146496815], [1.699972967E12, 0.76875], [1.699972966E12, 0.7960526315789473], [1.69997297E12, 0.8999999999999999], [1.699972969E12, 0.6222222222222221]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699972975E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.699972953E12, "maxY": 16064.0, "series": [{"data": [[1.699972973E12, 15475.0], [1.699972972E12, 14843.0], [1.699972971E12, 15028.0], [1.699972954E12, 25.0], [1.699972975E12, 15280.0], [1.699972953E12, 145.0], [1.699972974E12, 16064.0], [1.699972957E12, 2780.0], [1.699972956E12, 1764.0], [1.699972955E12, 945.0], [1.69997296E12, 5495.0], [1.699972959E12, 4661.0], [1.699972958E12, 3900.0], [1.699972962E12, 7288.0], [1.699972961E12, 6649.0], [1.699972965E12, 9915.0], [1.699972964E12, 8515.0], [1.699972963E12, 8242.0], [1.699972968E12, 12084.0], [1.699972967E12, 10812.0], [1.699972966E12, 10905.0], [1.69997297E12, 12877.0], [1.699972969E12, 12713.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.699972973E12, 13792.800000000001], [1.699972972E12, 13039.0], [1.699972971E12, 12851.1], [1.699972954E12, 12.0], [1.699972975E12, 15172.9], [1.699972953E12, 63.19999999999999], [1.699972974E12, 14747.7], [1.699972957E12, 2240.0], [1.699972956E12, 1508.0], [1.699972955E12, 548.4], [1.69997296E12, 4753.8], [1.699972959E12, 3925.6000000000004], [1.699972958E12, 3175.1000000000004], [1.699972962E12, 6140.8], [1.699972961E12, 5424.5], [1.699972965E12, 8108.0], [1.699972964E12, 7526.7], [1.699972963E12, 6792.799999999999], [1.699972968E12, 10294.6], [1.699972967E12, 9594.9], [1.699972966E12, 8950.6], [1.69997297E12, 11917.5], [1.699972969E12, 10658.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.699972973E12, 15171.849999999995], [1.699972972E12, 14817.24], [1.699972971E12, 14334.310000000009], [1.699972954E12, 19.0], [1.699972975E12, 15280.0], [1.699972953E12, 129.59999999999985], [1.699972974E12, 15898.460000000001], [1.699972957E12, 2736.399999999999], [1.699972956E12, 1755.5], [1.699972955E12, 781.54], [1.69997296E12, 5483.660000000001], [1.699972959E12, 4636.879999999999], [1.699972958E12, 3843.669999999999], [1.699972962E12, 7150.240000000004], [1.699972961E12, 6526.149999999999], [1.699972965E12, 9913.65], [1.699972964E12, 8498.83], [1.699972963E12, 8097.2800000000025], [1.699972968E12, 11803.279999999993], [1.699972967E12, 10794.31], [1.699972966E12, 10471.46], [1.69997297E12, 12826.16], [1.699972969E12, 12518.599999999993]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.699972973E12, 14047.75], [1.699972972E12, 13441.4], [1.699972971E12, 13151.1], [1.699972954E12, 14.0], [1.699972975E12, 15280.0], [1.699972953E12, 91.19999999999993], [1.699972974E12, 15112.35], [1.699972957E12, 2428.0], [1.699972956E12, 1627.0], [1.699972955E12, 630.8999999999999], [1.69997296E12, 5018.5], [1.699972959E12, 4150.2], [1.699972958E12, 3366.5999999999995], [1.699972962E12, 6456.200000000001], [1.699972961E12, 5765.0], [1.699972965E12, 8377.25], [1.699972964E12, 8062.449999999996], [1.699972963E12, 7070.299999999999], [1.699972968E12, 10546.699999999999], [1.699972967E12, 9773.25], [1.699972966E12, 9563.85], [1.69997297E12, 12263.049999999997], [1.699972969E12, 11279.8]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.699972973E12, 12439.0], [1.699972972E12, 11759.0], [1.699972971E12, 11021.0], [1.699972954E12, 5.0], [1.699972975E12, 14108.0], [1.699972953E12, 5.0], [1.699972974E12, 13105.0], [1.699972957E12, 1135.0], [1.699972956E12, 416.0], [1.699972955E12, 6.0], [1.69997296E12, 3312.0], [1.699972959E12, 2614.0], [1.699972958E12, 1819.0], [1.699972962E12, 4668.0], [1.699972961E12, 4004.0], [1.699972965E12, 6800.0], [1.699972964E12, 6087.0], [1.699972963E12, 5394.0], [1.699972968E12, 8897.0], [1.699972967E12, 8207.0], [1.699972966E12, 7507.0], [1.69997297E12, 10304.0], [1.699972969E12, 9609.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.699972973E12, 13058.5], [1.699972972E12, 12351.0], [1.699972971E12, 11728.5], [1.699972954E12, 8.0], [1.699972975E12, 14747.5], [1.699972953E12, 8.0], [1.699972974E12, 14035.5], [1.699972957E12, 1719.0], [1.699972956E12, 1011.0], [1.699972955E12, 112.0], [1.69997296E12, 3895.0], [1.699972959E12, 3235.0], [1.699972958E12, 2527.5], [1.699972962E12, 5293.0], [1.699972961E12, 4573.0], [1.699972965E12, 7386.0], [1.699972964E12, 6685.5], [1.699972963E12, 5999.0], [1.699972968E12, 9453.0], [1.699972967E12, 8891.0], [1.699972966E12, 8078.0], [1.69997297E12, 10945.0], [1.699972969E12, 10120.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699972975E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 18.0, "maxY": 14747.5, "series": [{"data": [[135.0, 7135.0], [130.0, 10945.0], [139.0, 1719.0], [142.0, 8169.5], [141.0, 4870.5], [600.0, 8.0], [149.0, 1011.0], [148.0, 6685.5], [144.0, 7386.0], [153.0, 5999.0], [152.0, 8078.0], [157.0, 9453.0], [156.0, 11728.5], [155.0, 12351.0], [164.0, 4573.0], [160.0, 8891.0], [205.0, 112.0], [212.0, 14035.5], [18.0, 14747.5], [327.0, 8.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 600.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 18.0, "maxY": 14747.5, "series": [{"data": [[135.0, 7135.0], [130.0, 10945.0], [139.0, 1719.0], [142.0, 8169.5], [141.0, 4870.5], [600.0, 8.0], [149.0, 1011.0], [148.0, 6685.5], [144.0, 7386.0], [153.0, 5999.0], [152.0, 8078.0], [157.0, 9453.0], [156.0, 11728.5], [155.0, 12351.0], [164.0, 4572.5], [160.0, 8891.0], [205.0, 112.0], [212.0, 14035.5], [18.0, 14747.5], [327.0, 8.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 600.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 330.0, "minX": 1.699972953E12, "maxY": 601.0, "series": [{"data": [[1.699972954E12, 601.0], [1.699972953E12, 330.0], [1.699972957E12, 500.0], [1.699972956E12, 502.0], [1.699972955E12, 597.0], [1.69997296E12, 479.0], [1.699972959E12, 497.0], [1.699972958E12, 499.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.69997296E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 18.0, "minX": 1.699972953E12, "maxY": 600.0, "series": [{"data": [[1.699972973E12, 142.0], [1.699972972E12, 155.0], [1.699972971E12, 156.0], [1.699972954E12, 600.0], [1.699972975E12, 18.0], [1.699972953E12, 327.0], [1.699972974E12, 212.0], [1.699972957E12, 139.0], [1.699972956E12, 149.0], [1.699972955E12, 205.0], [1.69997296E12, 141.0], [1.699972959E12, 135.0], [1.699972958E12, 142.0], [1.699972962E12, 141.0], [1.699972961E12, 164.0], [1.699972965E12, 144.0], [1.699972964E12, 148.0], [1.699972963E12, 153.0], [1.699972968E12, 157.0], [1.699972967E12, 160.0], [1.699972966E12, 152.0], [1.69997297E12, 130.0], [1.699972969E12, 135.0]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699972975E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 18.0, "minX": 1.699972953E12, "maxY": 600.0, "series": [{"data": [[1.699972973E12, 142.0], [1.699972972E12, 155.0], [1.699972971E12, 156.0], [1.699972954E12, 600.0], [1.699972975E12, 18.0], [1.699972953E12, 327.0], [1.699972974E12, 212.0], [1.699972957E12, 139.0], [1.699972956E12, 149.0], [1.699972955E12, 205.0], [1.69997296E12, 141.0], [1.699972959E12, 135.0], [1.699972958E12, 142.0], [1.699972962E12, 141.0], [1.699972961E12, 164.0], [1.699972965E12, 144.0], [1.699972964E12, 148.0], [1.699972963E12, 153.0], [1.699972968E12, 157.0], [1.699972967E12, 160.0], [1.699972966E12, 152.0], [1.69997297E12, 130.0], [1.699972969E12, 135.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699972975E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 18.0, "minX": 1.699972953E12, "maxY": 600.0, "series": [{"data": [[1.699972973E12, 142.0], [1.699972972E12, 155.0], [1.699972971E12, 156.0], [1.699972954E12, 600.0], [1.699972975E12, 18.0], [1.699972953E12, 327.0], [1.699972974E12, 212.0], [1.699972957E12, 139.0], [1.699972956E12, 149.0], [1.699972955E12, 205.0], [1.69997296E12, 141.0], [1.699972959E12, 135.0], [1.699972958E12, 142.0], [1.699972962E12, 141.0], [1.699972961E12, 164.0], [1.699972965E12, 144.0], [1.699972964E12, 148.0], [1.699972963E12, 153.0], [1.699972968E12, 157.0], [1.699972967E12, 160.0], [1.699972966E12, 152.0], [1.69997297E12, 130.0], [1.699972969E12, 135.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699972975E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

