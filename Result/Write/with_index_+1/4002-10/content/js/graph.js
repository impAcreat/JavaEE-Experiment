/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 16692.0, "series": [{"data": [[0.0, 5.0], [0.1, 5.0], [0.2, 6.0], [0.3, 6.0], [0.4, 6.0], [0.5, 6.0], [0.6, 6.0], [0.7, 6.0], [0.8, 6.0], [0.9, 6.0], [1.0, 6.0], [1.1, 6.0], [1.2, 6.0], [1.3, 6.0], [1.4, 6.0], [1.5, 6.0], [1.6, 6.0], [1.7, 6.0], [1.8, 6.0], [1.9, 6.0], [2.0, 6.0], [2.1, 6.0], [2.2, 6.0], [2.3, 6.0], [2.4, 6.0], [2.5, 7.0], [2.6, 7.0], [2.7, 7.0], [2.8, 7.0], [2.9, 7.0], [3.0, 7.0], [3.1, 7.0], [3.2, 7.0], [3.3, 7.0], [3.4, 7.0], [3.5, 7.0], [3.6, 7.0], [3.7, 7.0], [3.8, 7.0], [3.9, 7.0], [4.0, 7.0], [4.1, 7.0], [4.2, 7.0], [4.3, 7.0], [4.4, 7.0], [4.5, 7.0], [4.6, 7.0], [4.7, 7.0], [4.8, 7.0], [4.9, 7.0], [5.0, 7.0], [5.1, 7.0], [5.2, 7.0], [5.3, 7.0], [5.4, 7.0], [5.5, 7.0], [5.6, 7.0], [5.7, 7.0], [5.8, 7.0], [5.9, 7.0], [6.0, 7.0], [6.1, 7.0], [6.2, 7.0], [6.3, 7.0], [6.4, 7.0], [6.5, 7.0], [6.6, 7.0], [6.7, 7.0], [6.8, 7.0], [6.9, 7.0], [7.0, 7.0], [7.1, 7.0], [7.2, 7.0], [7.3, 8.0], [7.4, 8.0], [7.5, 8.0], [7.6, 8.0], [7.7, 8.0], [7.8, 8.0], [7.9, 8.0], [8.0, 8.0], [8.1, 8.0], [8.2, 8.0], [8.3, 8.0], [8.4, 8.0], [8.5, 8.0], [8.6, 8.0], [8.7, 8.0], [8.8, 8.0], [8.9, 8.0], [9.0, 8.0], [9.1, 8.0], [9.2, 8.0], [9.3, 8.0], [9.4, 8.0], [9.5, 8.0], [9.6, 8.0], [9.7, 8.0], [9.8, 8.0], [9.9, 8.0], [10.0, 8.0], [10.1, 8.0], [10.2, 8.0], [10.3, 8.0], [10.4, 8.0], [10.5, 8.0], [10.6, 8.0], [10.7, 8.0], [10.8, 8.0], [10.9, 8.0], [11.0, 8.0], [11.1, 8.0], [11.2, 8.0], [11.3, 8.0], [11.4, 8.0], [11.5, 8.0], [11.6, 8.0], [11.7, 9.0], [11.8, 9.0], [11.9, 9.0], [12.0, 9.0], [12.1, 9.0], [12.2, 9.0], [12.3, 9.0], [12.4, 9.0], [12.5, 9.0], [12.6, 9.0], [12.7, 9.0], [12.8, 9.0], [12.9, 9.0], [13.0, 9.0], [13.1, 9.0], [13.2, 9.0], [13.3, 9.0], [13.4, 9.0], [13.5, 9.0], [13.6, 9.0], [13.7, 9.0], [13.8, 9.0], [13.9, 9.0], [14.0, 9.0], [14.1, 9.0], [14.2, 9.0], [14.3, 9.0], [14.4, 9.0], [14.5, 9.0], [14.6, 9.0], [14.7, 9.0], [14.8, 9.0], [14.9, 9.0], [15.0, 9.0], [15.1, 10.0], [15.2, 10.0], [15.3, 10.0], [15.4, 10.0], [15.5, 10.0], [15.6, 10.0], [15.7, 10.0], [15.8, 10.0], [15.9, 10.0], [16.0, 10.0], [16.1, 10.0], [16.2, 10.0], [16.3, 10.0], [16.4, 10.0], [16.5, 10.0], [16.6, 11.0], [16.7, 11.0], [16.8, 11.0], [16.9, 11.0], [17.0, 11.0], [17.1, 11.0], [17.2, 11.0], [17.3, 11.0], [17.4, 11.0], [17.5, 11.0], [17.6, 11.0], [17.7, 11.0], [17.8, 11.0], [17.9, 12.0], [18.0, 12.0], [18.1, 12.0], [18.2, 12.0], [18.3, 12.0], [18.4, 12.0], [18.5, 12.0], [18.6, 13.0], [18.7, 13.0], [18.8, 13.0], [18.9, 13.0], [19.0, 13.0], [19.1, 13.0], [19.2, 14.0], [19.3, 14.0], [19.4, 14.0], [19.5, 15.0], [19.6, 15.0], [19.7, 15.0], [19.8, 16.0], [19.9, 16.0], [20.0, 17.0], [20.1, 17.0], [20.2, 18.0], [20.3, 20.0], [20.4, 22.0], [20.5, 26.0], [20.6, 27.0], [20.7, 28.0], [20.8, 30.0], [20.9, 31.0], [21.0, 34.0], [21.1, 36.0], [21.2, 38.0], [21.3, 39.0], [21.4, 41.0], [21.5, 42.0], [21.6, 45.0], [21.7, 45.0], [21.8, 49.0], [21.9, 51.0], [22.0, 54.0], [22.1, 54.0], [22.2, 55.0], [22.3, 60.0], [22.4, 62.0], [22.5, 63.0], [22.6, 64.0], [22.7, 64.0], [22.8, 67.0], [22.9, 69.0], [23.0, 70.0], [23.1, 73.0], [23.2, 78.0], [23.3, 83.0], [23.4, 85.0], [23.5, 91.0], [23.6, 93.0], [23.7, 101.0], [23.8, 106.0], [23.9, 110.0], [24.0, 115.0], [24.1, 121.0], [24.2, 126.0], [24.3, 132.0], [24.4, 140.0], [24.5, 165.0], [24.6, 171.0], [24.7, 177.0], [24.8, 183.0], [24.9, 215.0], [25.0, 227.0], [25.1, 233.0], [25.2, 264.0], [25.3, 282.0], [25.4, 315.0], [25.5, 338.0], [25.6, 350.0], [25.7, 363.0], [25.8, 383.0], [25.9, 392.0], [26.0, 416.0], [26.1, 453.0], [26.2, 489.0], [26.3, 519.0], [26.4, 552.0], [26.5, 565.0], [26.6, 617.0], [26.7, 640.0], [26.8, 697.0], [26.9, 703.0], [27.0, 747.0], [27.1, 759.0], [27.2, 768.0], [27.3, 794.0], [27.4, 832.0], [27.5, 847.0], [27.6, 860.0], [27.7, 914.0], [27.8, 915.0], [27.9, 932.0], [28.0, 953.0], [28.1, 997.0], [28.2, 1015.0], [28.3, 1043.0], [28.4, 1075.0], [28.5, 1089.0], [28.6, 1099.0], [28.7, 1131.0], [28.8, 1137.0], [28.9, 1168.0], [29.0, 1189.0], [29.1, 1226.0], [29.2, 1249.0], [29.3, 1266.0], [29.4, 1302.0], [29.5, 1306.0], [29.6, 1328.0], [29.7, 1374.0], [29.8, 1386.0], [29.9, 1411.0], [30.0, 1450.0], [30.1, 1457.0], [30.2, 1473.0], [30.3, 1491.0], [30.4, 1507.0], [30.5, 1513.0], [30.6, 1536.0], [30.7, 1543.0], [30.8, 1563.0], [30.9, 1599.0], [31.0, 1630.0], [31.1, 1650.0], [31.2, 1660.0], [31.3, 1666.0], [31.4, 1688.0], [31.5, 1695.0], [31.6, 1711.0], [31.7, 1742.0], [31.8, 1764.0], [31.9, 1776.0], [32.0, 1798.0], [32.1, 1831.0], [32.2, 1864.0], [32.3, 1884.0], [32.4, 1918.0], [32.5, 1929.0], [32.6, 1940.0], [32.7, 1958.0], [32.8, 1964.0], [32.9, 1998.0], [33.0, 2017.0], [33.1, 2028.0], [33.2, 2046.0], [33.3, 2065.0], [33.4, 2098.0], [33.5, 2109.0], [33.6, 2142.0], [33.7, 2155.0], [33.8, 2167.0], [33.9, 2185.0], [34.0, 2195.0], [34.1, 2213.0], [34.2, 2246.0], [34.3, 2259.0], [34.4, 2268.0], [34.5, 2279.0], [34.6, 2308.0], [34.7, 2336.0], [34.8, 2338.0], [34.9, 2350.0], [35.0, 2362.0], [35.1, 2374.0], [35.2, 2388.0], [35.3, 2408.0], [35.4, 2420.0], [35.5, 2434.0], [35.6, 2445.0], [35.7, 2495.0], [35.8, 2511.0], [35.9, 2521.0], [36.0, 2545.0], [36.1, 2573.0], [36.2, 2580.0], [36.3, 2587.0], [36.4, 2602.0], [36.5, 2632.0], [36.6, 2638.0], [36.7, 2646.0], [36.8, 2654.0], [36.9, 2672.0], [37.0, 2687.0], [37.1, 2702.0], [37.2, 2719.0], [37.3, 2725.0], [37.4, 2748.0], [37.5, 2811.0], [37.6, 2833.0], [37.7, 2869.0], [37.8, 2873.0], [37.9, 2906.0], [38.0, 2949.0], [38.1, 2971.0], [38.2, 2986.0], [38.3, 3001.0], [38.4, 3029.0], [38.5, 3055.0], [38.6, 3090.0], [38.7, 3132.0], [38.8, 3147.0], [38.9, 3185.0], [39.0, 3205.0], [39.1, 3219.0], [39.2, 3243.0], [39.3, 3266.0], [39.4, 3286.0], [39.5, 3303.0], [39.6, 3314.0], [39.7, 3336.0], [39.8, 3366.0], [39.9, 3389.0], [40.0, 3418.0], [40.1, 3453.0], [40.2, 3479.0], [40.3, 3496.0], [40.4, 3513.0], [40.5, 3517.0], [40.6, 3525.0], [40.7, 3539.0], [40.8, 3547.0], [40.9, 3578.0], [41.0, 3610.0], [41.1, 3615.0], [41.2, 3653.0], [41.3, 3674.0], [41.4, 3684.0], [41.5, 3696.0], [41.6, 3705.0], [41.7, 3748.0], [41.8, 3768.0], [41.9, 3799.0], [42.0, 3826.0], [42.1, 3843.0], [42.2, 3864.0], [42.3, 3881.0], [42.4, 3905.0], [42.5, 3914.0], [42.6, 3926.0], [42.7, 3935.0], [42.8, 3963.0], [42.9, 3975.0], [43.0, 3986.0], [43.1, 3990.0], [43.2, 4007.0], [43.3, 4055.0], [43.4, 4081.0], [43.5, 4087.0], [43.6, 4106.0], [43.7, 4133.0], [43.8, 4169.0], [43.9, 4184.0], [44.0, 4205.0], [44.1, 4220.0], [44.2, 4237.0], [44.3, 4246.0], [44.4, 4267.0], [44.5, 4280.0], [44.6, 4313.0], [44.7, 4323.0], [44.8, 4341.0], [44.9, 4352.0], [45.0, 4358.0], [45.1, 4366.0], [45.2, 4374.0], [45.3, 4402.0], [45.4, 4418.0], [45.5, 4454.0], [45.6, 4484.0], [45.7, 4494.0], [45.8, 4501.0], [45.9, 4511.0], [46.0, 4531.0], [46.1, 4547.0], [46.2, 4566.0], [46.3, 4573.0], [46.4, 4584.0], [46.5, 4597.0], [46.6, 4611.0], [46.7, 4647.0], [46.8, 4678.0], [46.9, 4718.0], [47.0, 4733.0], [47.1, 4750.0], [47.2, 4753.0], [47.3, 4779.0], [47.4, 4789.0], [47.5, 4808.0], [47.6, 4811.0], [47.7, 4861.0], [47.8, 4882.0], [47.9, 4918.0], [48.0, 4937.0], [48.1, 4943.0], [48.2, 4985.0], [48.3, 5002.0], [48.4, 5029.0], [48.5, 5040.0], [48.6, 5056.0], [48.7, 5065.0], [48.8, 5080.0], [48.9, 5119.0], [49.0, 5142.0], [49.1, 5159.0], [49.2, 5164.0], [49.3, 5170.0], [49.4, 5186.0], [49.5, 5213.0], [49.6, 5225.0], [49.7, 5245.0], [49.8, 5260.0], [49.9, 5274.0], [50.0, 5301.0], [50.1, 5326.0], [50.2, 5328.0], [50.3, 5356.0], [50.4, 5376.0], [50.5, 5390.0], [50.6, 5420.0], [50.7, 5451.0], [50.8, 5468.0], [50.9, 5487.0], [51.0, 5504.0], [51.1, 5514.0], [51.2, 5533.0], [51.3, 5546.0], [51.4, 5580.0], [51.5, 5595.0], [51.6, 5598.0], [51.7, 5619.0], [51.8, 5656.0], [51.9, 5679.0], [52.0, 5707.0], [52.1, 5725.0], [52.2, 5729.0], [52.3, 5749.0], [52.4, 5767.0], [52.5, 5782.0], [52.6, 5802.0], [52.7, 5807.0], [52.8, 5834.0], [52.9, 5852.0], [53.0, 5864.0], [53.1, 5882.0], [53.2, 5888.0], [53.3, 5902.0], [53.4, 5939.0], [53.5, 5948.0], [53.6, 5977.0], [53.7, 5983.0], [53.8, 5986.0], [53.9, 6014.0], [54.0, 6032.0], [54.1, 6040.0], [54.2, 6058.0], [54.3, 6079.0], [54.4, 6100.0], [54.5, 6129.0], [54.6, 6149.0], [54.7, 6179.0], [54.8, 6209.0], [54.9, 6231.0], [55.0, 6238.0], [55.1, 6267.0], [55.2, 6280.0], [55.3, 6334.0], [55.4, 6343.0], [55.5, 6357.0], [55.6, 6369.0], [55.7, 6380.0], [55.8, 6385.0], [55.9, 6410.0], [56.0, 6444.0], [56.1, 6466.0], [56.2, 6478.0], [56.3, 6502.0], [56.4, 6511.0], [56.5, 6538.0], [56.6, 6557.0], [56.7, 6562.0], [56.8, 6581.0], [56.9, 6604.0], [57.0, 6640.0], [57.1, 6657.0], [57.2, 6672.0], [57.3, 6703.0], [57.4, 6712.0], [57.5, 6724.0], [57.6, 6745.0], [57.7, 6764.0], [57.8, 6772.0], [57.9, 6784.0], [58.0, 6813.0], [58.1, 6823.0], [58.2, 6859.0], [58.3, 6868.0], [58.4, 6873.0], [58.5, 6886.0], [58.6, 6915.0], [58.7, 6926.0], [58.8, 6944.0], [58.9, 6950.0], [59.0, 6968.0], [59.1, 6985.0], [59.2, 7010.0], [59.3, 7026.0], [59.4, 7034.0], [59.5, 7053.0], [59.6, 7062.0], [59.7, 7072.0], [59.8, 7094.0], [59.9, 7109.0], [60.0, 7131.0], [60.1, 7164.0], [60.2, 7183.0], [60.3, 7207.0], [60.4, 7211.0], [60.5, 7229.0], [60.6, 7255.0], [60.7, 7269.0], [60.8, 7314.0], [60.9, 7346.0], [61.0, 7356.0], [61.1, 7363.0], [61.2, 7373.0], [61.3, 7381.0], [61.4, 7397.0], [61.5, 7414.0], [61.6, 7422.0], [61.7, 7445.0], [61.8, 7461.0], [61.9, 7465.0], [62.0, 7488.0], [62.1, 7511.0], [62.2, 7541.0], [62.3, 7558.0], [62.4, 7569.0], [62.5, 7585.0], [62.6, 7607.0], [62.7, 7629.0], [62.8, 7643.0], [62.9, 7653.0], [63.0, 7673.0], [63.1, 7693.0], [63.2, 7714.0], [63.3, 7743.0], [63.4, 7750.0], [63.5, 7767.0], [63.6, 7778.0], [63.7, 7810.0], [63.8, 7826.0], [63.9, 7837.0], [64.0, 7850.0], [64.1, 7869.0], [64.2, 7880.0], [64.3, 7894.0], [64.4, 7908.0], [64.5, 7921.0], [64.6, 7937.0], [64.7, 7954.0], [64.8, 7967.0], [64.9, 7998.0], [65.0, 8018.0], [65.1, 8036.0], [65.2, 8044.0], [65.3, 8057.0], [65.4, 8074.0], [65.5, 8104.0], [65.6, 8110.0], [65.7, 8123.0], [65.8, 8126.0], [65.9, 8138.0], [66.0, 8148.0], [66.1, 8166.0], [66.2, 8192.0], [66.3, 8201.0], [66.4, 8210.0], [66.5, 8264.0], [66.6, 8270.0], [66.7, 8299.0], [66.8, 8317.0], [66.9, 8327.0], [67.0, 8356.0], [67.1, 8382.0], [67.2, 8418.0], [67.3, 8452.0], [67.4, 8468.0], [67.5, 8516.0], [67.6, 8532.0], [67.7, 8537.0], [67.8, 8544.0], [67.9, 8554.0], [68.0, 8559.0], [68.1, 8586.0], [68.2, 8621.0], [68.3, 8628.0], [68.4, 8648.0], [68.5, 8670.0], [68.6, 8693.0], [68.7, 8713.0], [68.8, 8716.0], [68.9, 8737.0], [69.0, 8758.0], [69.1, 8766.0], [69.2, 8774.0], [69.3, 8781.0], [69.4, 8789.0], [69.5, 8800.0], [69.6, 8816.0], [69.7, 8837.0], [69.8, 8846.0], [69.9, 8853.0], [70.0, 8866.0], [70.1, 8904.0], [70.2, 8922.0], [70.3, 8945.0], [70.4, 8970.0], [70.5, 8994.0], [70.6, 9021.0], [70.7, 9027.0], [70.8, 9076.0], [70.9, 9094.0], [71.0, 9117.0], [71.1, 9135.0], [71.2, 9142.0], [71.3, 9164.0], [71.4, 9177.0], [71.5, 9192.0], [71.6, 9198.0], [71.7, 9220.0], [71.8, 9245.0], [71.9, 9267.0], [72.0, 9273.0], [72.1, 9289.0], [72.2, 9311.0], [72.3, 9329.0], [72.4, 9345.0], [72.5, 9370.0], [72.6, 9385.0], [72.7, 9399.0], [72.8, 9432.0], [72.9, 9448.0], [73.0, 9466.0], [73.1, 9489.0], [73.2, 9508.0], [73.3, 9541.0], [73.4, 9545.0], [73.5, 9576.0], [73.6, 9590.0], [73.7, 9597.0], [73.8, 9601.0], [73.9, 9616.0], [74.0, 9621.0], [74.1, 9641.0], [74.2, 9656.0], [74.3, 9677.0], [74.4, 9694.0], [74.5, 9703.0], [74.6, 9724.0], [74.7, 9734.0], [74.8, 9740.0], [74.9, 9773.0], [75.0, 9782.0], [75.1, 9797.0], [75.2, 9809.0], [75.3, 9820.0], [75.4, 9834.0], [75.5, 9849.0], [75.6, 9859.0], [75.7, 9888.0], [75.8, 9909.0], [75.9, 9923.0], [76.0, 9931.0], [76.1, 9939.0], [76.2, 9951.0], [76.3, 9974.0], [76.4, 9994.0], [76.5, 10015.0], [76.6, 10025.0], [76.7, 10057.0], [76.8, 10076.0], [76.9, 10087.0], [77.0, 10102.0], [77.1, 10124.0], [77.2, 10138.0], [77.3, 10153.0], [77.4, 10155.0], [77.5, 10175.0], [77.6, 10205.0], [77.7, 10228.0], [77.8, 10246.0], [77.9, 10256.0], [78.0, 10265.0], [78.1, 10281.0], [78.2, 10292.0], [78.3, 10301.0], [78.4, 10307.0], [78.5, 10346.0], [78.6, 10372.0], [78.7, 10385.0], [78.8, 10401.0], [78.9, 10432.0], [79.0, 10450.0], [79.1, 10464.0], [79.2, 10489.0], [79.3, 10511.0], [79.4, 10518.0], [79.5, 10533.0], [79.6, 10551.0], [79.7, 10581.0], [79.8, 10620.0], [79.9, 10664.0], [80.0, 10672.0], [80.1, 10679.0], [80.2, 10747.0], [80.3, 10768.0], [80.4, 10786.0], [80.5, 10805.0], [80.6, 10827.0], [80.7, 10850.0], [80.8, 10856.0], [80.9, 10864.0], [81.0, 10913.0], [81.1, 10926.0], [81.2, 10946.0], [81.3, 10981.0], [81.4, 11012.0], [81.5, 11034.0], [81.6, 11046.0], [81.7, 11056.0], [81.8, 11076.0], [81.9, 11100.0], [82.0, 11125.0], [82.1, 11138.0], [82.2, 11151.0], [82.3, 11165.0], [82.4, 11175.0], [82.5, 11196.0], [82.6, 11218.0], [82.7, 11228.0], [82.8, 11251.0], [82.9, 11261.0], [83.0, 11287.0], [83.1, 11314.0], [83.2, 11324.0], [83.3, 11349.0], [83.4, 11358.0], [83.5, 11375.0], [83.6, 11410.0], [83.7, 11416.0], [83.8, 11427.0], [83.9, 11452.0], [84.0, 11477.0], [84.1, 11501.0], [84.2, 11521.0], [84.3, 11557.0], [84.4, 11563.0], [84.5, 11596.0], [84.6, 11623.0], [84.7, 11640.0], [84.8, 11682.0], [84.9, 11699.0], [85.0, 11707.0], [85.1, 11721.0], [85.2, 11749.0], [85.3, 11770.0], [85.4, 11780.0], [85.5, 11797.0], [85.6, 11816.0], [85.7, 11829.0], [85.8, 11838.0], [85.9, 11842.0], [86.0, 11857.0], [86.1, 11880.0], [86.2, 11898.0], [86.3, 11918.0], [86.4, 11939.0], [86.5, 11959.0], [86.6, 11973.0], [86.7, 11981.0], [86.8, 12001.0], [86.9, 12017.0], [87.0, 12031.0], [87.1, 12050.0], [87.2, 12065.0], [87.3, 12070.0], [87.4, 12081.0], [87.5, 12100.0], [87.6, 12107.0], [87.7, 12126.0], [87.8, 12139.0], [87.9, 12167.0], [88.0, 12205.0], [88.1, 12228.0], [88.2, 12242.0], [88.3, 12259.0], [88.4, 12273.0], [88.5, 12300.0], [88.6, 12313.0], [88.7, 12341.0], [88.8, 12351.0], [88.9, 12364.0], [89.0, 12397.0], [89.1, 12415.0], [89.2, 12432.0], [89.3, 12442.0], [89.4, 12467.0], [89.5, 12484.0], [89.6, 12506.0], [89.7, 12516.0], [89.8, 12528.0], [89.9, 12543.0], [90.0, 12555.0], [90.1, 12576.0], [90.2, 12590.0], [90.3, 12601.0], [90.4, 12619.0], [90.5, 12626.0], [90.6, 12639.0], [90.7, 12650.0], [90.8, 12669.0], [90.9, 12690.0], [91.0, 12701.0], [91.1, 12714.0], [91.2, 12729.0], [91.3, 12745.0], [91.4, 12769.0], [91.5, 12797.0], [91.6, 12806.0], [91.7, 12842.0], [91.8, 12855.0], [91.9, 12862.0], [92.0, 12898.0], [92.1, 12902.0], [92.2, 12921.0], [92.3, 12944.0], [92.4, 12968.0], [92.5, 12974.0], [92.6, 12982.0], [92.7, 13002.0], [92.8, 13021.0], [92.9, 13053.0], [93.0, 13078.0], [93.1, 13112.0], [93.2, 13152.0], [93.3, 13173.0], [93.4, 13202.0], [93.5, 13216.0], [93.6, 13274.0], [93.7, 13283.0], [93.8, 13295.0], [93.9, 13315.0], [94.0, 13331.0], [94.1, 13357.0], [94.2, 13381.0], [94.3, 13409.0], [94.4, 13439.0], [94.5, 13461.0], [94.6, 13487.0], [94.7, 13516.0], [94.8, 13532.0], [94.9, 13551.0], [95.0, 13560.0], [95.1, 13593.0], [95.2, 13608.0], [95.3, 13653.0], [95.4, 13665.0], [95.5, 13686.0], [95.6, 13700.0], [95.7, 13724.0], [95.8, 13733.0], [95.9, 13757.0], [96.0, 13775.0], [96.1, 13782.0], [96.2, 13791.0], [96.3, 13810.0], [96.4, 13821.0], [96.5, 13858.0], [96.6, 13877.0], [96.7, 13889.0], [96.8, 13924.0], [96.9, 13932.0], [97.0, 13940.0], [97.1, 13953.0], [97.2, 13970.0], [97.3, 13985.0], [97.4, 14013.0], [97.5, 14024.0], [97.6, 14045.0], [97.7, 14053.0], [97.8, 14087.0], [97.9, 14111.0], [98.0, 14124.0], [98.1, 14152.0], [98.2, 14205.0], [98.3, 14233.0], [98.4, 14258.0], [98.5, 14281.0], [98.6, 14306.0], [98.7, 14358.0], [98.8, 14395.0], [98.9, 14430.0], [99.0, 14477.0], [99.1, 14569.0], [99.2, 14631.0], [99.3, 14667.0], [99.4, 14711.0], [99.5, 14849.0], [99.6, 15035.0], [99.7, 15103.0], [99.8, 15321.0], [99.9, 15614.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 948.0, "series": [{"data": [[0.0, 948.0], [100.0, 47.0], [200.0, 20.0], [300.0, 24.0], [400.0, 13.0], [500.0, 11.0], [600.0, 10.0], [700.0, 21.0], [800.0, 13.0], [900.0, 19.0], [1000.0, 19.0], [1100.0, 19.0], [1200.0, 12.0], [1300.0, 19.0], [1400.0, 21.0], [1500.0, 21.0], [1600.0, 25.0], [1700.0, 20.0], [1800.0, 13.0], [1900.0, 22.0], [2000.0, 22.0], [2100.0, 23.0], [2200.0, 22.0], [2300.0, 26.0], [2400.0, 20.0], [2500.0, 26.0], [2600.0, 28.0], [2800.0, 17.0], [2700.0, 15.0], [2900.0, 16.0], [3000.0, 14.0], [3100.0, 14.0], [3200.0, 20.0], [3300.0, 18.0], [3400.0, 16.0], [3500.0, 25.0], [3600.0, 23.0], [3700.0, 15.0], [3800.0, 18.0], [3900.0, 31.0], [4000.0, 18.0], [4100.0, 16.0], [4300.0, 29.0], [4200.0, 23.0], [4500.0, 31.0], [4400.0, 19.0], [4600.0, 13.0], [4800.0, 18.0], [4700.0, 23.0], [4900.0, 16.0], [5000.0, 24.0], [5100.0, 23.0], [5200.0, 22.0], [5300.0, 21.0], [5400.0, 19.0], [5500.0, 26.0], [5600.0, 13.0], [5700.0, 25.0], [5800.0, 27.0], [5900.0, 23.0], [6100.0, 16.0], [6000.0, 22.0], [6300.0, 25.0], [6200.0, 18.0], [6500.0, 24.0], [6600.0, 16.0], [6400.0, 17.0], [6700.0, 27.0], [6800.0, 23.0], [6900.0, 25.0], [7000.0, 26.0], [7100.0, 19.0], [7400.0, 25.0], [7200.0, 20.0], [7300.0, 26.0], [7600.0, 24.0], [7500.0, 19.0], [7900.0, 22.0], [7700.0, 21.0], [7800.0, 28.0], [8000.0, 23.0], [8100.0, 31.0], [8200.0, 18.0], [8700.0, 35.0], [8400.0, 13.0], [8500.0, 25.0], [8300.0, 18.0], [8600.0, 20.0], [8900.0, 17.0], [8800.0, 24.0], [9200.0, 22.0], [9100.0, 27.0], [9000.0, 17.0], [9500.0, 22.0], [9600.0, 28.0], [9300.0, 22.0], [9700.0, 27.0], [9400.0, 19.0], [9900.0, 28.0], [9800.0, 26.0], [10100.0, 24.0], [10200.0, 27.0], [10000.0, 21.0], [10500.0, 19.0], [10400.0, 19.0], [10300.0, 21.0], [10600.0, 16.0], [10700.0, 14.0], [11100.0, 27.0], [10900.0, 15.0], [11200.0, 19.0], [10800.0, 20.0], [11000.0, 21.0], [11600.0, 16.0], [11300.0, 22.0], [11700.0, 24.0], [11400.0, 20.0], [11500.0, 17.0], [11800.0, 28.0], [12100.0, 20.0], [12000.0, 28.0], [11900.0, 23.0], [12200.0, 19.0], [12300.0, 22.0], [12400.0, 23.0], [12600.0, 26.0], [12500.0, 28.0], [12700.0, 23.0], [13200.0, 18.0], [12800.0, 22.0], [13300.0, 18.0], [13000.0, 15.0], [13100.0, 13.0], [12900.0, 25.0], [13500.0, 22.0], [13700.0, 26.0], [13400.0, 13.0], [13600.0, 17.0], [13800.0, 19.0], [13900.0, 26.0], [14000.0, 20.0], [14200.0, 17.0], [14100.0, 12.0], [14300.0, 9.0], [14600.0, 9.0], [14400.0, 9.0], [14800.0, 4.0], [14700.0, 2.0], [14500.0, 4.0], [15200.0, 2.0], [15100.0, 2.0], [15000.0, 6.0], [14900.0, 1.0], [15300.0, 4.0], [15700.0, 1.0], [15600.0, 2.0], [16200.0, 1.0], [16600.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 16600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 164.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2786.0, "series": [{"data": [[0.0, 1052.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 164.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2786.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 4.737789203084835, "minX": 1.699973062E12, "maxY": 2128.7142857142853, "series": [{"data": [[1.69997308E12, 683.6095890410962], [1.699973079E12, 833.1176470588239], [1.699973078E12, 985.0794701986753], [1.699973082E12, 381.09677419354847], [1.699973081E12, 534.6250000000002], [1.699973064E12, 18.53585657370517], [1.699973063E12, 4.737789203084835], [1.699973084E12, 72.72916666666661], [1.699973062E12, 10.760000000000003], [1.699973083E12, 224.11949685534591], [1.699973066E12, 780.5695364238414], [1.699973065E12, 382.51408450704207], [1.699973069E12, 1826.253246753247], [1.699973068E12, 1433.09090909091], [1.699973067E12, 1116.4371257485036], [1.699973072E12, 1914.0915032679743], [1.699973071E12, 2067.1437908496728], [1.69997307E12, 2128.7142857142853], [1.699973074E12, 1608.6184210526314], [1.699973073E12, 1761.0718954248362], [1.699973077E12, 1137.1045751633987], [1.699973076E12, 1290.0849673202615], [1.699973075E12, 1449.6084337349405]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699973084E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 6.0, "minX": 1.0, "maxY": 16692.0, "series": [{"data": [[2.0, 673.7209302325582], [3.0, 9.160714285714286], [4.0, 218.35555555555555], [5.0, 99.14375000000001], [6.0, 109.82142857142858], [7.0, 158.58064516129033], [8.0, 10.47457627118644], [9.0, 836.4117647058824], [10.0, 746.7894736842105], [11.0, 1286.8181818181818], [12.0, 2264.8571428571427], [13.0, 1972.0], [14.0, 7285.5], [15.0, 4747.333333333333], [16.0, 4833.0], [17.0, 4915.666666666667], [18.0, 3891.75], [19.0, 3599.25], [20.0, 4691.0], [21.0, 31.6], [22.0, 7444.0], [23.0, 2214.5714285714284], [24.0, 7152.5], [25.0, 4710.0], [26.0, 1788.625], [27.0, 4098.0], [28.0, 1928.25], [29.0, 36.142857142857146], [30.0, 7144.5], [31.0, 1797.125], [33.0, 50.0], [32.0, 4711.666666666667], [35.0, 4918.666666666667], [34.0, 1824.875], [37.0, 7134.0], [39.0, 10691.25], [41.0, 14306.0], [40.0, 14667.0], [43.0, 14445.0], [42.0, 14248.0], [45.0, 5829.4], [47.0, 49.0], [46.0, 2028.7142857142858], [49.0, 2833.0], [48.0, 3536.25], [50.0, 82.5], [51.0, 14248.0], [53.0, 9.0], [52.0, 14355.0], [54.0, 9376.333333333334], [56.0, 14469.0], [59.0, 7340.0], [58.0, 14299.0], [61.0, 3592.5], [60.0, 6988.5], [62.0, 4756.333333333333], [63.0, 4735.333333333333], [67.0, 27.0], [66.0, 13980.0], [65.0, 13769.0], [64.0, 14200.0], [71.0, 13869.0], [70.0, 16692.0], [69.0, 14367.666666666666], [75.0, 14152.0], [74.0, 13733.0], [73.0, 15342.0], [72.0, 13863.0], [79.0, 14031.0], [78.0, 13810.0], [77.0, 13743.0], [76.0, 14097.0], [82.0, 2817.6], [83.0, 2808.4], [80.0, 6952.0], [81.0, 14246.0], [84.0, 3801.0], [85.0, 2816.6], [87.0, 5056.666666666667], [86.0, 3733.5], [91.0, 14395.0], [90.0, 14084.0], [89.0, 13739.0], [88.0, 13991.0], [95.0, 4933.666666666667], [94.0, 13732.0], [93.0, 15321.0], [92.0, 13639.0], [98.0, 6986.0], [99.0, 4798.666666666667], [97.0, 13660.0], [96.0, 13788.0], [102.0, 6918.0], [103.0, 112.33333333333333], [101.0, 13779.0], [100.0, 13778.0], [104.0, 9471.666666666666], [105.0, 7275.5], [107.0, 6893.5], [106.0, 14281.0], [108.0, 7027.5], [111.0, 13858.0], [110.0, 13608.5], [115.0, 13877.0], [114.0, 13712.0], [113.0, 14111.0], [112.0, 14045.0], [119.0, 13958.0], [118.0, 15335.0], [117.0, 13885.0], [116.0, 13670.0], [123.0, 6896.5], [122.0, 13914.0], [120.0, 14261.0], [126.0, 7973.5], [125.0, 7394.0], [124.0, 14123.0], [135.0, 13807.0], [134.0, 13593.0], [133.0, 13588.0], [132.0, 14411.0], [131.0, 14943.0], [130.0, 13782.0], [129.0, 14110.0], [128.0, 14445.0], [141.0, 5475.4], [140.0, 3627.25], [139.0, 3686.0], [142.0, 13552.0], [138.0, 13482.0], [146.0, 6826.0], [151.0, 4625.0], [150.0, 6749.0], [149.0, 7301.0], [148.0, 13932.0], [147.0, 13839.0], [145.0, 13369.0], [144.0, 13821.0], [152.0, 6790.0], [159.0, 13791.0], [158.0, 13438.0], [157.0, 13602.666666666666], [155.0, 13394.0], [153.0, 13874.0], [164.0, 7118.5], [165.0, 279.0], [167.0, 6961.0], [166.0, 13719.5], [163.0, 13351.0], [162.0, 13551.0], [161.0, 13962.0], [160.0, 13792.0], [168.0, 3479.5], [169.0, 4680.333333333333], [175.0, 13335.0], [174.0, 14205.0], [173.0, 13782.0], [172.0, 13485.0], [171.0, 14214.0], [170.0, 13302.0], [183.0, 13450.0], [182.0, 13416.0], [181.0, 14274.0], [180.0, 13549.0], [179.0, 14087.0], [178.0, 13940.0], [177.0, 14386.5], [188.0, 6785.5], [191.0, 13810.0], [189.0, 15035.0], [187.0, 13606.0], [185.0, 13283.0], [184.0, 13532.0], [198.0, 12968.0], [197.0, 12984.0], [196.0, 14282.0], [195.0, 13821.0], [194.0, 14407.0], [193.0, 13508.0], [192.0, 13439.0], [203.0, 294.5], [205.0, 7752.0], [207.0, 13082.0], [206.0, 13063.0], [204.0, 14325.5], [202.0, 14121.0], [201.0, 13648.0], [200.0, 12974.5], [209.0, 4489.0], [215.0, 12933.0], [214.0, 14691.0], [213.0, 13316.0], [212.0, 12938.0], [211.0, 12982.0], [210.0, 12944.0], [208.0, 14296.0], [221.0, 3539.5], [222.0, 4624.0], [223.0, 13010.0], [220.0, 14683.0], [219.0, 12966.0], [218.0, 13427.0], [217.0, 13051.0], [216.0, 12931.0], [229.0, 7035.0], [231.0, 13114.0], [230.0, 13816.0], [228.0, 12941.5], [226.0, 13448.0], [225.0, 13687.0], [224.0, 12992.0], [239.0, 12899.0], [238.0, 12921.0], [237.0, 12899.0], [235.0, 13173.0], [234.0, 12904.0], [233.0, 13560.0], [232.0, 13970.0], [247.0, 13505.0], [245.0, 13065.0], [244.0, 13440.0], [243.0, 13191.0], [242.0, 13009.0], [241.0, 13116.0], [240.0, 12978.0], [255.0, 12968.0], [254.0, 12806.0], [253.0, 12824.0], [252.0, 13295.0], [251.0, 13078.0], [250.0, 13487.0], [249.0, 13274.0], [248.0, 13163.0], [270.0, 12718.0], [271.0, 12712.0], [269.0, 12722.0], [268.0, 13083.0], [266.0, 13955.0], [265.0, 12732.0], [264.0, 13002.0], [263.0, 12999.0], [257.0, 13157.5], [259.0, 12791.0], [258.0, 12975.0], [262.0, 13151.0], [261.0, 13032.0], [260.0, 12791.0], [285.0, 12638.0], [275.0, 104.0], [274.0, 12855.0], [273.0, 13372.0], [272.0, 13810.0], [278.0, 6370.0], [277.0, 12639.0], [276.0, 12703.5], [279.0, 6591.5], [283.0, 6731.5], [282.0, 6627.5], [287.0, 13308.5], [284.0, 12635.0], [281.0, 12805.0], [280.0, 13307.0], [303.0, 4493.0], [297.0, 6617.5], [296.0, 4461.0], [299.0, 133.0], [300.0, 5268.2], [291.0, 12662.0], [289.0, 13357.0], [288.0, 12945.0], [302.0, 12561.0], [301.0, 13694.0], [298.0, 12656.0], [295.0, 13066.0], [294.0, 13021.0], [293.0, 12700.0], [292.0, 13161.0], [318.0, 12613.0], [306.0, 6408.0], [310.0, 6593.0], [305.0, 13090.0], [309.0, 13633.0], [308.0, 12669.0], [317.0, 349.0], [319.0, 12756.0], [316.0, 12714.0], [307.0, 12756.0], [315.0, 13155.0], [314.0, 12881.0], [313.0, 12694.0], [312.0, 12907.0], [333.0, 12467.0], [334.0, 12681.0], [332.0, 12442.0], [323.0, 12528.0], [322.0, 13382.0], [321.0, 12542.0], [320.0, 12552.0], [331.0, 12729.5], [329.0, 12562.0], [328.0, 12587.0], [327.0, 14009.0], [326.0, 12533.0], [325.0, 13686.0], [324.0, 13187.0], [349.0, 12839.0], [339.0, 6415.5], [343.0, 6492.0], [336.0, 13560.5], [338.0, 12524.0], [337.0, 13221.0], [351.0, 8575.333333333334], [348.0, 13891.5], [346.0, 12397.0], [345.0, 12509.0], [344.0, 12422.0], [342.0, 12626.0], [341.0, 13944.0], [340.0, 13216.0], [366.0, 6447.5], [358.0, 6643.0], [357.0, 6412.5], [356.0, 12418.0], [367.0, 6822.5], [365.0, 13194.0], [364.0, 12632.5], [359.0, 13352.0], [353.0, 12841.0], [352.0, 13727.0], [355.0, 12729.0], [354.0, 12402.0], [362.0, 12358.0], [361.0, 12360.0], [360.0, 13275.0], [380.0, 6982.0], [369.0, 4344.333333333334], [368.0, 4295.333333333334], [375.0, 12318.0], [374.0, 12513.0], [372.0, 12300.0], [370.0, 4391.0], [371.0, 13216.0], [376.0, 6353.0], [377.0, 12521.0], [383.0, 4630.0], [382.0, 13016.0], [381.0, 12601.0], [379.0, 13107.0], [378.0, 12485.0], [399.0, 4752.0], [384.0, 6470.0], [391.0, 12730.0], [390.0, 12433.0], [389.0, 13053.0], [388.0, 13653.0], [395.0, 6466.5], [398.0, 12448.0], [397.0, 12253.0], [396.0, 12276.0], [387.0, 12251.0], [386.0, 15213.0], [385.0, 12242.0], [394.0, 12898.0], [393.0, 12898.0], [392.0, 12364.0], [414.0, 12273.0], [401.0, 6309.0], [400.0, 12518.0], [403.0, 12187.0], [402.0, 12170.0], [407.0, 12103.0], [406.0, 13475.0], [405.0, 12268.0], [404.0, 13315.0], [415.0, 6293.5], [413.0, 12291.0], [412.0, 12543.0], [411.0, 12858.0], [410.0, 12351.0], [409.0, 12528.0], [408.0, 12103.0], [430.0, 12158.0], [416.0, 4442.333333333334], [417.0, 6393.5], [419.0, 12508.0], [418.0, 12055.0], [421.0, 467.0], [420.0, 12620.0], [423.0, 12139.0], [422.0, 12207.0], [431.0, 12050.0], [425.0, 12069.0], [424.0, 12544.0], [429.0, 12491.0], [428.0, 12065.0], [427.0, 12074.0], [426.0, 12072.0], [445.0, 12579.5], [447.0, 12050.0], [434.0, 6322.5], [433.0, 12350.0], [432.0, 12119.0], [435.0, 12027.0], [440.0, 4369.0], [446.0, 12129.0], [443.0, 12484.0], [442.0, 12609.5], [439.0, 12025.0], [438.0, 12266.0], [437.0, 12363.5], [455.0, 6209.0], [454.0, 6479.0], [453.0, 4484.333333333333], [452.0, 2717.8], [463.0, 12415.0], [457.0, 11982.0], [456.0, 12469.0], [462.0, 12758.0], [461.0, 11904.0], [460.0, 12733.0], [451.0, 11977.0], [450.0, 12480.0], [449.0, 12107.0], [448.0, 12435.0], [459.0, 12466.0], [458.0, 11978.0], [476.0, 12602.0], [479.0, 11945.5], [465.0, 6508.5], [464.0, 12241.0], [467.0, 12347.5], [472.0, 6370.75], [477.0, 12167.0], [475.0, 11897.0], [474.0, 12005.5], [470.0, 12122.0], [469.0, 12797.0], [468.0, 12413.0], [495.0, 12228.0], [481.0, 6500.0], [480.0, 7231.5], [487.0, 11838.0], [486.0, 11840.0], [485.0, 11842.0], [484.0, 11927.0], [489.0, 4406.0], [488.0, 6283.0], [490.0, 6527.0], [494.0, 11930.0], [493.0, 12292.0], [483.0, 12702.0], [482.0, 12234.0], [491.0, 12081.0], [510.0, 11770.0], [500.0, 6196.0], [503.0, 11795.0], [497.0, 11947.0], [496.0, 11939.0], [499.0, 12135.0], [498.0, 12002.0], [502.0, 12189.5], [511.0, 11780.0], [509.0, 12219.0], [508.0, 13944.0], [507.0, 12639.0], [506.0, 11855.0], [505.0, 12051.0], [504.0, 11840.0], [518.0, 6172.5], [520.0, 5072.333333333333], [522.0, 12521.5], [528.0, 6192.5], [526.0, 4300.333333333334], [516.0, 13525.0], [512.0, 11738.0], [524.0, 11699.0], [542.0, 11811.0], [540.0, 11767.0], [538.0, 11775.0], [536.0, 12012.5], [534.0, 11797.0], [532.0, 11829.0], [572.0, 11518.0], [554.0, 6482.0], [556.0, 771.0], [560.0, 6189.0], [566.0, 4545.0], [574.0, 11498.0], [570.0, 11947.0], [568.0, 11869.5], [558.0, 13212.0], [544.0, 11554.0], [548.0, 11565.0], [546.0, 11562.0], [564.0, 11452.0], [562.0, 11604.0], [604.0, 12222.0], [594.0, 6662.0], [596.0, 2451.8571428571427], [600.0, 6703.5], [606.0, 11507.0], [602.0, 11314.0], [598.0, 11322.0], [592.0, 11420.0], [588.0, 11348.0], [578.0, 11416.0], [576.0, 11789.0], [582.0, 13757.0], [580.0, 11704.0], [586.0, 11946.0], [584.0, 11476.0], [622.0, 7966.666666666667], [616.0, 5577.2], [638.0, 6045.0], [618.0, 5958.0], [620.0, 4410.666666666666], [626.0, 8072.666666666667], [624.0, 11141.0], [630.0, 11329.0], [628.0, 11139.0], [636.0, 11283.0], [634.0, 11885.0], [632.0, 11501.0], [614.0, 11596.0], [610.0, 11322.0], [608.0, 11309.0], [668.0, 10933.0], [644.0, 7887.333333333333], [642.0, 11061.0], [640.0, 11287.0], [652.0, 4695.333333333334], [650.0, 11251.0], [648.0, 11640.0], [654.0, 6174.5], [656.0, 6156.0], [660.0, 5918.5], [658.0, 11240.0], [670.0, 11860.0], [666.0, 11961.0], [646.0, 11054.0], [662.0, 11618.0], [700.0, 10791.0], [682.0, 4292.0], [684.0, 11124.0], [686.0, 6215.5], [690.0, 4353.666666666666], [692.0, 6728.0], [698.0, 5981.0], [702.0, 11689.5], [688.0, 10889.0], [696.0, 10849.0], [678.0, 11222.0], [676.0, 12432.0], [674.0, 11324.0], [672.0, 11012.0], [694.0, 11474.0], [730.0, 6150.5], [718.0, 6015.25], [712.0, 9337.0], [716.0, 10926.0], [714.0, 11219.0], [728.0, 6193.5], [710.0, 11967.0], [708.0, 10805.0], [706.0, 12126.0], [734.0, 11394.0], [732.0, 10858.0], [726.0, 11661.0], [724.0, 10871.0], [722.0, 11084.0], [720.0, 11218.0], [764.0, 12054.0], [740.0, 6115.5], [736.0, 5994.5], [750.0, 10661.0], [748.0, 10910.0], [746.0, 11018.0], [744.0, 11804.0], [742.0, 4290.333333333334], [738.0, 6183.0], [766.0, 10540.5], [752.0, 10760.0], [762.0, 10518.0], [760.0, 10516.0], [756.0, 10530.0], [754.0, 10618.0], [768.0, 11698.0], [792.0, 7496.666666666667], [774.0, 6395.0], [770.0, 11354.0], [782.0, 11097.0], [780.0, 10403.0], [778.0, 5886.0], [776.0, 10438.0], [790.0, 10449.0], [788.0, 10385.0], [786.0, 10380.0], [784.0, 11108.0], [798.0, 10927.0], [796.0, 10489.0], [794.0, 11172.0], [802.0, 10854.0], [800.0, 5739.5], [804.0, 10323.5], [806.0, 5903.0], [808.0, 10402.0], [810.0, 10279.0], [814.0, 5942.75], [812.0, 10304.0], [818.0, 6185.5], [828.0, 10145.0], [826.0, 10138.0], [830.0, 5983.5], [816.0, 10227.0], [824.0, 5783.0], [820.0, 11056.0], [822.0, 11660.5], [834.0, 5914.5], [846.0, 6295.0], [842.0, 4366.0], [840.0, 10247.0], [844.0, 10307.0], [832.0, 10450.0], [850.0, 5936.75], [862.0, 10014.0], [848.0, 10265.0], [858.0, 10060.0], [856.0, 10082.0], [838.0, 10368.0], [836.0, 10107.0], [860.0, 10105.0], [852.0, 5695.0], [854.0, 10330.5], [870.0, 5771.5], [864.0, 7292.333333333333], [888.0, 10669.0], [890.0, 9923.0], [892.0, 10161.0], [880.0, 10827.0], [894.0, 11240.0], [868.0, 5783.0], [872.0, 9982.0], [876.0, 9995.0], [878.0, 5736.5], [882.0, 5665.5], [884.0, 7299.0], [886.0, 9926.0], [896.0, 2445.7000000000003], [924.0, 9951.0], [910.0, 9950.0], [908.0, 10279.0], [906.0, 9934.0], [904.0, 10154.0], [912.0, 10021.0], [914.0, 10472.0], [916.0, 11272.0], [918.0, 9929.0], [926.0, 9782.0], [922.0, 9820.0], [920.0, 10786.0], [902.0, 9871.0], [900.0, 9932.0], [898.0, 10121.5], [930.0, 9816.0], [956.0, 9677.0], [944.0, 3656.0], [928.0, 10058.0], [932.0, 10065.0], [940.0, 9952.5], [938.0, 10372.0], [936.0, 9724.0], [952.0, 9656.0], [934.0, 9920.0], [954.0, 9893.0], [946.0, 3772.0], [948.0, 5930.5], [950.0, 9811.0], [958.0, 9694.0], [960.0, 9601.0], [984.0, 10558.0], [988.0, 4493.666666666666], [966.0, 10259.0], [974.0, 9969.0], [972.0, 9695.0], [970.0, 11162.0], [968.0, 3624.25], [980.0, 9579.0], [982.0, 9508.0], [978.0, 5803.5], [990.0, 9534.0], [976.0, 9767.0], [986.0, 11324.0], [996.0, 2041.3333333333333], [998.0, 9402.0], [1000.0, 6936.0], [994.0, 9700.0], [992.0, 10203.5], [1006.0, 9733.0], [1004.0, 4643.0], [1012.0, 5794.5], [1018.0, 5973.0], [1016.0, 9780.0], [1008.0, 9712.0], [1010.0, 9370.0], [1022.0, 9617.0], [1020.0, 9386.0], [1014.0, 6078.5], [1072.0, 1864.0], [1028.0, 4499.666666666666], [1024.0, 9939.0], [1052.0, 9600.0], [1032.0, 9641.0], [1080.0, 5529.0], [1076.0, 9329.0], [1084.0, 9519.0], [1068.0, 9130.0], [1064.0, 9400.0], [1060.0, 9288.5], [1056.0, 9142.0], [1044.0, 10262.0], [1040.0, 9319.0], [1048.0, 5644.5], [1148.0, 8921.0], [1096.0, 5669.5], [1100.0, 9202.0], [1136.0, 9466.0], [1088.0, 3436.4], [1092.0, 5842.0], [1124.0, 6658.666666666667], [1128.0, 5415.5], [1132.0, 9229.5], [1120.0, 8886.0], [1144.0, 3263.666666666667], [1140.0, 8781.0], [1104.0, 8840.0], [1108.0, 9198.0], [1112.0, 8790.0], [1116.0, 5598.75], [1204.0, 8529.5], [1212.0, 6880.333333333333], [1176.0, 4681.333333333334], [1172.0, 10076.0], [1168.0, 9127.0], [1188.0, 5693.5], [1192.0, 8619.0], [1196.0, 5532.5], [1200.0, 5539.0], [1156.0, 8714.0], [1152.0, 8729.0], [1180.0, 8714.0], [1184.0, 8922.0], [1208.0, 5570.0], [1224.0, 8858.0], [1268.0, 8915.0], [1264.0, 8643.5], [1228.0, 9115.0], [1220.0, 8537.0], [1216.0, 9702.0], [1272.0, 8303.0], [1276.0, 8369.0], [1236.0, 5300.5], [1232.0, 8488.0], [1240.0, 8317.0], [1244.0, 6061.5], [1248.0, 5674.5], [1256.0, 5468.0], [1252.0, 8552.0], [1260.0, 8847.0], [1288.0, 8845.0], [1332.0, 2801.0], [1308.0, 8026.0], [1304.0, 8774.0], [1280.0, 2584.0], [1300.0, 5583.5], [1296.0, 8123.0], [1312.0, 5145.0], [1340.0, 4329.666666666667], [1336.0, 8764.0], [1328.0, 4371.0], [1284.0, 8586.0], [1316.0, 5623.5], [1320.0, 9065.5], [1324.0, 5693.0], [1356.0, 7836.0], [1392.0, 7921.0], [1368.0, 4846.8], [1364.0, 5060.0], [1360.0, 7847.5], [1388.0, 7810.0], [1396.0, 5129.5], [1352.0, 9385.0], [1348.0, 7898.0], [1344.0, 7912.0], [1372.0, 8556.0], [1400.0, 4334.666666666667], [1376.0, 8586.0], [1380.0, 8447.0], [1404.0, 8205.0], [1464.0, 7492.0], [1420.0, 5667.0], [1456.0, 7557.0], [1460.0, 7832.0], [1468.0, 4383.0], [1440.0, 7502.0], [1444.0, 7460.0], [1448.0, 7730.0], [1452.0, 7460.0], [1424.0, 5114.5], [1436.0, 5031.0], [1432.0, 7669.0], [1408.0, 9245.0], [1412.0, 7579.0], [1416.0, 8677.0], [1484.0, 7741.0], [1520.0, 5391.0], [1472.0, 5013.5], [1480.0, 7383.0], [1476.0, 7667.0], [1532.0, 7334.0], [1528.0, 8138.0], [1524.0, 7346.0], [1496.0, 4926.0], [1492.0, 7348.0], [1488.0, 7608.0], [1504.0, 5546.0], [1508.0, 7879.0], [1512.0, 7372.0], [1516.0, 7158.0], [1588.0, 7463.0], [1596.0, 6823.0], [1568.0, 7100.0], [1572.0, 7032.0], [1576.0, 7061.0], [1592.0, 6813.0], [1548.0, 7070.0], [1544.0, 6980.0], [1536.0, 7141.0], [1564.0, 6896.0], [1560.0, 7238.5], [1556.0, 6985.0], [1580.0, 6868.0], [1652.0, 6662.0], [1656.0, 5425.0], [1612.0, 8709.0], [1660.0, 7050.0], [1636.0, 4889.5], [1640.0, 7283.0], [1644.0, 7250.0], [1616.0, 4824.5], [1608.0, 6771.5], [1604.0, 6975.0], [1600.0, 6915.0], [1668.0, 4482.666666666667], [1720.0, 4967.5], [1684.0, 3980.0], [1688.0, 7188.0], [1664.0, 4108.0], [1692.0, 6638.0], [1672.0, 6712.0], [1676.0, 7264.0], [1716.0, 4528.0], [1696.0, 6359.0], [1700.0, 6709.0], [1704.0, 7167.0], [1708.0, 6335.0], [1724.0, 6384.0], [1712.0, 6801.0], [1680.0, 3018.0], [1732.0, 6950.0], [1776.0, 4652.5], [1748.0, 4531.666666666667], [1752.0, 6385.0], [1728.0, 7750.0], [1736.0, 6381.0], [1740.0, 6267.0], [1744.0, 4617.5], [1780.0, 6399.0], [1784.0, 5965.5], [1788.0, 6024.0], [1772.0, 6475.0], [1768.0, 6280.0], [1760.0, 7103.5], [1804.0, 6004.0], [1792.0, 5227.5], [1796.0, 7080.0], [1800.0, 5831.0], [1820.0, 4790.5], [1852.0, 4904.5], [1824.0, 6149.0], [1828.0, 6508.0], [1832.0, 6032.0], [1836.0, 5834.0], [1848.0, 6217.0], [1840.0, 6054.0], [1808.0, 4767.5], [1812.0, 4764.0], [1816.0, 5918.0], [1868.0, 5616.0], [1856.0, 4537.0], [1884.0, 6036.0], [1880.0, 5583.0], [1908.0, 6219.0], [1864.0, 5598.0], [1860.0, 6342.0], [1912.0, 5497.0], [1916.0, 6119.5], [1876.0, 5805.0], [1896.0, 6266.0], [1892.0, 5487.0], [1888.0, 5954.0], [1900.0, 5420.0], [1976.0, 5163.0], [1940.0, 4479.5], [1968.0, 5236.0], [1972.0, 5159.0], [1980.0, 6188.0], [1952.0, 5692.0], [1956.0, 7094.0], [1964.0, 5376.0], [1960.0, 4768.5], [1932.0, 3986.0], [1936.0, 5245.0], [1948.0, 6039.0], [1920.0, 6478.0], [1924.0, 5327.0], [1928.0, 5327.0], [1992.0, 4985.0], [1984.0, 4433.666666666667], [2012.0, 5196.0], [2008.0, 5639.0], [2004.0, 6344.0], [1988.0, 5460.333333333333], [1996.0, 5220.0], [2032.0, 4808.0], [2036.0, 4802.0], [2016.0, 6179.0], [2020.0, 5165.0], [2044.0, 4750.0], [2040.0, 4791.0], [2024.0, 4193.666666666667], [2028.0, 5160.0], [2000.0, 4858.0], [2064.0, 4451.0], [2056.0, 4751.0], [2088.0, 4155.0], [2048.0, 4811.0], [2104.0, 4582.666666666667], [2096.0, 5512.0], [2072.0, 5084.0], [2144.0, 4323.0], [2152.0, 4689.0], [2160.0, 4655.0], [2168.0, 5199.5], [2112.0, 4552.666666666667], [2120.0, 4368.0], [2128.0, 4707.0], [2080.0, 4265.666666666667], [2184.0, 4535.0], [2192.0, 4343.5], [2176.0, 4352.0], [2153.0, 4219.0], [2057.0, 4605.0], [2105.0, 4081.3333333333335], [2049.0, 4316.333333333333], [2113.0, 4233.0], [2169.0, 5888.0], [2161.0, 4559.0], [2073.0, 4509.0], [2137.0, 4482.0], [2129.0, 4374.0], [2121.0, 4344.0], [2081.0, 4182.6], [2097.0, 4494.0], [2089.0, 4523.0], [2185.0, 4100.5], [2193.0, 4501.0], [2177.0, 4216.0], [1073.0, 9826.5], [1081.0, 4225.666666666666], [1049.0, 3745.25], [1025.0, 9676.0], [1053.0, 9274.0], [1085.0, 9576.0], [1057.0, 4398.0], [1061.0, 6095.0], [1069.0, 9616.0], [1029.0, 5939.0], [1033.0, 9357.0], [1037.0, 9266.5], [1077.0, 9448.0], [1041.0, 9704.0], [1137.0, 5533.0], [1145.0, 3310.0], [1089.0, 4588.25], [1117.0, 5665.5], [1125.0, 8960.0], [1149.0, 9443.0], [1133.0, 5795.0], [1141.0, 5360.5], [1101.0, 8915.0], [1097.0, 8874.0], [1105.0, 6563.0], [1109.0, 8860.0], [1113.0, 8965.0], [1201.0, 8559.0], [1209.0, 2434.0], [1177.0, 3730.5], [1173.0, 8859.0], [1169.0, 8804.0], [1181.0, 9231.0], [1193.0, 5487.0], [1185.0, 8710.0], [1213.0, 3954.6], [1205.0, 8529.0], [1165.0, 9463.5], [1161.0, 8730.5], [1157.0, 9026.0], [1153.0, 8931.0], [1217.0, 2441.0], [1245.0, 2344.75], [1241.0, 8314.0], [1237.0, 8621.0], [1233.0, 10164.0], [1221.0, 8849.0], [1225.0, 8356.0], [1229.0, 8544.0], [1265.0, 8200.0], [1249.0, 9474.0], [1277.0, 8129.0], [1273.0, 8143.0], [1269.0, 3608.8], [1253.0, 5429.5], [1257.0, 8417.0], [1261.0, 8623.0], [1337.0, 5717.5], [1329.0, 4132.25], [1297.0, 5262.0], [1301.0, 4547.666666666667], [1313.0, 8706.0], [1321.0, 8057.0], [1317.0, 8057.0], [1341.0, 8079.0], [1333.0, 6389.0], [1325.0, 5678.5], [1281.0, 8409.5], [1285.0, 8466.0], [1289.0, 9195.0], [1293.0, 8544.5], [1305.0, 8497.0], [1405.0, 8885.0], [1369.0, 4770.0], [1361.0, 5495.5], [1385.0, 7763.0], [1381.0, 7749.0], [1377.0, 7826.0], [1389.0, 8516.0], [1401.0, 4712.333333333334], [1397.0, 7633.0], [1393.0, 7659.0], [1353.0, 8161.0], [1349.0, 8005.0], [1345.0, 9136.0], [1373.0, 8189.0], [1465.0, 7941.0], [1421.0, 4312.0], [1457.0, 9541.0], [1461.0, 7428.0], [1469.0, 5074.5], [1453.0, 4800.666666666667], [1441.0, 8782.0], [1445.0, 7478.0], [1425.0, 8264.0], [1429.0, 7594.5], [1433.0, 5066.0], [1409.0, 8325.0], [1413.0, 7601.0], [1437.0, 7823.0], [1481.0, 8766.0], [1521.0, 7959.0], [1529.0, 5039.0], [1473.0, 5321.0], [1485.0, 7421.0], [1477.0, 7359.0], [1525.0, 7134.0], [1533.0, 4252.0], [1497.0, 8152.0], [1493.0, 7274.0], [1489.0, 7286.0], [1501.0, 5497.75], [1509.0, 5021.0], [1505.0, 7492.0], [1513.0, 8045.0], [1593.0, 7908.0], [1569.0, 7461.0], [1573.0, 6949.0], [1577.0, 7208.0], [1589.0, 6917.0], [1585.0, 6867.5], [1549.0, 6956.0], [1545.0, 9545.0], [1541.0, 8055.0], [1537.0, 7422.0], [1561.0, 7269.0], [1557.0, 7361.0], [1553.0, 8010.0], [1601.0, 7600.0], [1629.0, 4684.4], [1633.0, 5634.666666666667], [1637.0, 6758.0], [1641.0, 7607.0], [1645.0, 7053.0], [1625.0, 6741.0], [1621.0, 6767.0], [1617.0, 6724.0], [1609.0, 6859.0], [1605.0, 6944.0], [1661.0, 6466.0], [1657.0, 6862.0], [1653.0, 6681.0], [1649.0, 7250.0], [1613.0, 7378.0], [1713.0, 4207.5], [1721.0, 6440.0], [1689.0, 4374.333333333333], [1665.0, 6598.0], [1693.0, 8994.0], [1685.0, 5406.5], [1677.0, 6381.0], [1673.0, 6536.0], [1669.0, 6407.0], [1717.0, 4017.6], [1697.0, 6511.0], [1701.0, 6456.0], [1705.0, 6607.0], [1709.0, 6358.0], [1725.0, 8050.0], [1681.0, 5268.0], [1737.0, 6271.0], [1741.0, 5076.5], [1733.0, 6872.0], [1757.0, 6074.5], [1753.0, 6357.0], [1749.0, 6483.0], [1745.0, 4870.5], [1781.0, 5943.0], [1777.0, 5945.0], [1773.0, 4482.666666666667], [1769.0, 5982.0], [1765.0, 6387.0], [1761.0, 6559.0], [1789.0, 5864.0], [1801.0, 5957.0], [1793.0, 3366.0], [1821.0, 5782.0], [1817.0, 5802.0], [1805.0, 3228.0], [1797.0, 6784.0], [1841.0, 6247.0], [1837.0, 5750.0], [1833.0, 7937.0], [1829.0, 5743.0], [1825.0, 7725.0], [1853.0, 5941.0], [1849.0, 5983.0], [1845.0, 6261.0], [1813.0, 4190.25], [1809.0, 5961.0], [1885.0, 5618.0], [1913.0, 5983.0], [1877.0, 5042.0], [1873.0, 4883.5], [1909.0, 6346.0], [1905.0, 6228.5], [1917.0, 5563.0], [1881.0, 6444.0], [1857.0, 5679.0], [1861.0, 5586.0], [1865.0, 5595.0], [1869.0, 5596.0], [1889.0, 4596.0], [1893.0, 5504.0], [1901.0, 5708.0], [1897.0, 5222.5], [1977.0, 6040.0], [1969.0, 4231.5], [1933.0, 3479.0], [1973.0, 5148.0], [1981.0, 5056.0], [1957.0, 5203.0], [1961.0, 4053.25], [1965.0, 4359.0], [1937.0, 4762.5], [1941.0, 4954.0], [1945.0, 5271.0], [1921.0, 5413.0], [1925.0, 5892.0], [1929.0, 5341.0], [1949.0, 5807.0], [1993.0, 4822.5], [1997.0, 4514.5], [1985.0, 5055.0], [2013.0, 3903.5], [2005.0, 5334.0], [1989.0, 4377.2], [2037.0, 5092.0], [2017.0, 5080.0], [2041.0, 5040.0], [2021.0, 4275.5], [2025.0, 4897.0], [2029.0, 4865.0], [2066.0, 5012.5], [2050.0, 4898.0], [2106.0, 4422.0], [2058.0, 5771.0], [2074.0, 4786.0], [2146.0, 4302.5], [2154.0, 4223.0], [2162.0, 4239.0], [2170.0, 5658.0], [2114.0, 4631.0], [2122.0, 4960.0], [2130.0, 4366.0], [2138.0, 5213.0], [2082.0, 4159.0], [2186.0, 4164.666666666667], [2194.0, 4756.666666666667], [2147.0, 4328.0], [2163.0, 5864.0], [2051.0, 4154.2], [2059.0, 4758.0], [2171.0, 4745.0], [2155.0, 4386.0], [2075.0, 5225.0], [2067.0, 6703.0], [2115.0, 3887.0], [2139.0, 5004.0], [2131.0, 4482.5], [2123.0, 4341.0], [2099.0, 4603.0], [2091.0, 4638.0], [2107.0, 5812.0], [2187.0, 4796.0], [2195.0, 4616.0], [2179.0, 4645.0], [527.0, 4781.0], [523.0, 4868.333333333334], [525.0, 4365.666666666666], [521.0, 686.5], [529.0, 4505.666666666666], [531.0, 12545.0], [543.0, 11563.0], [541.0, 11881.0], [539.0, 11823.0], [519.0, 12012.0], [517.0, 13724.0], [515.0, 11994.0], [513.0, 12071.0], [533.0, 6410.0], [535.0, 762.0], [573.0, 11410.0], [557.0, 5161.6], [553.0, 8444.333333333334], [555.0, 12266.0], [559.0, 6471.0], [547.0, 11571.0], [545.0, 11557.0], [551.0, 12468.5], [549.0, 11561.0], [575.0, 11413.0], [561.0, 12858.0], [571.0, 11446.0], [569.0, 12674.0], [565.0, 11431.0], [563.0, 11973.0], [603.0, 11521.0], [595.0, 3239.6], [589.0, 6138.5], [587.0, 12642.0], [599.0, 6311.5], [605.0, 11237.0], [601.0, 11314.0], [583.0, 11749.0], [581.0, 11987.0], [579.0, 11412.0], [577.0, 11414.0], [597.0, 11682.0], [593.0, 11707.0], [591.0, 11957.5], [635.0, 11134.0], [621.0, 895.5], [619.0, 11880.0], [617.0, 11421.0], [611.0, 6476.0], [615.0, 1134.5], [613.0, 11335.5], [623.0, 6196.0], [629.0, 6089.5], [627.0, 11955.0], [631.0, 11464.0], [639.0, 11626.0], [637.0, 11186.0], [633.0, 11444.0], [645.0, 4424.666666666666], [665.0, 7703.0], [647.0, 11048.0], [653.0, 6031.5], [651.0, 13551.0], [649.0, 11138.0], [655.0, 6082.5], [641.0, 11076.0], [663.0, 6126.0], [671.0, 11353.0], [669.0, 11723.0], [667.0, 11520.0], [661.0, 11101.0], [659.0, 11863.0], [697.0, 4353.333333333334], [681.0, 6128.5], [683.0, 10891.0], [689.0, 6519.5], [691.0, 6013.5], [699.0, 6518.5], [703.0, 11196.0], [695.0, 10856.0], [693.0, 11295.0], [687.0, 11042.0], [675.0, 10920.0], [673.0, 11151.0], [679.0, 11268.0], [677.0, 11223.0], [685.0, 11358.0], [731.0, 5955.0], [713.0, 5918.5], [715.0, 11358.0], [717.0, 1110.6666666666667], [729.0, 4546.0], [719.0, 11416.0], [705.0, 10817.5], [707.0, 10785.0], [735.0, 5864.0], [733.0, 11698.0], [727.0, 11497.0], [725.0, 12070.0], [723.0, 10750.0], [721.0, 10728.0], [763.0, 10531.0], [741.0, 4475.333333333334], [737.0, 4416.0], [751.0, 11825.0], [749.0, 10620.0], [745.0, 11228.0], [743.0, 4445.333333333334], [739.0, 6453.0], [767.0, 10550.0], [755.0, 11371.0], [753.0, 10981.0], [761.0, 10553.0], [759.0, 10838.0], [757.0, 10675.0], [771.0, 5966.5], [769.0, 10764.0], [773.0, 10624.0], [783.0, 11527.0], [775.0, 6494.5], [777.0, 10439.0], [779.0, 1640.0], [791.0, 1513.0], [787.0, 10441.0], [785.0, 10672.0], [799.0, 10281.0], [797.0, 11176.0], [795.0, 10494.0], [793.0, 10710.0], [803.0, 1182.0], [825.0, 6067.5], [801.0, 5746.5], [805.0, 10831.0], [809.0, 5978.0], [811.0, 3616.0], [815.0, 3977.75], [829.0, 6000.5], [827.0, 10851.0], [831.0, 11533.0], [817.0, 10498.0], [807.0, 11008.0], [819.0, 6629.5], [823.0, 10377.0], [847.0, 5907.5], [857.0, 11165.0], [843.0, 4715.333333333334], [841.0, 4385.666666666666], [845.0, 5885.5], [833.0, 10661.0], [859.0, 4509.0], [839.0, 10538.0], [837.0, 10244.0], [835.0, 10402.0], [861.0, 4446.333333333334], [851.0, 5868.5], [855.0, 10608.0], [865.0, 5737.0], [869.0, 5751.0], [879.0, 9969.0], [871.0, 12309.0], [889.0, 9994.0], [891.0, 10458.0], [895.0, 10212.0], [867.0, 10751.0], [875.0, 7491.0], [873.0, 10175.0], [877.0, 10253.0], [881.0, 5698.0], [887.0, 10136.0], [885.0, 9936.0], [927.0, 9773.0], [897.0, 1529.0], [911.0, 10530.0], [909.0, 10292.0], [907.0, 10126.0], [905.0, 9891.0], [913.0, 9845.0], [915.0, 9808.0], [917.0, 9807.0], [919.0, 10155.0], [925.0, 9914.0], [923.0, 10786.0], [921.0, 10153.0], [903.0, 9868.0], [901.0, 9851.0], [899.0, 9909.0], [933.0, 4915.666666666666], [943.0, 10068.0], [929.0, 11838.0], [931.0, 9859.0], [941.0, 9734.0], [937.0, 10178.0], [935.0, 9785.0], [955.0, 9968.0], [945.0, 2933.0], [947.0, 4533.0], [951.0, 10665.0], [949.0, 10087.0], [959.0, 4482.0], [957.0, 9788.0], [965.0, 9610.5], [967.0, 4291.333333333334], [963.0, 9597.5], [961.0, 9618.0], [973.0, 9974.0], [971.0, 9923.0], [985.0, 10249.0], [969.0, 6087.0], [979.0, 3641.5], [981.0, 9544.0], [983.0, 9773.0], [989.0, 4309.0], [977.0, 10301.0], [987.0, 9493.0], [997.0, 10026.0], [995.0, 3736.25], [999.0, 4436.666666666666], [1001.0, 5931.5], [1005.0, 3802.5], [1007.0, 9914.0], [993.0, 10914.0], [1003.0, 10142.0], [1017.0, 9590.0], [1019.0, 5951.5], [1023.0, 9366.0], [1009.0, 9432.0], [1011.0, 10029.0], [1021.0, 9464.0], [1013.0, 10057.0], [1015.0, 9735.0], [1038.0, 9683.0], [1082.0, 9023.0], [1026.0, 3475.0], [1054.0, 9273.0], [1050.0, 9619.0], [1030.0, 4655.666666666666], [1034.0, 9644.0], [1078.0, 9569.0], [1074.0, 9184.0], [1070.0, 5867.0], [1066.0, 9300.0], [1062.0, 9381.0], [1058.0, 9268.0], [1086.0, 9849.0], [1046.0, 7106.666666666667], [1042.0, 9669.0], [1150.0, 9735.0], [1102.0, 5609.0], [1098.0, 8853.0], [1118.0, 9021.0], [1090.0, 5661.0], [1094.0, 9130.5], [1126.0, 5434.0], [1134.0, 9826.0], [1130.0, 9470.0], [1122.0, 6738.333333333333], [1146.0, 9280.0], [1142.0, 1958.0], [1138.0, 5476.5], [1106.0, 5620.0], [1110.0, 8961.0], [1114.0, 8740.0], [1182.0, 10283.0], [1186.0, 4484.333333333334], [1174.0, 9009.0], [1170.0, 9200.0], [1178.0, 4921.0], [1190.0, 6821.0], [1194.0, 9703.0], [1198.0, 8886.5], [1166.0, 9007.0], [1162.0, 8713.0], [1158.0, 9240.0], [1154.0, 8715.0], [1202.0, 8537.0], [1206.0, 8657.0], [1214.0, 4352.0], [1210.0, 8550.0], [1230.0, 9196.0], [1246.0, 5611.5], [1242.0, 5296.0], [1270.0, 3123.4], [1226.0, 8357.0], [1222.0, 9094.0], [1218.0, 9207.0], [1274.0, 8628.0], [1278.0, 8128.0], [1234.0, 8606.0], [1238.0, 9023.0], [1254.0, 9387.0], [1250.0, 9845.0], [1258.0, 8264.0], [1262.0, 8203.0], [1334.0, 8298.0], [1330.0, 3334.8333333333335], [1302.0, 4529.666666666667], [1310.0, 9144.0], [1306.0, 8601.0], [1298.0, 8058.0], [1314.0, 8201.0], [1342.0, 5762.5], [1338.0, 7955.0], [1294.0, 8170.0], [1290.0, 8111.0], [1286.0, 8122.0], [1282.0, 8119.0], [1318.0, 5755.0], [1322.0, 8210.0], [1326.0, 5621.0], [1358.0, 7920.0], [1362.0, 4255.25], [1366.0, 5499.25], [1390.0, 5195.5], [1386.0, 3704.25], [1394.0, 8453.0], [1374.0, 9335.0], [1354.0, 7837.0], [1350.0, 7870.0], [1346.0, 7927.0], [1398.0, 7626.0], [1402.0, 5070.5], [1406.0, 8456.0], [1378.0, 7951.0], [1382.0, 7673.0], [1466.0, 7796.0], [1458.0, 5738.5], [1422.0, 7902.0], [1462.0, 5528.5], [1454.0, 2749.5], [1470.0, 7511.0], [1442.0, 8040.0], [1450.0, 7674.5], [1426.0, 7621.0], [1430.0, 2653.0], [1434.0, 8189.0], [1438.0, 7697.0], [1410.0, 7982.0], [1414.0, 7574.0], [1418.0, 7805.5], [1482.0, 7704.0], [1486.0, 7417.0], [1478.0, 7488.0], [1474.0, 7373.0], [1534.0, 3808.4], [1526.0, 8018.0], [1522.0, 7266.0], [1494.0, 7445.0], [1490.0, 7541.0], [1498.0, 4409.0], [1502.0, 4546.333333333333], [1506.0, 7229.0], [1510.0, 8006.0], [1514.0, 7180.0], [1518.0, 7301.0], [1594.0, 6927.0], [1598.0, 7122.5], [1570.0, 7034.0], [1574.0, 7314.0], [1578.0, 8818.0], [1590.0, 6814.0], [1586.0, 6863.0], [1550.0, 6967.0], [1542.0, 7111.0], [1538.0, 7369.0], [1566.0, 7066.0], [1562.0, 7110.0], [1558.0, 7033.0], [1554.0, 8452.0], [1582.0, 6925.5], [1658.0, 6730.0], [1610.0, 5083.5], [1654.0, 6508.0], [1650.0, 7690.0], [1614.0, 7380.0], [1662.0, 5254.0], [1634.0, 3935.0], [1642.0, 5124.0], [1638.0, 6604.0], [1646.0, 6770.0], [1622.0, 5094.5], [1630.0, 4234.75], [1606.0, 6779.0], [1602.0, 6764.0], [1626.0, 5309.0], [1670.0, 5413.5], [1686.0, 6640.0], [1666.0, 7967.0], [1694.0, 6786.0], [1690.0, 4876.0], [1674.0, 7653.0], [1678.0, 6380.0], [1718.0, 4369.333333333333], [1726.0, 6475.0], [1698.0, 6365.0], [1702.0, 6589.0], [1706.0, 6763.0], [1710.0, 6387.0], [1722.0, 7019.0], [1714.0, 4223.8], [1682.0, 4687.0], [1734.0, 6369.0], [1750.0, 6462.0], [1758.0, 7483.0], [1730.0, 6576.0], [1738.0, 6557.0], [1742.0, 6104.0], [1754.0, 6100.0], [1746.0, 4634.0], [1778.0, 5500.0], [1786.0, 6730.5], [1782.0, 4560.0], [1774.0, 4620.0], [1770.0, 6937.0], [1766.0, 6156.0], [1762.0, 5979.0], [1790.0, 6767.0], [1854.0, 4237.0], [1806.0, 5092.0], [1794.0, 5885.0], [1798.0, 6708.0], [1822.0, 5173.0], [1826.0, 6343.0], [1830.0, 5895.0], [1834.0, 5731.0], [1838.0, 5900.0], [1846.0, 4338.5], [1850.0, 5652.0], [1842.0, 3799.0], [1810.0, 5805.0], [1814.0, 4789.666666666667], [1870.0, 5598.0], [1914.0, 6883.0], [1886.0, 5516.0], [1882.0, 7071.0], [1866.0, 5729.0], [1862.0, 5725.0], [1858.0, 5669.0], [1910.0, 5521.0], [1918.0, 5939.0], [1874.0, 4076.5], [1878.0, 4481.333333333333], [1898.0, 5320.5], [1894.0, 5523.0], [1890.0, 5764.0], [1902.0, 4382.0], [1978.0, 5063.0], [1970.0, 4104.0], [1934.0, 5347.5], [1974.0, 5244.0], [1954.0, 5619.0], [1958.0, 6222.0], [1982.0, 5915.0], [1962.0, 4448.0], [1966.0, 4911.5], [1938.0, 5477.0], [1942.0, 5258.0], [1946.0, 5718.0], [1950.0, 5186.0], [1922.0, 5538.0], [1926.0, 5328.0], [1930.0, 5533.0], [1986.0, 4579.5], [2010.0, 5288.5], [2006.0, 4918.0], [2014.0, 5145.0], [1990.0, 5065.0], [1994.0, 5263.0], [1998.0, 4996.0], [2034.0, 5013.5], [2038.0, 4594.5], [2018.0, 5160.0], [2046.0, 4965.0], [2042.0, 4750.0], [2022.0, 4385.5], [2030.0, 5379.0], [2002.0, 5012.0], [2060.0, 4285.0], [2052.0, 4346.0], [2108.0, 4219.5], [2100.0, 4484.0], [2092.0, 5085.0], [2076.0, 4501.0], [2148.0, 4323.0], [2156.0, 4220.0], [2164.0, 4520.0], [2172.0, 4191.0], [2116.0, 4617.0], [2124.0, 4217.5], [2132.0, 4615.666666666667], [2140.0, 5197.0], [2084.0, 5217.0], [2188.0, 4135.0], [2180.0, 5508.0], [2165.0, 4573.0], [2053.0, 4761.0], [2061.0, 4813.0], [2173.0, 4184.0], [2157.0, 4803.0], [2069.0, 5000.0], [2133.0, 4105.0], [2141.0, 4313.0], [2117.0, 4597.0], [2085.0, 5039.0], [2101.0, 4888.0], [2109.0, 4898.5], [2189.0, 4163.666666666667], [2181.0, 4868.0], [1083.0, 9421.0], [1051.0, 9307.0], [1055.0, 9158.0], [1027.0, 6048.5], [1087.0, 4444.333333333334], [1079.0, 6509.5], [1059.0, 1959.6666666666667], [1071.0, 9448.0], [1067.0, 9171.0], [1063.0, 9885.0], [1031.0, 9311.0], [1035.0, 10239.0], [1039.0, 9463.0], [1075.0, 9439.0], [1043.0, 5763.5], [1047.0, 5979.5], [1147.0, 8783.0], [1119.0, 9590.0], [1123.0, 2565.0], [1127.0, 8851.0], [1151.0, 8926.0], [1131.0, 1964.0], [1135.0, 9593.0], [1143.0, 6692.666666666667], [1139.0, 5960.0], [1103.0, 9586.0], [1099.0, 9537.0], [1095.0, 9446.0], [1091.0, 10077.0], [1107.0, 9858.0], [1111.0, 9117.0], [1115.0, 2172.0], [1167.0, 9168.0], [1175.0, 8679.0], [1171.0, 8816.0], [1179.0, 10511.0], [1191.0, 9489.0], [1187.0, 9181.0], [1215.0, 8766.0], [1207.0, 8625.0], [1163.0, 9290.0], [1159.0, 8754.0], [1155.0, 8716.0], [1183.0, 8773.0], [1199.0, 9621.0], [1195.0, 8846.0], [1219.0, 5670.5], [1231.0, 9338.0], [1271.0, 5256.0], [1243.0, 8640.0], [1239.0, 8754.0], [1235.0, 9245.0], [1223.0, 8670.0], [1227.0, 8371.0], [1279.0, 5518.5], [1275.0, 8135.0], [1267.0, 8379.0], [1251.0, 5389.5], [1255.0, 9652.0], [1259.0, 4503.666666666666], [1247.0, 5212.5], [1339.0, 7887.0], [1303.0, 4868.333333333334], [1299.0, 2222.0], [1335.0, 8970.0], [1343.0, 8672.0], [1315.0, 9904.0], [1331.0, 4604.0], [1323.0, 5287.5], [1327.0, 8540.0], [1311.0, 5226.5], [1283.0, 8352.0], [1287.0, 8108.0], [1291.0, 9323.0], [1295.0, 8148.0], [1307.0, 8029.0], [1407.0, 7679.0], [1403.0, 2748.0], [1363.0, 3957.0], [1367.0, 2734.0], [1387.0, 4714.2], [1383.0, 7714.0], [1379.0, 8398.0], [1391.0, 7976.0], [1399.0, 8074.0], [1395.0, 8062.0], [1355.0, 7852.0], [1351.0, 8794.0], [1347.0, 7894.0], [1375.0, 7777.0], [1371.0, 7852.5], [1459.0, 8531.0], [1419.0, 4506.666666666667], [1431.0, 6169.0], [1423.0, 7629.0], [1463.0, 7810.0], [1467.0, 8126.0], [1455.0, 5992.666666666667], [1471.0, 7354.0], [1443.0, 8104.0], [1451.0, 7895.0], [1447.0, 7575.0], [1427.0, 4472.333333333333], [1435.0, 8090.0], [1439.0, 8036.0], [1411.0, 8166.0], [1479.0, 8036.0], [1483.0, 7386.0], [1503.0, 7211.0], [1523.0, 7954.0], [1527.0, 7397.0], [1531.0, 5056.5], [1499.0, 4071.25], [1495.0, 7216.0], [1491.0, 7363.0], [1535.0, 7054.0], [1507.0, 7531.0], [1515.0, 4948.0], [1511.0, 7916.0], [1519.0, 7183.0], [1587.0, 6873.0], [1595.0, 7010.0], [1599.0, 6818.0], [1571.0, 8105.0], [1575.0, 6968.0], [1591.0, 7051.0], [1551.0, 6970.0], [1547.0, 7791.5], [1543.0, 7207.0], [1539.0, 7026.0], [1567.0, 6926.0], [1563.0, 7236.0], [1555.0, 7922.0], [1583.0, 7400.0], [1579.0, 7398.0], [1659.0, 6502.0], [1611.0, 5390.5], [1663.0, 4695.0], [1635.0, 6719.5], [1639.0, 7701.0], [1647.0, 6913.0], [1627.0, 4211.666666666667], [1623.0, 7063.0], [1619.0, 7071.0], [1631.0, 5179.5], [1603.0, 7164.0], [1655.0, 6637.0], [1651.0, 6840.0], [1615.0, 7414.0], [1675.0, 7034.0], [1667.0, 5318.0], [1691.0, 3447.5], [1695.0, 6339.0], [1687.0, 7058.0], [1679.0, 6569.0], [1671.0, 6502.0], [1715.0, 4502.333333333333], [1719.0, 6236.0], [1723.0, 6961.0], [1727.0, 6180.0], [1699.0, 7558.0], [1703.0, 6927.0], [1707.0, 8295.0], [1711.0, 7461.0], [1683.0, 4553.333333333333], [1735.0, 6949.0], [1787.0, 6524.0], [1743.0, 4666.0], [1739.0, 6235.0], [1731.0, 6850.0], [1755.0, 6334.0], [1751.0, 6944.0], [1747.0, 4729.0], [1783.0, 4409.666666666667], [1779.0, 6472.0], [1771.0, 5990.0], [1767.0, 6015.0], [1763.0, 6041.0], [1775.0, 6238.0], [1791.0, 5902.0], [1803.0, 5914.5], [1843.0, 4677.75], [1815.0, 3263.0], [1823.0, 6137.0], [1819.0, 6926.0], [1799.0, 6087.0], [1795.0, 6031.0], [1807.0, 5879.0], [1839.0, 4656.0], [1835.0, 5735.0], [1831.0, 5727.0], [1827.0, 5727.0], [1855.0, 6565.0], [1851.0, 4561.333333333333], [1847.0, 6657.0], [1811.0, 5868.0], [1863.0, 6186.0], [1871.0, 5028.5], [1911.0, 5384.0], [1907.0, 5844.5], [1919.0, 4744.5], [1875.0, 3774.9999999999995], [1879.0, 4683.0], [1859.0, 7215.0], [1867.0, 5595.0], [1883.0, 5727.0], [1891.0, 5479.0], [1899.0, 4452.5], [1903.0, 4732.5], [1895.0, 5514.0], [1979.0, 5066.0], [1971.0, 5145.5], [1935.0, 6278.0], [1975.0, 5569.0], [1983.0, 4440.333333333333], [1955.0, 5780.0], [1959.0, 5293.0], [1963.0, 5712.0], [1967.0, 4467.333333333333], [1939.0, 4644.0], [1943.0, 4917.0], [1947.0, 4404.0], [1923.0, 6620.0], [1927.0, 5319.0], [1931.0, 5656.0], [1991.0, 5406.0], [1995.0, 4752.0], [2011.0, 5229.0], [2007.0, 5327.0], [2015.0, 4937.0], [1999.0, 5178.0], [2035.0, 5950.0], [2047.0, 5318.0], [2019.0, 5142.0], [2043.0, 5170.0], [2027.0, 4731.0], [2031.0, 4610.0], [2023.0, 4131.2], [2003.0, 4777.0], [2062.0, 5986.0], [2070.0, 5178.0], [2110.0, 4598.0], [2102.0, 4491.0], [2094.0, 4879.0], [2054.0, 3699.0], [2078.0, 4900.5], [2150.0, 4473.0], [2158.0, 4647.0], [2166.0, 4197.0], [2174.0, 4179.0], [2118.0, 4789.0], [2126.0, 4823.0], [2134.0, 4243.0], [2142.0, 5307.0], [2086.0, 4834.5], [2190.0, 4341.25], [2182.0, 4433.5], [2151.0, 5223.5], [2063.0, 4860.0], [2055.0, 4858.0], [2175.0, 4318.0], [2167.0, 4320.0], [2159.0, 5119.0], [2079.0, 5377.0], [2071.0, 4824.0], [2143.0, 5065.0], [2135.0, 4366.0], [2127.0, 4534.0], [2119.0, 5580.0], [2087.0, 4333.0], [2103.0, 4454.333333333333], [2095.0, 4809.0], [2111.0, 4256.0], [2191.0, 4413.0], [2183.0, 4391.0], [1.0, 6.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[862.432783608195, 5651.185407296352]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2195.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 24206.0, "minX": 1.699973062E12, "maxY": 234829.0, "series": [{"data": [[1.69997308E12, 68327.0], [1.699973079E12, 71601.0], [1.699973078E12, 70621.0], [1.699973082E12, 72534.0], [1.699973081E12, 71083.0], [1.699973064E12, 234829.0], [1.699973063E12, 181954.0], [1.699973084E12, 67318.0], [1.699973062E12, 35081.0], [1.699973083E12, 74385.0], [1.699973066E12, 70686.0], [1.699973065E12, 66406.0], [1.699973069E12, 72031.0], [1.699973068E12, 61744.0], [1.699973067E12, 78113.0], [1.699973072E12, 71588.0], [1.699973071E12, 71563.0], [1.69997307E12, 68776.0], [1.699973074E12, 71107.0], [1.699973073E12, 71576.0], [1.699973077E12, 71593.0], [1.699973076E12, 71586.0], [1.699973075E12, 77662.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69997308E12, 47157.0], [1.699973079E12, 49416.0], [1.699973078E12, 48726.0], [1.699973082E12, 50059.0], [1.699973081E12, 49043.0], [1.699973064E12, 162039.0], [1.699973063E12, 125549.0], [1.699973084E12, 46438.0], [1.699973062E12, 24206.0], [1.699973083E12, 51330.0], [1.699973066E12, 48791.0], [1.699973065E12, 45816.0], [1.699973069E12, 49701.0], [1.699973068E12, 42604.0], [1.699973067E12, 53898.0], [1.699973072E12, 49403.0], [1.699973071E12, 49378.0], [1.69997307E12, 47461.0], [1.699973074E12, 49067.0], [1.699973073E12, 49391.0], [1.699973077E12, 49408.0], [1.699973076E12, 49401.0], [1.699973075E12, 53592.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699973084E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 8.858611825192806, "minX": 1.699973062E12, "maxY": 14212.166666666662, "series": [{"data": [[1.69997308E12, 11296.061643835621], [1.699973079E12, 10502.732026143789], [1.699973078E12, 9851.079470198676], [1.699973082E12, 12636.967741935481], [1.699973081E12, 12031.098684210525], [1.699973064E12, 23.256972111553793], [1.699973063E12, 8.858611825192806], [1.699973084E12, 14212.166666666662], [1.699973062E12, 34.93333333333333], [1.699973083E12, 13360.459119496858], [1.699973066E12, 1322.8079470198672], [1.699973065E12, 461.6056338028169], [1.699973069E12, 3619.7337662337663], [1.699973068E12, 2788.598484848486], [1.699973067E12, 2137.041916167665], [1.699973072E12, 5769.248366013073], [1.699973071E12, 4957.673202614377], [1.69997307E12, 4331.469387755103], [1.699973074E12, 7102.651315789472], [1.699973073E12, 6458.137254901961], [1.699973077E12, 9172.444444444443], [1.699973076E12, 8522.516339869278], [1.699973075E12, 7805.066265060242]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699973084E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 8.812339331619535, "minX": 1.699973062E12, "maxY": 14212.097222222219, "series": [{"data": [[1.69997308E12, 11296.041095890416], [1.699973079E12, 10502.712418300653], [1.699973078E12, 9851.03973509934], [1.699973082E12, 12636.896774193548], [1.699973081E12, 12030.828947368422], [1.699973064E12, 23.181274900398417], [1.699973063E12, 8.812339331619535], [1.699973084E12, 14212.097222222219], [1.699973062E12, 33.853333333333346], [1.699973083E12, 13360.421383647803], [1.699973066E12, 1322.7947019867556], [1.699973065E12, 461.46478873239454], [1.699973069E12, 3619.6883116883096], [1.699973068E12, 2788.5454545454536], [1.699973067E12, 2137.000000000001], [1.699973072E12, 5769.169934640524], [1.699973071E12, 4957.627450980397], [1.69997307E12, 4331.421768707482], [1.699973074E12, 7102.605263157893], [1.699973073E12, 6458.078431372548], [1.699973077E12, 9172.418300653591], [1.699973076E12, 8522.45751633987], [1.699973075E12, 7805.006024096386]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699973084E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.651315789473684, "minX": 1.699973062E12, "maxY": 13.826666666666672, "series": [{"data": [[1.69997308E12, 0.7397260273972603], [1.699973079E12, 0.7124183006535951], [1.699973078E12, 0.6688741721854307], [1.699973082E12, 0.7870967741935483], [1.699973081E12, 0.651315789473684], [1.699973064E12, 1.1414342629482075], [1.699973063E12, 1.9460154241645236], [1.699973084E12, 1.3819444444444444], [1.699973062E12, 13.826666666666672], [1.699973083E12, 1.1572327044025152], [1.699973066E12, 1.6158940397351], [1.699973065E12, 1.401408450704225], [1.699973069E12, 1.207792207792208], [1.699973068E12, 1.2272727272727277], [1.699973067E12, 1.4251497005988027], [1.699973072E12, 1.3790849673202616], [1.699973071E12, 1.8039215686274515], [1.69997307E12, 1.1360544217687083], [1.699973074E12, 0.8618421052631574], [1.699973073E12, 1.0457516339869275], [1.699973077E12, 0.9346405228758169], [1.699973076E12, 0.8431372549019605], [1.699973075E12, 1.1325301204819282]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699973084E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.699973062E12, "maxY": 16692.0, "series": [{"data": [[1.69997308E12, 13933.0], [1.699973079E12, 12309.0], [1.699973078E12, 11838.0], [1.699973082E12, 15213.0], [1.699973081E12, 14013.0], [1.699973064E12, 230.0], [1.699973063E12, 22.0], [1.699973084E12, 16692.0], [1.699973062E12, 101.0], [1.699973083E12, 15103.0], [1.699973066E12, 2205.0], [1.699973065E12, 1143.0], [1.699973069E12, 4941.0], [1.699973068E12, 4091.0], [1.699973067E12, 3035.0], [1.699973072E12, 7414.0], [1.699973071E12, 6703.0], [1.69997307E12, 5888.0], [1.699973074E12, 9545.0], [1.699973073E12, 8994.0], [1.699973077E12, 11840.0], [1.699973076E12, 10164.0], [1.699973075E12, 9611.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69997308E12, 11962.8], [1.699973079E12, 11169.6], [1.699973078E12, 10444.000000000002], [1.699973082E12, 13304.2], [1.699973081E12, 12723.7], [1.699973064E12, 61.69999999999999], [1.699973063E12, 12.0], [1.699973084E12, 15006.0], [1.699973062E12, 80.40000000000003], [1.699973083E12, 14087.0], [1.699973066E12, 1685.8000000000002], [1.699973065E12, 904.1000000000006], [1.699973069E12, 4241.5], [1.699973068E12, 3323.3], [1.699973067E12, 2588.0], [1.699973072E12, 6464.4], [1.699973071E12, 5486.2], [1.69997307E12, 4945.0], [1.699973074E12, 7802.300000000001], [1.699973073E12, 7179.599999999999], [1.699973077E12, 9839.8], [1.699973076E12, 9275.4], [1.699973075E12, 8448.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69997308E12, 13753.460000000001], [1.699973079E12, 12225.840000000002], [1.699973078E12, 11727.239999999998], [1.699973082E12, 14901.079999999998], [1.699973081E12, 13976.43], [1.699973064E12, 196.93999999999994], [1.699973063E12, 17.100000000000023], [1.699973084E12, 16500.300000000007], [1.699973062E12, 101.0], [1.699973083E12, 15095.8], [1.699973066E12, 2131.1599999999985], [1.699973065E12, 1138.27], [1.699973069E12, 4738.599999999996], [1.699973068E12, 4039.519999999998], [1.699973067E12, 3001.68], [1.699973072E12, 7306.540000000002], [1.699973071E12, 6509.140000000003], [1.69997307E12, 5876.4800000000005], [1.699973074E12, 9185.13], [1.699973073E12, 8616.540000000006], [1.699973077E12, 11492.780000000004], [1.699973076E12, 10023.600000000002], [1.699973075E12, 9564.1]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69997308E12, 12127.95], [1.699973079E12, 11582.499999999996], [1.699973078E12, 10913.4], [1.699973082E12, 13659.6], [1.699973081E12, 13299.8], [1.699973064E12, 101.5499999999999], [1.699973063E12, 14.0], [1.699973084E12, 15340.25], [1.699973062E12, 91.4], [1.699973083E12, 14407.0], [1.699973066E12, 1799.8000000000002], [1.699973065E12, 991.9999999999998], [1.699973069E12, 4402.75], [1.699973068E12, 3568.9], [1.699973067E12, 2657.2], [1.699973072E12, 6720.699999999999], [1.699973071E12, 5783.299999999999], [1.69997307E12, 5431.599999999999], [1.699973074E12, 8136.15], [1.699973073E12, 7667.5999999999985], [1.699973077E12, 10101.199999999999], [1.699973076E12, 9667.0], [1.699973075E12, 8774.45]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.69997308E12, 10530.0], [1.699973079E12, 9851.0], [1.699973078E12, 9142.0], [1.699973082E12, 11977.0], [1.699973081E12, 11237.0], [1.699973064E12, 5.0], [1.699973063E12, 5.0], [1.699973084E12, 13461.0], [1.699973062E12, 6.0], [1.699973083E12, 12555.0], [1.699973066E12, 753.0], [1.699973065E12, 10.0], [1.699973069E12, 2932.0], [1.699973068E12, 2219.0], [1.699973067E12, 1531.0], [1.699973072E12, 5055.0], [1.699973071E12, 4313.0], [1.69997307E12, 3610.0], [1.699973074E12, 6375.0], [1.699973073E12, 5727.0], [1.699973077E12, 8526.0], [1.699973076E12, 7757.0], [1.699973075E12, 7106.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69997308E12, 11191.0], [1.699973079E12, 10385.0], [1.699973078E12, 9773.0], [1.699973082E12, 12521.0], [1.699973081E12, 11897.5], [1.699973064E12, 9.0], [1.699973063E12, 8.0], [1.699973084E12, 14054.5], [1.699973062E12, 13.0], [1.699973083E12, 13295.0], [1.699973066E12, 1327.0], [1.699973065E12, 392.5], [1.699973069E12, 3538.0], [1.699973068E12, 2714.0], [1.699973067E12, 2125.0], [1.699973072E12, 5664.0], [1.699973071E12, 4918.0], [1.69997307E12, 4238.0], [1.699973074E12, 6999.5], [1.699973073E12, 6358.0], [1.699973077E12, 9076.0], [1.699973076E12, 8417.0], [1.699973075E12, 7722.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699973084E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 75.0, "maxY": 14054.5, "series": [{"data": [[132.0, 2714.0], [142.0, 392.5], [151.0, 5673.5], [147.0, 4238.0], [146.0, 11191.0], [144.0, 14054.5], [154.0, 3538.0], [153.0, 7841.0], [152.0, 10391.0], [155.0, 12521.0], [159.0, 13295.0], [167.0, 2125.0], [166.0, 7722.0], [75.0, 13.0], [389.0, 8.0], [502.0, 9.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 502.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 75.0, "maxY": 14054.5, "series": [{"data": [[132.0, 2714.0], [142.0, 392.5], [151.0, 5673.5], [147.0, 4238.0], [146.0, 11191.0], [144.0, 14054.5], [154.0, 3538.0], [153.0, 7841.0], [152.0, 10391.0], [155.0, 12521.0], [159.0, 13295.0], [167.0, 2125.0], [166.0, 7722.0], [75.0, 13.0], [389.0, 8.0], [502.0, 9.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 502.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 78.0, "minX": 1.699973062E12, "maxY": 636.0, "series": [{"data": [[1.699973069E12, 499.0], [1.699973068E12, 501.0], [1.699973067E12, 499.0], [1.69997307E12, 296.0], [1.699973064E12, 636.0], [1.699973063E12, 392.0], [1.699973062E12, 78.0], [1.699973066E12, 501.0], [1.699973065E12, 600.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.69997307E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 75.0, "minX": 1.699973062E12, "maxY": 502.0, "series": [{"data": [[1.69997308E12, 146.0], [1.699973079E12, 153.0], [1.699973078E12, 151.0], [1.699973082E12, 155.0], [1.699973081E12, 152.0], [1.699973064E12, 502.0], [1.699973063E12, 389.0], [1.699973084E12, 144.0], [1.699973062E12, 75.0], [1.699973083E12, 159.0], [1.699973066E12, 151.0], [1.699973065E12, 142.0], [1.699973069E12, 154.0], [1.699973068E12, 132.0], [1.699973067E12, 167.0], [1.699973072E12, 153.0], [1.699973071E12, 153.0], [1.69997307E12, 147.0], [1.699973074E12, 152.0], [1.699973073E12, 153.0], [1.699973077E12, 153.0], [1.699973076E12, 153.0], [1.699973075E12, 166.0]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699973084E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 75.0, "minX": 1.699973062E12, "maxY": 502.0, "series": [{"data": [[1.69997308E12, 146.0], [1.699973079E12, 153.0], [1.699973078E12, 151.0], [1.699973082E12, 155.0], [1.699973081E12, 152.0], [1.699973064E12, 502.0], [1.699973063E12, 389.0], [1.699973084E12, 144.0], [1.699973062E12, 75.0], [1.699973083E12, 159.0], [1.699973066E12, 151.0], [1.699973065E12, 142.0], [1.699973069E12, 154.0], [1.699973068E12, 132.0], [1.699973067E12, 167.0], [1.699973072E12, 153.0], [1.699973071E12, 153.0], [1.69997307E12, 147.0], [1.699973074E12, 152.0], [1.699973073E12, 153.0], [1.699973077E12, 153.0], [1.699973076E12, 153.0], [1.699973075E12, 166.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699973084E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 75.0, "minX": 1.699973062E12, "maxY": 502.0, "series": [{"data": [[1.69997308E12, 146.0], [1.699973079E12, 153.0], [1.699973078E12, 151.0], [1.699973082E12, 155.0], [1.699973081E12, 152.0], [1.699973064E12, 502.0], [1.699973063E12, 389.0], [1.699973084E12, 144.0], [1.699973062E12, 75.0], [1.699973083E12, 159.0], [1.699973066E12, 151.0], [1.699973065E12, 142.0], [1.699973069E12, 154.0], [1.699973068E12, 132.0], [1.699973067E12, 167.0], [1.699973072E12, 153.0], [1.699973071E12, 153.0], [1.69997307E12, 147.0], [1.699973074E12, 152.0], [1.699973073E12, 153.0], [1.699973077E12, 153.0], [1.699973076E12, 153.0], [1.699973075E12, 166.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699973084E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

