/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 18166.0, "series": [{"data": [[0.0, 5.0], [0.1, 6.0], [0.2, 6.0], [0.3, 6.0], [0.4, 6.0], [0.5, 6.0], [0.6, 6.0], [0.7, 6.0], [0.8, 6.0], [0.9, 6.0], [1.0, 6.0], [1.1, 6.0], [1.2, 6.0], [1.3, 6.0], [1.4, 7.0], [1.5, 7.0], [1.6, 7.0], [1.7, 7.0], [1.8, 7.0], [1.9, 7.0], [2.0, 7.0], [2.1, 7.0], [2.2, 7.0], [2.3, 7.0], [2.4, 7.0], [2.5, 7.0], [2.6, 7.0], [2.7, 7.0], [2.8, 7.0], [2.9, 7.0], [3.0, 7.0], [3.1, 7.0], [3.2, 7.0], [3.3, 7.0], [3.4, 7.0], [3.5, 7.0], [3.6, 7.0], [3.7, 7.0], [3.8, 7.0], [3.9, 7.0], [4.0, 7.0], [4.1, 7.0], [4.2, 7.0], [4.3, 8.0], [4.4, 8.0], [4.5, 8.0], [4.6, 8.0], [4.7, 8.0], [4.8, 8.0], [4.9, 8.0], [5.0, 8.0], [5.1, 8.0], [5.2, 8.0], [5.3, 8.0], [5.4, 8.0], [5.5, 8.0], [5.6, 8.0], [5.7, 8.0], [5.8, 8.0], [5.9, 8.0], [6.0, 8.0], [6.1, 8.0], [6.2, 8.0], [6.3, 8.0], [6.4, 8.0], [6.5, 8.0], [6.6, 8.0], [6.7, 8.0], [6.8, 8.0], [6.9, 8.0], [7.0, 8.0], [7.1, 8.0], [7.2, 9.0], [7.3, 9.0], [7.4, 9.0], [7.5, 9.0], [7.6, 9.0], [7.7, 9.0], [7.8, 9.0], [7.9, 9.0], [8.0, 9.0], [8.1, 9.0], [8.2, 9.0], [8.3, 9.0], [8.4, 9.0], [8.5, 9.0], [8.6, 9.0], [8.7, 9.0], [8.8, 9.0], [8.9, 9.0], [9.0, 9.0], [9.1, 10.0], [9.2, 10.0], [9.3, 10.0], [9.4, 10.0], [9.5, 10.0], [9.6, 10.0], [9.7, 10.0], [9.8, 10.0], [9.9, 10.0], [10.0, 10.0], [10.1, 10.0], [10.2, 11.0], [10.3, 11.0], [10.4, 11.0], [10.5, 11.0], [10.6, 11.0], [10.7, 11.0], [10.8, 11.0], [10.9, 12.0], [11.0, 12.0], [11.1, 12.0], [11.2, 12.0], [11.3, 12.0], [11.4, 13.0], [11.5, 13.0], [11.6, 13.0], [11.7, 13.0], [11.8, 13.0], [11.9, 14.0], [12.0, 14.0], [12.1, 14.0], [12.2, 14.0], [12.3, 15.0], [12.4, 15.0], [12.5, 16.0], [12.6, 16.0], [12.7, 18.0], [12.8, 20.0], [12.9, 23.0], [13.0, 24.0], [13.1, 26.0], [13.2, 29.0], [13.3, 30.0], [13.4, 32.0], [13.5, 34.0], [13.6, 36.0], [13.7, 37.0], [13.8, 39.0], [13.9, 41.0], [14.0, 43.0], [14.1, 44.0], [14.2, 46.0], [14.3, 49.0], [14.4, 50.0], [14.5, 51.0], [14.6, 52.0], [14.7, 55.0], [14.8, 57.0], [14.9, 59.0], [15.0, 72.0], [15.1, 80.0], [15.2, 89.0], [15.3, 93.0], [15.4, 103.0], [15.5, 108.0], [15.6, 116.0], [15.7, 120.0], [15.8, 135.0], [15.9, 146.0], [16.0, 150.0], [16.1, 158.0], [16.2, 168.0], [16.3, 178.0], [16.4, 189.0], [16.5, 215.0], [16.6, 243.0], [16.7, 257.0], [16.8, 288.0], [16.9, 305.0], [17.0, 324.0], [17.1, 391.0], [17.2, 421.0], [17.3, 429.0], [17.4, 461.0], [17.5, 470.0], [17.6, 513.0], [17.7, 561.0], [17.8, 595.0], [17.9, 611.0], [18.0, 617.0], [18.1, 635.0], [18.2, 659.0], [18.3, 672.0], [18.4, 723.0], [18.5, 765.0], [18.6, 772.0], [18.7, 796.0], [18.8, 838.0], [18.9, 868.0], [19.0, 926.0], [19.1, 956.0], [19.2, 972.0], [19.3, 987.0], [19.4, 993.0], [19.5, 1011.0], [19.6, 1020.0], [19.7, 1063.0], [19.8, 1079.0], [19.9, 1122.0], [20.0, 1153.0], [20.1, 1160.0], [20.2, 1226.0], [20.3, 1229.0], [20.4, 1267.0], [20.5, 1299.0], [20.6, 1309.0], [20.7, 1326.0], [20.8, 1365.0], [20.9, 1380.0], [21.0, 1408.0], [21.1, 1420.0], [21.2, 1452.0], [21.3, 1485.0], [21.4, 1532.0], [21.5, 1548.0], [21.6, 1580.0], [21.7, 1608.0], [21.8, 1643.0], [21.9, 1669.0], [22.0, 1681.0], [22.1, 1730.0], [22.2, 1733.0], [22.3, 1744.0], [22.4, 1778.0], [22.5, 1796.0], [22.6, 1834.0], [22.7, 1862.0], [22.8, 1872.0], [22.9, 1901.0], [23.0, 1922.0], [23.1, 1935.0], [23.2, 1966.0], [23.3, 1983.0], [23.4, 2011.0], [23.5, 2021.0], [23.6, 2055.0], [23.7, 2067.0], [23.8, 2087.0], [23.9, 2138.0], [24.0, 2162.0], [24.1, 2216.0], [24.2, 2233.0], [24.3, 2274.0], [24.4, 2282.0], [24.5, 2310.0], [24.6, 2329.0], [24.7, 2383.0], [24.8, 2409.0], [24.9, 2423.0], [25.0, 2438.0], [25.1, 2442.0], [25.2, 2477.0], [25.3, 2497.0], [25.4, 2519.0], [25.5, 2532.0], [25.6, 2553.0], [25.7, 2576.0], [25.8, 2609.0], [25.9, 2626.0], [26.0, 2641.0], [26.1, 2665.0], [26.2, 2691.0], [26.3, 2697.0], [26.4, 2725.0], [26.5, 2743.0], [26.6, 2751.0], [26.7, 2762.0], [26.8, 2772.0], [26.9, 2791.0], [27.0, 2818.0], [27.1, 2840.0], [27.2, 2853.0], [27.3, 2881.0], [27.4, 2912.0], [27.5, 2929.0], [27.6, 2948.0], [27.7, 2981.0], [27.8, 3011.0], [27.9, 3031.0], [28.0, 3056.0], [28.1, 3066.0], [28.2, 3081.0], [28.3, 3115.0], [28.4, 3120.0], [28.5, 3133.0], [28.6, 3166.0], [28.7, 3180.0], [28.8, 3199.0], [28.9, 3216.0], [29.0, 3240.0], [29.1, 3261.0], [29.2, 3271.0], [29.3, 3298.0], [29.4, 3319.0], [29.5, 3340.0], [29.6, 3360.0], [29.7, 3376.0], [29.8, 3420.0], [29.9, 3427.0], [30.0, 3470.0], [30.1, 3486.0], [30.2, 3511.0], [30.3, 3522.0], [30.4, 3531.0], [30.5, 3549.0], [30.6, 3559.0], [30.7, 3569.0], [30.8, 3603.0], [30.9, 3629.0], [31.0, 3658.0], [31.1, 3666.0], [31.2, 3674.0], [31.3, 3695.0], [31.4, 3714.0], [31.5, 3741.0], [31.6, 3752.0], [31.7, 3768.0], [31.8, 3773.0], [31.9, 3782.0], [32.0, 3830.0], [32.1, 3849.0], [32.2, 3873.0], [32.3, 3888.0], [32.4, 3917.0], [32.5, 3926.0], [32.6, 3943.0], [32.7, 3996.0], [32.8, 4009.0], [32.9, 4031.0], [33.0, 4075.0], [33.1, 4082.0], [33.2, 4108.0], [33.3, 4127.0], [33.4, 4141.0], [33.5, 4169.0], [33.6, 4178.0], [33.7, 4186.0], [33.8, 4203.0], [33.9, 4224.0], [34.0, 4243.0], [34.1, 4262.0], [34.2, 4295.0], [34.3, 4310.0], [34.4, 4335.0], [34.5, 4344.0], [34.6, 4390.0], [34.7, 4404.0], [34.8, 4424.0], [34.9, 4440.0], [35.0, 4450.0], [35.1, 4467.0], [35.2, 4481.0], [35.3, 4493.0], [35.4, 4504.0], [35.5, 4521.0], [35.6, 4533.0], [35.7, 4545.0], [35.8, 4554.0], [35.9, 4573.0], [36.0, 4590.0], [36.1, 4614.0], [36.2, 4656.0], [36.3, 4673.0], [36.4, 4682.0], [36.5, 4698.0], [36.6, 4707.0], [36.7, 4728.0], [36.8, 4746.0], [36.9, 4803.0], [37.0, 4824.0], [37.1, 4825.0], [37.2, 4853.0], [37.3, 4867.0], [37.4, 4892.0], [37.5, 4908.0], [37.6, 4914.0], [37.7, 4919.0], [37.8, 4930.0], [37.9, 4949.0], [38.0, 4966.0], [38.1, 4970.0], [38.2, 4976.0], [38.3, 4985.0], [38.4, 4992.0], [38.5, 5014.0], [38.6, 5035.0], [38.7, 5041.0], [38.8, 5062.0], [38.9, 5082.0], [39.0, 5092.0], [39.1, 5106.0], [39.2, 5116.0], [39.3, 5144.0], [39.4, 5162.0], [39.5, 5204.0], [39.6, 5224.0], [39.7, 5247.0], [39.8, 5254.0], [39.9, 5264.0], [40.0, 5277.0], [40.1, 5284.0], [40.2, 5308.0], [40.3, 5320.0], [40.4, 5335.0], [40.5, 5347.0], [40.6, 5355.0], [40.7, 5379.0], [40.8, 5399.0], [40.9, 5416.0], [41.0, 5439.0], [41.1, 5463.0], [41.2, 5490.0], [41.3, 5520.0], [41.4, 5528.0], [41.5, 5549.0], [41.6, 5576.0], [41.7, 5588.0], [41.8, 5612.0], [41.9, 5632.0], [42.0, 5652.0], [42.1, 5658.0], [42.2, 5683.0], [42.3, 5694.0], [42.4, 5708.0], [42.5, 5716.0], [42.6, 5727.0], [42.7, 5753.0], [42.8, 5764.0], [42.9, 5774.0], [43.0, 5789.0], [43.1, 5821.0], [43.2, 5833.0], [43.3, 5842.0], [43.4, 5853.0], [43.5, 5880.0], [43.6, 5893.0], [43.7, 5903.0], [43.8, 5928.0], [43.9, 5941.0], [44.0, 5957.0], [44.1, 5980.0], [44.2, 5987.0], [44.3, 6021.0], [44.4, 6037.0], [44.5, 6053.0], [44.6, 6069.0], [44.7, 6091.0], [44.8, 6122.0], [44.9, 6138.0], [45.0, 6153.0], [45.1, 6173.0], [45.2, 6180.0], [45.3, 6193.0], [45.4, 6211.0], [45.5, 6234.0], [45.6, 6244.0], [45.7, 6262.0], [45.8, 6272.0], [45.9, 6284.0], [46.0, 6310.0], [46.1, 6326.0], [46.2, 6340.0], [46.3, 6360.0], [46.4, 6382.0], [46.5, 6392.0], [46.6, 6400.0], [46.7, 6415.0], [46.8, 6441.0], [46.9, 6463.0], [47.0, 6487.0], [47.1, 6504.0], [47.2, 6522.0], [47.3, 6533.0], [47.4, 6542.0], [47.5, 6550.0], [47.6, 6561.0], [47.7, 6581.0], [47.8, 6587.0], [47.9, 6597.0], [48.0, 6607.0], [48.1, 6633.0], [48.2, 6665.0], [48.3, 6675.0], [48.4, 6731.0], [48.5, 6739.0], [48.6, 6764.0], [48.7, 6785.0], [48.8, 6794.0], [48.9, 6820.0], [49.0, 6840.0], [49.1, 6874.0], [49.2, 6882.0], [49.3, 6894.0], [49.4, 6901.0], [49.5, 6917.0], [49.6, 6932.0], [49.7, 6938.0], [49.8, 6966.0], [49.9, 6982.0], [50.0, 6991.0], [50.1, 7005.0], [50.2, 7017.0], [50.3, 7046.0], [50.4, 7085.0], [50.5, 7094.0], [50.6, 7138.0], [50.7, 7156.0], [50.8, 7172.0], [50.9, 7183.0], [51.0, 7200.0], [51.1, 7230.0], [51.2, 7242.0], [51.3, 7253.0], [51.4, 7263.0], [51.5, 7280.0], [51.6, 7309.0], [51.7, 7320.0], [51.8, 7333.0], [51.9, 7342.0], [52.0, 7385.0], [52.1, 7399.0], [52.2, 7418.0], [52.3, 7435.0], [52.4, 7445.0], [52.5, 7466.0], [52.6, 7484.0], [52.7, 7501.0], [52.8, 7516.0], [52.9, 7524.0], [53.0, 7531.0], [53.1, 7537.0], [53.2, 7579.0], [53.3, 7597.0], [53.4, 7622.0], [53.5, 7634.0], [53.6, 7651.0], [53.7, 7667.0], [53.8, 7677.0], [53.9, 7686.0], [54.0, 7693.0], [54.1, 7697.0], [54.2, 7730.0], [54.3, 7737.0], [54.4, 7749.0], [54.5, 7769.0], [54.6, 7790.0], [54.7, 7817.0], [54.8, 7825.0], [54.9, 7851.0], [55.0, 7869.0], [55.1, 7889.0], [55.2, 7901.0], [55.3, 7911.0], [55.4, 7954.0], [55.5, 7965.0], [55.6, 8000.0], [55.7, 8020.0], [55.8, 8043.0], [55.9, 8054.0], [56.0, 8079.0], [56.1, 8113.0], [56.2, 8119.0], [56.3, 8125.0], [56.4, 8138.0], [56.5, 8152.0], [56.6, 8165.0], [56.7, 8186.0], [56.8, 8203.0], [56.9, 8220.0], [57.0, 8227.0], [57.1, 8240.0], [57.2, 8268.0], [57.3, 8273.0], [57.4, 8295.0], [57.5, 8314.0], [57.6, 8346.0], [57.7, 8381.0], [57.8, 8408.0], [57.9, 8423.0], [58.0, 8448.0], [58.1, 8458.0], [58.2, 8476.0], [58.3, 8491.0], [58.4, 8511.0], [58.5, 8533.0], [58.6, 8542.0], [58.7, 8557.0], [58.8, 8573.0], [58.9, 8592.0], [59.0, 8605.0], [59.1, 8621.0], [59.2, 8647.0], [59.3, 8662.0], [59.4, 8672.0], [59.5, 8688.0], [59.6, 8706.0], [59.7, 8714.0], [59.8, 8732.0], [59.9, 8750.0], [60.0, 8770.0], [60.1, 8803.0], [60.2, 8814.0], [60.3, 8824.0], [60.4, 8840.0], [60.5, 8864.0], [60.6, 8871.0], [60.7, 8882.0], [60.8, 8914.0], [60.9, 8923.0], [61.0, 8937.0], [61.1, 8962.0], [61.2, 8976.0], [61.3, 8988.0], [61.4, 9003.0], [61.5, 9022.0], [61.6, 9053.0], [61.7, 9068.0], [61.8, 9090.0], [61.9, 9096.0], [62.0, 9106.0], [62.1, 9156.0], [62.2, 9177.0], [62.3, 9189.0], [62.4, 9197.0], [62.5, 9215.0], [62.6, 9225.0], [62.7, 9236.0], [62.8, 9243.0], [62.9, 9261.0], [63.0, 9289.0], [63.1, 9304.0], [63.2, 9319.0], [63.3, 9333.0], [63.4, 9363.0], [63.5, 9382.0], [63.6, 9390.0], [63.7, 9406.0], [63.8, 9424.0], [63.9, 9461.0], [64.0, 9492.0], [64.1, 9503.0], [64.2, 9522.0], [64.3, 9548.0], [64.4, 9568.0], [64.5, 9585.0], [64.6, 9595.0], [64.7, 9603.0], [64.8, 9617.0], [64.9, 9631.0], [65.0, 9654.0], [65.1, 9670.0], [65.2, 9685.0], [65.3, 9713.0], [65.4, 9730.0], [65.5, 9739.0], [65.6, 9749.0], [65.7, 9770.0], [65.8, 9775.0], [65.9, 9802.0], [66.0, 9815.0], [66.1, 9833.0], [66.2, 9851.0], [66.3, 9875.0], [66.4, 9881.0], [66.5, 9901.0], [66.6, 9918.0], [66.7, 9931.0], [66.8, 9956.0], [66.9, 9969.0], [67.0, 9984.0], [67.1, 10000.0], [67.2, 10017.0], [67.3, 10030.0], [67.4, 10049.0], [67.5, 10071.0], [67.6, 10082.0], [67.7, 10094.0], [67.8, 10111.0], [67.9, 10132.0], [68.0, 10145.0], [68.1, 10166.0], [68.2, 10185.0], [68.3, 10199.0], [68.4, 10226.0], [68.5, 10229.0], [68.6, 10237.0], [68.7, 10264.0], [68.8, 10270.0], [68.9, 10273.0], [69.0, 10286.0], [69.1, 10304.0], [69.2, 10320.0], [69.3, 10337.0], [69.4, 10355.0], [69.5, 10374.0], [69.6, 10388.0], [69.7, 10408.0], [69.8, 10427.0], [69.9, 10453.0], [70.0, 10486.0], [70.1, 10506.0], [70.2, 10549.0], [70.3, 10559.0], [70.4, 10582.0], [70.5, 10602.0], [70.6, 10615.0], [70.7, 10650.0], [70.8, 10680.0], [70.9, 10690.0], [71.0, 10704.0], [71.1, 10738.0], [71.2, 10750.0], [71.3, 10754.0], [71.4, 10759.0], [71.5, 10766.0], [71.6, 10797.0], [71.7, 10811.0], [71.8, 10823.0], [71.9, 10842.0], [72.0, 10854.0], [72.1, 10872.0], [72.2, 10899.0], [72.3, 10916.0], [72.4, 10922.0], [72.5, 10938.0], [72.6, 10945.0], [72.7, 10966.0], [72.8, 10986.0], [72.9, 11025.0], [73.0, 11062.0], [73.1, 11073.0], [73.2, 11083.0], [73.3, 11097.0], [73.4, 11124.0], [73.5, 11137.0], [73.6, 11148.0], [73.7, 11165.0], [73.8, 11201.0], [73.9, 11219.0], [74.0, 11229.0], [74.1, 11246.0], [74.2, 11252.0], [74.3, 11269.0], [74.4, 11280.0], [74.5, 11299.0], [74.6, 11315.0], [74.7, 11322.0], [74.8, 11336.0], [74.9, 11354.0], [75.0, 11375.0], [75.1, 11383.0], [75.2, 11397.0], [75.3, 11433.0], [75.4, 11446.0], [75.5, 11468.0], [75.6, 11511.0], [75.7, 11523.0], [75.8, 11552.0], [75.9, 11565.0], [76.0, 11599.0], [76.1, 11623.0], [76.2, 11639.0], [76.3, 11661.0], [76.4, 11677.0], [76.5, 11694.0], [76.6, 11699.0], [76.7, 11746.0], [76.8, 11769.0], [76.9, 11786.0], [77.0, 11794.0], [77.1, 11801.0], [77.2, 11815.0], [77.3, 11820.0], [77.4, 11832.0], [77.5, 11882.0], [77.6, 11921.0], [77.7, 11953.0], [77.8, 11966.0], [77.9, 11984.0], [78.0, 12006.0], [78.1, 12028.0], [78.2, 12032.0], [78.3, 12047.0], [78.4, 12058.0], [78.5, 12081.0], [78.6, 12097.0], [78.7, 12118.0], [78.8, 12159.0], [78.9, 12200.0], [79.0, 12219.0], [79.1, 12249.0], [79.2, 12271.0], [79.3, 12290.0], [79.4, 12310.0], [79.5, 12335.0], [79.6, 12351.0], [79.7, 12396.0], [79.8, 12422.0], [79.9, 12467.0], [80.0, 12482.0], [80.1, 12510.0], [80.2, 12523.0], [80.3, 12545.0], [80.4, 12575.0], [80.5, 12592.0], [80.6, 12610.0], [80.7, 12615.0], [80.8, 12625.0], [80.9, 12655.0], [81.0, 12660.0], [81.1, 12667.0], [81.2, 12676.0], [81.3, 12686.0], [81.4, 12718.0], [81.5, 12732.0], [81.6, 12737.0], [81.7, 12754.0], [81.8, 12778.0], [81.9, 12792.0], [82.0, 12804.0], [82.1, 12831.0], [82.2, 12848.0], [82.3, 12856.0], [82.4, 12878.0], [82.5, 12886.0], [82.6, 12900.0], [82.7, 12918.0], [82.8, 12939.0], [82.9, 12959.0], [83.0, 12979.0], [83.1, 13004.0], [83.2, 13027.0], [83.3, 13040.0], [83.4, 13072.0], [83.5, 13086.0], [83.6, 13112.0], [83.7, 13121.0], [83.8, 13127.0], [83.9, 13148.0], [84.0, 13160.0], [84.1, 13167.0], [84.2, 13183.0], [84.3, 13187.0], [84.4, 13203.0], [84.5, 13211.0], [84.6, 13226.0], [84.7, 13244.0], [84.8, 13259.0], [84.9, 13276.0], [85.0, 13283.0], [85.1, 13296.0], [85.2, 13302.0], [85.3, 13305.0], [85.4, 13311.0], [85.5, 13327.0], [85.6, 13333.0], [85.7, 13350.0], [85.8, 13367.0], [85.9, 13387.0], [86.0, 13410.0], [86.1, 13432.0], [86.2, 13446.0], [86.3, 13461.0], [86.4, 13484.0], [86.5, 13493.0], [86.6, 13505.0], [86.7, 13524.0], [86.8, 13546.0], [86.9, 13569.0], [87.0, 13589.0], [87.1, 13604.0], [87.2, 13623.0], [87.3, 13631.0], [87.4, 13642.0], [87.5, 13652.0], [87.6, 13665.0], [87.7, 13685.0], [87.8, 13714.0], [87.9, 13736.0], [88.0, 13752.0], [88.1, 13758.0], [88.2, 13786.0], [88.3, 13805.0], [88.4, 13818.0], [88.5, 13835.0], [88.6, 13843.0], [88.7, 13860.0], [88.8, 13875.0], [88.9, 13907.0], [89.0, 13919.0], [89.1, 13923.0], [89.2, 13935.0], [89.3, 13948.0], [89.4, 13955.0], [89.5, 13968.0], [89.6, 13983.0], [89.7, 13999.0], [89.8, 14009.0], [89.9, 14023.0], [90.0, 14063.0], [90.1, 14081.0], [90.2, 14088.0], [90.3, 14102.0], [90.4, 14109.0], [90.5, 14130.0], [90.6, 14155.0], [90.7, 14163.0], [90.8, 14179.0], [90.9, 14198.0], [91.0, 14232.0], [91.1, 14255.0], [91.2, 14262.0], [91.3, 14285.0], [91.4, 14308.0], [91.5, 14337.0], [91.6, 14350.0], [91.7, 14372.0], [91.8, 14396.0], [91.9, 14412.0], [92.0, 14422.0], [92.1, 14426.0], [92.2, 14465.0], [92.3, 14478.0], [92.4, 14506.0], [92.5, 14525.0], [92.6, 14538.0], [92.7, 14549.0], [92.8, 14565.0], [92.9, 14576.0], [93.0, 14603.0], [93.1, 14653.0], [93.2, 14690.0], [93.3, 14702.0], [93.4, 14750.0], [93.5, 14797.0], [93.6, 14807.0], [93.7, 14828.0], [93.8, 14840.0], [93.9, 14850.0], [94.0, 14873.0], [94.1, 14877.0], [94.2, 14892.0], [94.3, 14910.0], [94.4, 14950.0], [94.5, 14958.0], [94.6, 15010.0], [94.7, 15028.0], [94.8, 15057.0], [94.9, 15081.0], [95.0, 15117.0], [95.1, 15138.0], [95.2, 15157.0], [95.3, 15184.0], [95.4, 15197.0], [95.5, 15216.0], [95.6, 15251.0], [95.7, 15257.0], [95.8, 15267.0], [95.9, 15286.0], [96.0, 15302.0], [96.1, 15325.0], [96.2, 15352.0], [96.3, 15369.0], [96.4, 15378.0], [96.5, 15387.0], [96.6, 15402.0], [96.7, 15414.0], [96.8, 15418.0], [96.9, 15429.0], [97.0, 15444.0], [97.1, 15455.0], [97.2, 15474.0], [97.3, 15488.0], [97.4, 15500.0], [97.5, 15522.0], [97.6, 15535.0], [97.7, 15547.0], [97.8, 15556.0], [97.9, 15562.0], [98.0, 15598.0], [98.1, 15624.0], [98.2, 15634.0], [98.3, 15690.0], [98.4, 15716.0], [98.5, 15734.0], [98.6, 15754.0], [98.7, 15797.0], [98.8, 15833.0], [98.9, 15860.0], [99.0, 15933.0], [99.1, 15963.0], [99.2, 16059.0], [99.3, 16113.0], [99.4, 16154.0], [99.5, 16256.0], [99.6, 16433.0], [99.7, 16598.0], [99.8, 16841.0], [99.9, 17255.0], [100.0, 18166.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 618.0, "series": [{"data": [[0.0, 618.0], [100.0, 42.0], [200.0, 18.0], [300.0, 9.0], [400.0, 18.0], [500.0, 11.0], [600.0, 21.0], [700.0, 14.0], [800.0, 10.0], [900.0, 18.0], [1000.0, 18.0], [1100.0, 13.0], [1200.0, 14.0], [1300.0, 17.0], [1400.0, 16.0], [1500.0, 12.0], [1600.0, 16.0], [1700.0, 19.0], [1800.0, 15.0], [1900.0, 17.0], [2000.0, 21.0], [2100.0, 9.0], [2200.0, 16.0], [2300.0, 11.0], [2400.0, 23.0], [2500.0, 18.0], [2600.0, 22.0], [2700.0, 27.0], [2800.0, 15.0], [2900.0, 16.0], [3000.0, 20.0], [3100.0, 23.0], [3200.0, 20.0], [3300.0, 18.0], [3400.0, 15.0], [3500.0, 26.0], [3700.0, 25.0], [3600.0, 21.0], [3800.0, 17.0], [3900.0, 14.0], [4000.0, 19.0], [4200.0, 17.0], [4100.0, 25.0], [4300.0, 19.0], [4600.0, 19.0], [4400.0, 27.0], [4500.0, 27.0], [4700.0, 14.0], [4800.0, 22.0], [4900.0, 41.0], [5000.0, 25.0], [5100.0, 17.0], [5200.0, 28.0], [5300.0, 26.0], [5600.0, 22.0], [5400.0, 16.0], [5500.0, 22.0], [5700.0, 29.0], [5800.0, 25.0], [6000.0, 20.0], [5900.0, 22.0], [6100.0, 25.0], [6300.0, 25.0], [6200.0, 25.0], [6500.0, 33.0], [6400.0, 21.0], [6600.0, 16.0], [6700.0, 21.0], [6900.0, 28.0], [6800.0, 22.0], [7100.0, 19.0], [7000.0, 17.0], [7200.0, 23.0], [7400.0, 23.0], [7300.0, 22.0], [7600.0, 33.0], [7500.0, 25.0], [7900.0, 17.0], [7800.0, 22.0], [7700.0, 20.0], [8100.0, 29.0], [8000.0, 19.0], [8400.0, 24.0], [8300.0, 13.0], [8200.0, 25.0], [8600.0, 23.0], [8700.0, 23.0], [8500.0, 25.0], [8900.0, 25.0], [8800.0, 25.0], [9100.0, 20.0], [9200.0, 26.0], [9000.0, 23.0], [9400.0, 17.0], [9500.0, 23.0], [9600.0, 25.0], [9300.0, 23.0], [9700.0, 25.0], [10200.0, 30.0], [9900.0, 25.0], [10100.0, 23.0], [9800.0, 24.0], [10000.0, 26.0], [10300.0, 24.0], [10500.0, 16.0], [10400.0, 16.0], [10600.0, 20.0], [10700.0, 27.0], [11000.0, 18.0], [10800.0, 23.0], [10900.0, 26.0], [11100.0, 20.0], [11200.0, 29.0], [11600.0, 24.0], [11300.0, 28.0], [11500.0, 17.0], [11700.0, 18.0], [11400.0, 15.0], [11800.0, 20.0], [12200.0, 18.0], [12100.0, 10.0], [11900.0, 16.0], [12000.0, 26.0], [12300.0, 16.0], [12500.0, 20.0], [12400.0, 15.0], [12600.0, 32.0], [12700.0, 24.0], [12900.0, 20.0], [13000.0, 20.0], [13100.0, 31.0], [13200.0, 32.0], [12800.0, 25.0], [13300.0, 30.0], [13400.0, 27.0], [13500.0, 20.0], [13700.0, 23.0], [13600.0, 26.0], [13800.0, 24.0], [13900.0, 33.0], [14300.0, 20.0], [14100.0, 27.0], [14000.0, 22.0], [14200.0, 17.0], [14400.0, 20.0], [14700.0, 11.0], [14800.0, 30.0], [14500.0, 25.0], [14600.0, 12.0], [15000.0, 16.0], [15200.0, 22.0], [15100.0, 18.0], [14900.0, 11.0], [15300.0, 25.0], [15700.0, 15.0], [15500.0, 25.0], [15400.0, 32.0], [15800.0, 10.0], [15600.0, 13.0], [15900.0, 6.0], [16200.0, 3.0], [16000.0, 5.0], [16100.0, 9.0], [16600.0, 2.0], [17400.0, 2.0], [16900.0, 1.0], [17200.0, 1.0], [17000.0, 1.0], [17100.0, 1.0], [16400.0, 4.0], [16800.0, 1.0], [16700.0, 1.0], [16500.0, 3.0], [17600.0, 1.0], [18100.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 18100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 152.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 3158.0, "series": [{"data": [[0.0, 705.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 152.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 3158.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 5.3303571428571415, "minX": 1.699972709E12, "maxY": 2383.078787878788, "series": [{"data": [[1.699972717E12, 2383.078787878788], [1.699972716E12, 2367.5886075949375], [1.699972715E12, 2028.7532467532465], [1.69997272E12, 1906.0807453416148], [1.699972719E12, 2065.1210191082814], [1.699972718E12, 2222.0891719745246], [1.699972722E12, 1590.5595238095234], [1.699972721E12, 1750.1125827814567], [1.699972725E12, 1123.0884353741503], [1.699972724E12, 1275.5696202531644], [1.699972723E12, 1430.5723684210525], [1.699972728E12, 680.0429447852762], [1.699972727E12, 830.0875912408761], [1.699972726E12, 974.12582781457], [1.699972709E12, 5.3303571428571415], [1.69997273E12, 342.10489510489515], [1.699972729E12, 506.09729729729736], [1.699972712E12, 960.4820143884891], [1.699972711E12, 604.524193548387], [1.699972732E12, 46.16483516483516], [1.69997271E12, 56.31791907514451], [1.699972731E12, 181.1340782122904], [1.699972714E12, 1685.5547945205478], [1.699972713E12, 1331.4557823129255]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699972732E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 8.382608695652173, "minX": 1.0, "maxY": 17669.0, "series": [{"data": [[2.0, 418.57894736842104], [3.0, 8.382608695652173], [4.0, 268.1322314049587], [5.0, 9.108695652173914], [6.0, 475.42857142857144], [7.0, 313.843137254902], [8.0, 929.4705882352941], [9.0, 34.75], [10.0, 16782.0], [11.0, 5317.0], [12.0, 7867.0], [13.0, 3186.6], [14.0, 7736.5], [15.0, 15734.0], [16.0, 2609.5], [17.0, 3240.6], [18.0, 3096.2], [19.0, 2244.0], [20.0, 21.142857142857142], [21.0, 15503.0], [22.0, 15425.0], [23.0, 15457.0], [25.0, 6244.8], [26.0, 7823.5], [27.0, 7750.5], [28.0, 1219.153846153846], [29.0, 15371.0], [30.0, 15562.0], [31.0, 15847.0], [32.0, 7783.0], [33.0, 15416.0], [35.0, 16018.0], [37.0, 10970.0], [36.0, 15833.0], [39.0, 3874.5], [38.0, 15786.0], [40.0, 42.0], [41.0, 7879.75], [42.0, 8323.5], [43.0, 16667.0], [45.0, 3902.5], [44.0, 16489.0], [47.0, 3886.0], [46.0, 7806.0], [48.0, 3275.2], [49.0, 5189.333333333333], [51.0, 15450.0], [50.0, 16195.0], [53.0, 16173.0], [52.0, 15336.0], [54.0, 7927.0], [55.0, 3892.5], [57.0, 3080.8], [56.0, 5213.333333333333], [59.0, 3890.25], [58.0, 7996.0], [60.0, 5175.666666666667], [61.0, 15554.0], [63.0, 7706.0], [62.0, 81.33333333333333], [65.0, 5202.0], [67.0, 4159.5], [66.0, 7891.5], [64.0, 15920.5], [70.0, 10584.333333333334], [71.0, 15716.0], [68.0, 16113.0], [75.0, 15424.0], [74.0, 15685.0], [73.0, 15295.0], [72.0, 15574.0], [79.0, 7974.5], [78.0, 15716.0], [77.0, 15352.0], [76.0, 15877.0], [82.0, 5272.333333333333], [80.0, 8081.0], [83.0, 5268.333333333333], [81.0, 3912.75], [85.0, 8508.5], [84.0, 7732.0], [87.0, 7935.5], [86.0, 16231.0], [91.0, 15346.0], [90.0, 16428.0], [89.0, 15216.0], [95.0, 15266.0], [94.0, 15391.0], [92.0, 16107.0], [99.0, 15198.5], [97.0, 15550.0], [96.0, 15453.0], [103.0, 15737.0], [102.0, 16059.0], [101.0, 15879.0], [100.0, 15302.0], [107.0, 15179.0], [106.0, 15170.0], [105.0, 15152.0], [111.0, 15140.0], [110.0, 15251.0], [109.0, 15184.0], [108.0, 15561.0], [115.0, 15781.0], [114.0, 15488.0], [113.0, 15189.0], [112.0, 17669.0], [119.0, 3950.25], [118.0, 5147.833333333334], [116.0, 15572.0], [120.0, 5221.333333333333], [122.0, 15256.5], [126.0, 7615.5], [127.0, 8068.5], [125.0, 15440.0], [124.0, 15509.0], [128.0, 112.0], [135.0, 15000.0], [134.0, 16144.0], [133.0, 16154.0], [132.0, 15615.0], [131.0, 15522.0], [130.0, 15036.0], [129.0, 15421.5], [137.0, 55.0], [143.0, 15171.5], [141.0, 14837.0], [140.0, 14839.0], [139.0, 15735.0], [138.0, 15241.0], [151.0, 7825.5], [150.0, 15860.0], [149.0, 15130.0], [148.0, 15477.0], [147.0, 15267.0], [146.0, 17138.0], [145.0, 17455.0], [144.0, 14953.0], [152.0, 3884.5], [158.0, 15282.0], [157.0, 15466.0], [156.0, 16023.0], [155.0, 14883.0], [154.0, 15530.0], [153.0, 15429.0], [162.0, 7603.5], [161.0, 10264.666666666666], [167.0, 3888.75], [165.0, 7946.0], [166.0, 15082.0], [164.0, 15212.0], [163.0, 15326.0], [160.0, 15025.0], [169.0, 7854.75], [175.0, 15634.0], [174.0, 14840.0], [173.0, 15547.0], [172.0, 15237.0], [171.0, 15116.0], [181.0, 10034.666666666666], [182.0, 7527.5], [183.0, 14840.0], [180.0, 14853.0], [178.0, 15418.0], [177.0, 15375.0], [176.0, 17079.0], [191.0, 15320.0], [190.0, 14729.0], [189.0, 14958.0], [188.0, 14945.0], [187.0, 15629.0], [186.0, 15117.0], [185.0, 14884.0], [184.0, 15378.0], [194.0, 5048.333333333333], [195.0, 5068.333333333333], [193.0, 7507.0], [198.0, 4988.666666666667], [196.0, 3807.0], [199.0, 15081.0], [197.0, 15691.0], [192.0, 14728.0], [200.0, 5038.666666666667], [204.0, 7875.0], [207.0, 17489.0], [206.0, 14892.0], [205.0, 17255.0], [203.0, 15525.0], [202.0, 14565.0], [201.0, 14827.0], [209.0, 7342.0], [215.0, 14828.0], [214.0, 14928.0], [213.0, 15010.5], [211.0, 15593.0], [210.0, 14530.0], [208.0, 15145.0], [223.0, 14549.0], [222.0, 14554.0], [221.0, 14538.0], [220.0, 15480.0], [219.0, 15387.0], [218.0, 14953.0], [217.0, 14682.0], [216.0, 14518.0], [231.0, 15716.0], [230.0, 14568.0], [229.0, 15014.0], [228.0, 14742.0], [227.0, 15278.0], [226.0, 14544.0], [225.0, 14950.0], [224.0, 14798.0], [239.0, 4951.666666666667], [238.0, 3753.25], [237.0, 7328.5], [236.0, 4085.5], [235.0, 14595.0], [234.0, 14599.0], [233.0, 15556.0], [232.0, 14467.0], [240.0, 5713.0], [241.0, 8069.0], [244.0, 4975.0], [246.0, 7372.5], [245.0, 14378.0], [243.0, 15292.0], [242.0, 14412.0], [255.0, 14851.0], [254.0, 15010.0], [253.0, 14787.0], [251.0, 14493.0], [249.0, 14603.0], [248.0, 14779.5], [269.0, 14690.0], [270.0, 14299.0], [268.0, 15216.0], [259.0, 14346.0], [258.0, 14372.0], [257.0, 14397.0], [256.0, 16914.0], [267.0, 14957.0], [266.0, 15018.0], [265.0, 14691.0], [264.0, 14528.0], [263.0, 14414.0], [262.0, 14555.0], [261.0, 14503.0], [260.0, 14519.0], [285.0, 14750.0], [287.0, 9613.0], [284.0, 14234.0], [275.0, 15933.0], [274.0, 14304.0], [273.0, 14653.0], [272.0, 15143.0], [283.0, 14948.0], [282.0, 15211.0], [281.0, 15252.0], [280.0, 15084.0], [279.0, 15402.0], [278.0, 14308.0], [277.0, 15712.0], [276.0, 14327.0], [303.0, 14334.0], [289.0, 4912.666666666667], [295.0, 14159.0], [288.0, 14465.0], [294.0, 14279.0], [293.0, 14163.0], [292.0, 14404.0], [301.0, 7279.5], [302.0, 14535.0], [300.0, 14874.0], [290.0, 14239.0], [299.0, 14668.0], [298.0, 14408.0], [297.0, 14173.0], [296.0, 14174.0], [307.0, 7126.0], [306.0, 7393.0], [305.0, 14199.0], [304.0, 14195.0], [318.0, 14828.0], [317.0, 14524.0], [315.0, 14103.0], [314.0, 14507.0], [313.0, 15109.0], [311.0, 14910.0], [310.0, 15963.0], [309.0, 14106.0], [308.0, 14109.0], [335.0, 14396.0], [327.0, 9665.666666666666], [325.0, 14021.0], [324.0, 14872.0], [333.0, 7481.5], [334.0, 14797.0], [332.0, 13959.0], [323.0, 14023.0], [322.0, 14009.0], [321.0, 14007.0], [320.0, 14207.5], [331.0, 14345.0], [330.0, 14426.0], [329.0, 14715.0], [328.0, 14151.0], [350.0, 13916.5], [336.0, 4832.333333333333], [338.0, 14511.5], [342.0, 4022.75], [341.0, 14210.0], [340.0, 14100.0], [343.0, 7126.5], [351.0, 14039.0], [348.0, 14525.0], [339.0, 14015.0], [347.0, 14092.0], [346.0, 14004.0], [345.0, 13908.0], [344.0, 14262.0], [366.0, 13878.0], [367.0, 13808.0], [365.0, 14087.0], [364.0, 13846.0], [362.0, 13846.0], [361.0, 13935.0], [360.0, 13842.0], [359.0, 13946.0], [353.0, 15257.0], [352.0, 14169.0], [355.0, 15273.0], [354.0, 13835.0], [358.0, 13832.0], [357.0, 14256.0], [356.0, 15440.0], [383.0, 14085.0], [377.0, 7208.0], [382.0, 14092.0], [380.0, 13760.0], [379.0, 15504.0], [378.0, 13872.0], [376.0, 14192.5], [374.0, 13907.0], [368.0, 13805.0], [370.0, 14573.0], [369.0, 13814.0], [373.0, 14063.0], [372.0, 13905.5], [396.0, 5372.666666666667], [385.0, 6999.0], [384.0, 13920.0], [387.0, 14078.0], [386.0, 13752.0], [395.0, 9515.333333333334], [399.0, 14023.0], [398.0, 14106.0], [393.0, 14088.0], [392.0, 14125.0], [391.0, 13718.0], [390.0, 13779.0], [389.0, 13754.0], [388.0, 15068.0], [415.0, 13887.0], [402.0, 7626.0], [407.0, 13634.0], [401.0, 15190.0], [400.0, 13756.0], [406.0, 13994.0], [405.0, 14075.0], [404.0, 13651.0], [408.0, 7022.5], [414.0, 13733.0], [413.0, 14325.0], [412.0, 13935.0], [403.0, 14255.0], [411.0, 13631.0], [410.0, 13923.0], [409.0, 13633.0], [431.0, 9500.333333333334], [426.0, 6974.5], [429.0, 7002.0], [428.0, 14110.0], [427.0, 13796.0], [425.0, 13685.0], [424.0, 14155.0], [423.0, 13919.0], [418.0, 13569.0], [417.0, 13899.5], [422.0, 14558.0], [421.0, 13725.5], [420.0, 14040.0], [446.0, 13487.0], [447.0, 13581.0], [445.0, 13489.0], [444.0, 13497.0], [443.0, 13494.0], [442.0, 13869.0], [441.0, 14850.0], [440.0, 13701.0], [439.0, 13589.0], [433.0, 13708.0], [432.0, 13999.0], [435.0, 14350.0], [434.0, 14081.0], [438.0, 13514.0], [437.0, 14759.0], [436.0, 13934.0], [460.0, 14164.5], [462.0, 5106.333333333333], [461.0, 4848.0], [463.0, 14412.0], [458.0, 13582.0], [457.0, 13514.5], [455.0, 14828.0], [449.0, 13515.0], [448.0, 13494.0], [451.0, 13462.0], [450.0, 13983.0], [454.0, 14177.0], [452.0, 13973.0], [478.0, 13441.0], [468.0, 7339.5], [471.0, 13393.0], [464.0, 13360.0], [467.0, 13383.0], [466.0, 13374.5], [469.0, 13489.0], [479.0, 13736.0], [477.0, 14492.0], [476.0, 15256.0], [475.0, 14267.0], [474.0, 13355.0], [473.0, 13493.0], [472.0, 13839.0], [481.0, 7031.5], [485.0, 4827.333333333334], [484.0, 611.0], [487.0, 9110.333333333334], [480.0, 13654.0], [488.0, 4834.0], [489.0, 13997.0], [491.0, 13920.0], [490.0, 13758.0], [495.0, 13310.0], [494.0, 13263.0], [493.0, 13589.0], [492.0, 13404.0], [483.0, 13313.0], [482.0, 13309.0], [509.0, 14083.0], [510.0, 13524.0], [508.0, 13202.0], [499.0, 13279.0], [498.0, 13283.0], [496.0, 13680.0], [507.0, 14291.0], [506.0, 13643.0], [505.0, 13933.0], [504.0, 13260.0], [503.0, 13959.0], [502.0, 14882.0], [501.0, 13331.0], [500.0, 13287.0], [542.0, 13212.0], [514.0, 7142.5], [524.0, 6987.0], [522.0, 14482.0], [520.0, 13211.0], [526.0, 13642.0], [512.0, 13339.5], [528.0, 4821.666666666667], [530.0, 13160.0], [540.0, 13505.0], [538.0, 13865.0], [536.0, 13387.0], [518.0, 14807.0], [516.0, 14198.0], [534.0, 13296.0], [532.0, 13513.0], [572.0, 7219.5], [562.0, 7254.5], [558.0, 6959.5], [546.0, 13114.0], [544.0, 13294.0], [550.0, 13623.0], [548.0, 13308.5], [556.0, 13199.0], [554.0, 13167.0], [552.0, 13317.0], [566.0, 4314.75], [574.0, 13210.0], [570.0, 13601.0], [568.0, 13568.0], [564.0, 13470.0], [560.0, 13080.0], [602.0, 12906.0], [580.0, 6878.5], [578.0, 13298.0], [576.0, 13680.0], [586.0, 989.0], [584.0, 14363.0], [588.0, 13484.0], [590.0, 6868.0], [596.0, 6897.5], [592.0, 12972.0], [606.0, 13121.0], [604.0, 14182.0], [600.0, 12939.0], [582.0, 13045.0], [598.0, 13287.0], [614.0, 4857.666666666666], [616.0, 7005.0], [618.0, 14160.0], [620.0, 6775.5], [622.0, 7201.5], [612.0, 13117.0], [608.0, 12878.0], [634.0, 5022.0], [638.0, 12797.0], [624.0, 13161.0], [636.0, 13401.0], [632.0, 12795.0], [630.0, 14337.0], [628.0, 12853.0], [670.0, 6842.5], [652.0, 6891.0], [650.0, 7364.5], [648.0, 12872.0], [656.0, 6874.0], [658.0, 12686.0], [668.0, 13263.0], [666.0, 12788.0], [664.0, 12991.0], [654.0, 13127.0], [640.0, 13245.5], [644.0, 13204.0], [642.0, 13443.0], [646.0, 12879.0], [662.0, 13656.0], [660.0, 13305.0], [702.0, 12530.0], [696.0, 6817.0], [674.0, 6714.0], [672.0, 12668.0], [678.0, 12664.0], [676.0, 12660.0], [686.0, 13129.0], [684.0, 12736.0], [682.0, 12676.0], [688.0, 7006.0], [698.0, 7637.5], [700.0, 12639.0], [694.0, 12878.0], [692.0, 12908.0], [690.0, 12592.0], [732.0, 13308.0], [706.0, 6752.0], [704.0, 6794.5], [708.0, 9052.333333333334], [710.0, 12518.0], [714.0, 4028.0], [712.0, 12467.0], [716.0, 12754.0], [718.0, 12558.0], [734.0, 13311.0], [722.0, 12685.0], [720.0, 13248.0], [730.0, 12682.0], [728.0, 12580.0], [726.0, 12582.0], [724.0, 12979.0], [764.0, 13747.0], [760.0, 4834.0], [748.0, 3973.25], [746.0, 12422.0], [744.0, 12778.0], [750.0, 12886.0], [738.0, 12770.0], [736.0, 12720.0], [742.0, 12364.0], [740.0, 12783.0], [766.0, 8598.333333333334], [762.0, 13164.0], [758.0, 12335.0], [756.0, 12421.0], [754.0, 13026.0], [752.0, 13442.0], [796.0, 5101.666666666666], [774.0, 5034.666666666666], [772.0, 12617.0], [770.0, 12182.0], [768.0, 12782.0], [798.0, 12093.0], [794.0, 12387.0], [792.0, 13427.0], [790.0, 12813.0], [786.0, 12117.0], [784.0, 12722.0], [782.0, 12566.0], [780.0, 13327.0], [778.0, 12804.0], [776.0, 12461.0], [828.0, 11953.0], [800.0, 6587.0], [802.0, 12755.0], [814.0, 12028.5], [812.0, 12038.0], [810.0, 12632.0], [808.0, 12310.0], [804.0, 4848.666666666666], [806.0, 7195.0], [818.0, 1263.0], [820.0, 6596.5], [822.0, 12274.0], [830.0, 11964.5], [816.0, 12058.0], [826.0, 11951.0], [824.0, 11949.0], [856.0, 12327.0], [832.0, 7547.0], [834.0, 12839.0], [836.0, 6605.0], [838.0, 5160.0], [842.0, 7054.5], [840.0, 12008.0], [844.0, 12622.0], [858.0, 11803.0], [854.0, 11850.0], [852.0, 12471.0], [850.0, 11808.0], [848.0, 11819.0], [894.0, 11825.0], [870.0, 4706.666666666666], [872.0, 4850.0], [874.0, 11682.0], [878.0, 12679.0], [864.0, 13159.0], [868.0, 12165.0], [866.0, 12085.5], [876.0, 11677.0], [880.0, 8318.666666666666], [882.0, 12941.0], [892.0, 11677.0], [890.0, 11610.0], [888.0, 11769.0], [886.0, 11651.0], [884.0, 13057.0], [924.0, 12136.5], [902.0, 4386.75], [900.0, 4719.666666666666], [908.0, 6500.5], [906.0, 11752.0], [904.0, 12351.0], [910.0, 11523.0], [898.0, 11552.0], [896.0, 12249.0], [918.0, 6977.0], [916.0, 6499.0], [926.0, 11440.0], [914.0, 11861.0], [912.0, 11801.0], [922.0, 11456.0], [920.0, 11799.0], [956.0, 11450.0], [932.0, 8360.333333333334], [930.0, 11376.0], [942.0, 11387.0], [940.0, 11673.0], [936.0, 11433.0], [934.0, 6688.5], [948.0, 4835.0], [950.0, 1542.4], [958.0, 6509.0], [954.0, 12031.0], [952.0, 11315.0], [946.0, 12051.0], [944.0, 11584.5], [990.0, 11558.0], [966.0, 6616.0], [964.0, 6622.5], [962.0, 12361.5], [960.0, 12310.0], [974.0, 11746.0], [972.0, 11205.0], [970.0, 11468.0], [968.0, 11794.0], [980.0, 4093.25], [988.0, 11467.0], [986.0, 11149.0], [984.0, 11159.0], [982.0, 11444.0], [978.0, 11289.0], [976.0, 11280.0], [1020.0, 11769.0], [1018.0, 6451.0], [1022.0, 6552.0], [1016.0, 11763.0], [1014.0, 12029.0], [1012.0, 11246.0], [1010.0, 11255.0], [1006.0, 11073.0], [994.0, 11410.0], [992.0, 11269.0], [998.0, 11336.0], [996.0, 11083.0], [1004.0, 11284.0], [1002.0, 11165.0], [1000.0, 11135.0], [1080.0, 10682.0], [1032.0, 6614.25], [1028.0, 11137.0], [1052.0, 10860.0], [1044.0, 10857.0], [1040.0, 11065.0], [1036.0, 1862.0], [1056.0, 6547.0], [1060.0, 6388.0], [1084.0, 11250.0], [1076.0, 11601.0], [1072.0, 10750.0], [1068.0, 10914.0], [1064.0, 10944.0], [1100.0, 2277.0], [1088.0, 1733.0], [1092.0, 6542.0], [1096.0, 6389.5], [1116.0, 6327.0], [1112.0, 10738.0], [1108.0, 10627.0], [1104.0, 10601.0], [1132.0, 10702.0], [1128.0, 12228.0], [1124.0, 11194.0], [1120.0, 10938.0], [1148.0, 10764.0], [1140.0, 10453.0], [1136.0, 10486.0], [1156.0, 10355.0], [1160.0, 8421.0], [1164.0, 10304.0], [1200.0, 10798.0], [1168.0, 6460.0], [1172.0, 11396.0], [1176.0, 10279.0], [1152.0, 10641.0], [1180.0, 10237.0], [1188.0, 2146.0], [1184.0, 10227.0], [1192.0, 11511.0], [1212.0, 10186.5], [1208.0, 10506.0], [1204.0, 10823.0], [1196.0, 6541.0], [1268.0, 10000.0], [1276.0, 7734.666666666667], [1224.0, 5357.0], [1220.0, 3818.8], [1216.0, 10823.0], [1260.0, 6132.0], [1248.0, 10740.0], [1252.0, 10183.5], [1256.0, 10094.0], [1264.0, 7494.333333333333], [1228.0, 10006.0], [1272.0, 9875.0], [1244.0, 6324.0], [1240.0, 10238.0], [1236.0, 10766.0], [1232.0, 10026.0], [1284.0, 9848.0], [1292.0, 4995.333333333334], [1280.0, 6509.5], [1288.0, 9772.0], [1308.0, 4190.5], [1304.0, 9835.0], [1300.0, 10724.0], [1296.0, 9730.0], [1340.0, 4345.25], [1336.0, 9603.0], [1332.0, 9617.0], [1328.0, 9601.0], [1324.0, 6258.5], [1320.0, 10244.0], [1316.0, 9697.0], [1312.0, 9683.0], [1356.0, 7794.333333333333], [1352.0, 7490.0], [1392.0, 10154.0], [1396.0, 10091.0], [1348.0, 6142.5], [1344.0, 9587.0], [1372.0, 9598.0], [1388.0, 6139.5], [1376.0, 10808.0], [1380.0, 9865.5], [1384.0, 9666.0], [1404.0, 9333.0], [1400.0, 9265.0], [1360.0, 5997.0], [1364.0, 9461.0], [1368.0, 10145.0], [1464.0, 4888.666666666666], [1420.0, 2479.0], [1460.0, 9682.0], [1456.0, 9205.0], [1448.0, 6250.5], [1444.0, 5925.0], [1440.0, 10078.0], [1468.0, 8984.0], [1424.0, 6626.0], [1428.0, 6195.5], [1432.0, 5929.0], [1416.0, 9236.0], [1412.0, 9523.0], [1408.0, 9385.0], [1436.0, 9918.0], [1480.0, 6345.25], [1524.0, 5845.5], [1492.0, 4809.0], [1488.0, 9047.0], [1476.0, 8909.0], [1472.0, 8988.0], [1496.0, 8872.0], [1484.0, 2728.0], [1528.0, 6384.5], [1532.0, 8673.0], [1512.0, 8730.0], [1508.0, 8770.0], [1504.0, 10017.0], [1516.0, 9775.0], [1520.0, 9243.0], [1592.0, 9225.0], [1560.0, 4994.666666666667], [1556.0, 4906.833333333334], [1552.0, 8552.0], [1568.0, 9528.0], [1572.0, 9110.0], [1596.0, 8402.0], [1576.0, 4348.5], [1580.0, 5666.0], [1584.0, 9618.0], [1548.0, 8647.0], [1544.0, 8795.0], [1540.0, 8621.0], [1536.0, 9103.0], [1564.0, 8564.0], [1588.0, 8973.0], [1604.0, 4383.75], [1608.0, 5830.0], [1612.0, 9224.0], [1648.0, 8914.0], [1652.0, 8491.0], [1656.0, 9633.0], [1600.0, 8628.0], [1628.0, 8509.0], [1616.0, 6048.0], [1620.0, 6101.0], [1640.0, 8267.0], [1636.0, 4793.666666666667], [1632.0, 8476.0], [1660.0, 4959.333333333333], [1672.0, 10216.0], [1668.0, 6045.0], [1716.0, 5843.5], [1712.0, 8292.0], [1676.0, 8763.0], [1720.0, 8116.0], [1680.0, 4906.333333333333], [1684.0, 8187.0], [1688.0, 5760.5], [1664.0, 8326.0], [1692.0, 8034.0], [1704.0, 3420.0], [1700.0, 8840.0], [1696.0, 8122.0], [1708.0, 8358.0], [1724.0, 8578.0], [1728.0, 8119.0], [1756.0, 9177.0], [1780.0, 6317.333333333333], [1740.0, 8165.0], [1736.0, 8724.0], [1752.0, 4941.0], [1748.0, 7954.0], [1744.0, 8821.0], [1784.0, 9561.0], [1788.0, 4163.0], [1760.0, 8631.0], [1764.0, 7722.5], [1768.0, 7735.0], [1772.0, 7769.0], [1844.0, 7435.0], [1840.0, 7365.0], [1804.0, 8222.0], [1800.0, 7571.0], [1796.0, 7958.0], [1848.0, 6158.666666666667], [1828.0, 7497.0], [1824.0, 7534.0], [1852.0, 8144.0], [1812.0, 6273.0], [1808.0, 7692.0], [1816.0, 7651.0], [1820.0, 7748.5], [1792.0, 7680.0], [1836.0, 4831.666666666667], [1832.0, 7780.0], [1864.0, 4887.0], [1856.0, 6176.0], [1884.0, 7695.0], [1880.0, 7150.0], [1876.0, 7179.0], [1860.0, 6580.333333333333], [1868.0, 7232.0], [1888.0, 7266.0], [1916.0, 9404.0], [1912.0, 6078.0], [1908.0, 5437.0], [1904.0, 6998.0], [1892.0, 7607.5], [1896.0, 7160.0], [1900.0, 7179.0], [1932.0, 6917.0], [1920.0, 5395.5], [1924.0, 7635.0], [1928.0, 7030.0], [1968.0, 6849.0], [1952.0, 4977.333333333333], [1980.0, 5578.5], [1976.0, 9480.0], [1956.0, 7643.5], [1960.0, 8223.0], [1964.0, 7404.0], [1940.0, 4068.0], [1936.0, 6938.0], [1944.0, 7331.0], [1948.0, 7819.0], [1984.0, 5430.5], [1988.0, 6092.333333333333], [2012.0, 6586.0], [2008.0, 6665.0], [2004.0, 6671.0], [2000.0, 7046.0], [1992.0, 6874.0], [2020.0, 5862.5], [2024.0, 4820.0], [2028.0, 6581.0], [2016.0, 6997.0], [2044.0, 6543.0], [2040.0, 6533.0], [2036.0, 6945.0], [2064.0, 8043.0], [2104.0, 7516.0], [2048.0, 6795.0], [2056.0, 6487.0], [2096.0, 5395.0], [2112.0, 4629.8], [2128.0, 7263.0], [2168.0, 5201.5], [2152.0, 6749.0], [2144.0, 6227.0], [2072.0, 8446.0], [2160.0, 6091.0], [2136.0, 6123.0], [2080.0, 4125.0], [2088.0, 5983.0], [2200.0, 6133.0], [2272.0, 5107.5], [2192.0, 5888.0], [2184.0, 6030.0], [2176.0, 6660.0], [2288.0, 5487.0], [2280.0, 5822.0], [2296.0, 5399.0], [2232.0, 4570.8], [2224.0, 5714.5], [2216.0, 5838.0], [2208.0, 5832.0], [2248.0, 5493.5], [2240.0, 6522.0], [2256.0, 6123.0], [2264.0, 6307.0], [2312.0, 5297.0], [2304.0, 6174.0], [2352.0, 5727.0], [2360.0, 5098.0], [2344.0, 5524.0], [2328.0, 5981.0], [2320.0, 5825.5], [2400.0, 5576.0], [2408.0, 5406.0], [2416.0, 5199.0], [2368.0, 5953.5], [2384.0, 5013.0], [2376.0, 5616.0], [2392.0, 5040.0], [2440.0, 5528.0], [2432.0, 4996.666666666667], [2448.0, 5928.0], [2456.0, 4954.0], [2464.0, 4842.666666666667], [2472.0, 5316.0], [2480.0, 4948.0], [2488.0, 5577.0], [2073.0, 6419.0], [2057.0, 5209.0], [2049.0, 6556.0], [2065.0, 6828.0], [2145.0, 6042.0], [2153.0, 6180.0], [2161.0, 5504.5], [2137.0, 6413.0], [2129.0, 6494.0], [2121.0, 6603.0], [2113.0, 6732.0], [2081.0, 6320.0], [2089.0, 6516.0], [2097.0, 6455.0], [2193.0, 5010.5], [2185.0, 5322.0], [2233.0, 5218.0], [2177.0, 5957.0], [2249.0, 5034.0], [2241.0, 6140.0], [2297.0, 6338.0], [2289.0, 5527.0], [2281.0, 5654.0], [2273.0, 5719.0], [2201.0, 7341.0], [2257.0, 5587.0], [2265.0, 6588.0], [2209.0, 5244.5], [2225.0, 6114.0], [2401.0, 5037.0], [2305.0, 5355.0], [2313.0, 5416.0], [2329.0, 5302.0], [2369.0, 5041.0], [2425.0, 4914.5], [2417.0, 4675.333333333333], [2409.0, 5114.0], [2377.0, 5115.0], [2385.0, 5913.0], [2393.0, 4792.5], [2337.0, 5286.0], [2345.0, 5335.0], [2353.0, 4791.0], [2361.0, 5705.0], [2433.0, 5306.0], [2441.0, 5144.0], [2489.0, 5039.5], [2449.0, 4985.0], [2457.0, 4729.0], [2473.0, 4716.2], [2465.0, 5673.0], [2481.0, 4890.0], [1085.0, 1754.6666666666667], [1053.0, 6507.0], [1029.0, 10922.0], [1025.0, 11054.0], [1037.0, 11232.5], [1033.0, 10925.0], [1049.0, 10888.0], [1045.0, 10854.0], [1041.0, 11081.0], [1073.0, 6783.5], [1081.0, 6539.5], [1061.0, 3329.333333333333], [1077.0, 11470.0], [1069.0, 10750.0], [1065.0, 10734.0], [1057.0, 10823.0], [1149.0, 10843.0], [1133.0, 10483.0], [1141.0, 6179.0], [1145.0, 10546.5], [1137.0, 11126.0], [1101.0, 10811.0], [1097.0, 10602.0], [1093.0, 10739.0], [1089.0, 10951.0], [1129.0, 10565.0], [1125.0, 11794.0], [1121.0, 10958.0], [1117.0, 10543.0], [1113.0, 10504.0], [1109.0, 10549.0], [1105.0, 10559.0], [1153.0, 10842.0], [1165.0, 10306.0], [1161.0, 10679.0], [1201.0, 10654.0], [1173.0, 10270.0], [1169.0, 10559.0], [1177.0, 10472.0], [1157.0, 10965.0], [1181.0, 10231.0], [1189.0, 6660.5], [1185.0, 10226.0], [1213.0, 10108.0], [1209.0, 10046.0], [1205.0, 10132.0], [1193.0, 4954.666666666666], [1197.0, 10268.0], [1269.0, 10434.0], [1221.0, 5003.0], [1229.0, 6544.5], [1265.0, 9922.0], [1261.0, 6278.0], [1257.0, 10768.0], [1253.0, 11251.0], [1249.0, 9965.0], [1277.0, 4777.0], [1273.0, 10301.0], [1241.0, 11359.0], [1237.0, 9994.0], [1233.0, 10843.0], [1245.0, 10590.0], [1289.0, 10199.0], [1333.0, 9833.0], [1341.0, 5924.5], [1281.0, 6189.0], [1293.0, 6414.0], [1285.0, 10381.0], [1329.0, 10071.0], [1309.0, 9739.0], [1305.0, 10345.0], [1301.0, 10118.0], [1313.0, 5126.0], [1321.0, 10082.0], [1317.0, 9739.0], [1337.0, 9793.0], [1325.0, 4783.333333333334], [1353.0, 9503.0], [1393.0, 6461.5], [1345.0, 2438.0], [1373.0, 9417.0], [1349.0, 6118.0], [1357.0, 9930.0], [1377.0, 9382.0], [1381.0, 9984.0], [1401.0, 6084.5], [1405.0, 6354.0], [1397.0, 4961.666666666666], [1385.0, 6001.0], [1389.0, 6043.0], [1361.0, 6655.0], [1365.0, 9445.0], [1369.0, 9713.0], [1421.0, 5641.8], [1457.0, 5947.5], [1433.0, 9180.0], [1429.0, 9802.0], [1425.0, 9511.0], [1417.0, 11087.0], [1441.0, 9586.0], [1469.0, 8988.0], [1465.0, 9093.0], [1461.0, 6351.0], [1445.0, 5302.0], [1449.0, 9249.0], [1453.0, 9245.5], [1437.0, 5837.0], [1409.0, 9740.0], [1413.0, 9215.0], [1473.0, 6087.0], [1485.0, 7113.333333333333], [1501.0, 9333.5], [1497.0, 9630.0], [1493.0, 9190.0], [1489.0, 9406.0], [1477.0, 5886.0], [1481.0, 3261.0], [1521.0, 9792.0], [1509.0, 8871.0], [1505.0, 8809.0], [1533.0, 9478.0], [1525.0, 5678.5], [1529.0, 9017.0], [1513.0, 5742.0], [1517.0, 8878.0], [1593.0, 6233.0], [1561.0, 5762.0], [1553.0, 4770.666666666667], [1557.0, 8616.0], [1573.0, 8703.0], [1569.0, 8825.0], [1577.0, 9693.0], [1581.0, 8958.0], [1585.0, 5876.0], [1549.0, 8713.0], [1545.0, 8614.0], [1541.0, 8937.0], [1565.0, 8902.0], [1589.0, 9568.0], [1613.0, 8814.0], [1601.0, 8376.0], [1629.0, 8269.0], [1625.0, 8777.0], [1621.0, 8227.0], [1617.0, 8511.0], [1649.0, 8479.0], [1609.0, 8322.0], [1641.0, 8385.0], [1645.0, 8575.5], [1637.0, 4852.75], [1661.0, 4038.0], [1633.0, 11085.0], [1657.0, 9203.0], [1653.0, 8263.0], [1693.0, 5644.0], [1713.0, 3290.0], [1689.0, 4828.0], [1717.0, 8001.0], [1721.0, 7901.0], [1681.0, 8458.0], [1685.0, 8209.0], [1665.0, 8184.0], [1669.0, 8448.0], [1673.0, 9090.0], [1701.0, 8714.0], [1697.0, 8423.0], [1705.0, 8051.5], [1709.0, 8421.0], [1725.0, 8165.0], [1729.0, 7923.0], [1741.0, 7837.0], [1753.0, 4394.25], [1781.0, 4287.8], [1777.0, 7792.5], [1733.0, 8692.5], [1737.0, 7825.0], [1757.0, 7790.0], [1745.0, 4749.0], [1749.0, 7762.0], [1769.0, 9548.0], [1765.0, 8008.0], [1761.0, 7752.0], [1773.0, 7696.0], [1789.0, 4158.0], [1785.0, 5867.5], [1793.0, 7906.0], [1845.0, 7301.0], [1825.0, 7426.0], [1853.0, 7501.0], [1813.0, 5124.333333333333], [1809.0, 7520.0], [1817.0, 7763.0], [1797.0, 7664.0], [1801.0, 8524.0], [1805.0, 7836.0], [1821.0, 7445.0], [1841.0, 7385.0], [1849.0, 7324.0], [1829.0, 5866.5], [1833.0, 7708.0], [1837.0, 5387.0], [1865.0, 7869.0], [1869.0, 4831.666666666667], [1861.0, 7360.0], [1857.0, 8082.0], [1889.0, 5222.666666666667], [1901.0, 7677.0], [1897.0, 7651.0], [1893.0, 7885.0], [1909.0, 4976.666666666667], [1881.0, 7479.0], [1877.0, 7260.0], [1873.0, 8203.5], [1885.0, 7667.0], [1917.0, 6991.0], [1913.0, 8315.0], [1977.0, 5920.5], [1945.0, 7314.0], [1957.0, 7244.0], [1953.0, 6985.0], [1981.0, 6784.0], [1973.0, 7052.0], [1969.0, 7317.0], [1933.0, 7532.0], [1929.0, 7697.0], [1925.0, 7596.0], [1961.0, 5953.0], [1965.0, 7418.0], [1937.0, 5840.0], [1941.0, 6194.333333333333], [1921.0, 7022.0], [1949.0, 6883.0], [2033.0, 6840.0], [2009.0, 5795.5], [1989.0, 4711.0], [1997.0, 7278.5], [2037.0, 7253.0], [2041.0, 7693.0], [2045.0, 6542.0], [2017.0, 7831.0], [2021.0, 7476.0], [2005.0, 7459.0], [2001.0, 8313.0], [2013.0, 5591.0], [2025.0, 5282.666666666667], [2029.0, 6576.0], [2050.0, 6840.0], [2058.0, 5574.5], [2098.0, 6409.0], [2090.0, 6532.0], [2106.0, 5209.0], [2066.0, 6463.0], [2074.0, 7858.0], [2146.0, 5339.0], [2154.0, 6441.0], [2162.0, 6723.0], [2138.0, 6433.0], [2130.0, 6742.0], [2122.0, 6388.0], [2114.0, 6898.0], [2170.0, 6087.0], [2082.0, 5501.333333333333], [2178.0, 5958.0], [2298.0, 5656.0], [2202.0, 5076.5], [2274.0, 5576.0], [2290.0, 5789.0], [2218.0, 5810.0], [2210.0, 6360.0], [2226.0, 6993.0], [2186.0, 6487.0], [2234.0, 6284.0], [2250.0, 5380.5], [2258.0, 5825.0], [2266.0, 5303.5], [2314.0, 5379.0], [2306.0, 4848.0], [2362.0, 5479.5], [2346.0, 5959.0], [2330.0, 4817.0], [2322.0, 5255.0], [2402.0, 5987.0], [2410.0, 5320.0], [2426.0, 5632.0], [2418.0, 5903.0], [2370.0, 5072.0], [2386.0, 4907.666666666667], [2378.0, 5853.0], [2394.0, 6557.0], [2338.0, 5031.0], [2434.0, 4688.0], [2490.0, 5767.0], [2450.0, 4797.0], [2442.0, 4913.0], [2458.0, 4746.0], [2466.0, 5275.0], [2474.0, 4724.5], [2482.0, 5217.0], [2075.0, 7156.0], [2163.0, 5170.333333333333], [2059.0, 4342.666666666666], [2051.0, 5293.5], [2107.0, 5070.333333333333], [2067.0, 5014.666666666667], [2139.0, 5023.0], [2123.0, 6349.0], [2131.0, 6237.0], [2171.0, 5088.333333333333], [2155.0, 4889.0], [2147.0, 6539.0], [2099.0, 6272.0], [2203.0, 4766.5], [2195.0, 5712.666666666667], [2179.0, 6068.0], [2187.0, 6383.0], [2235.0, 5264.666666666667], [2227.0, 5706.0], [2299.0, 4573.0], [2291.0, 5774.0], [2243.0, 6796.0], [2275.0, 5126.0], [2283.0, 5227.5], [2251.0, 5238.5], [2259.0, 4886.5], [2267.0, 5581.0], [2211.0, 4968.5], [2219.0, 5116.0], [2427.0, 5106.0], [2419.0, 6185.0], [2331.0, 4904.5], [2307.0, 5370.0], [2315.0, 5282.0], [2323.0, 5588.0], [2371.0, 4804.5], [2403.0, 4844.0], [2411.0, 5020.0], [2379.0, 6342.0], [2387.0, 5005.0], [2395.0, 5104.0], [2339.0, 5440.0], [2347.0, 5284.0], [2355.0, 5557.0], [2363.0, 5312.0], [2443.0, 6037.0], [2435.0, 4908.0], [2451.0, 4659.333333333333], [2459.0, 5014.0], [2475.0, 4948.666666666667], [2467.0, 4825.0], [2483.0, 4814.0], [543.0, 13461.0], [513.0, 7143.5], [525.0, 5002.0], [523.0, 13244.0], [521.0, 13545.0], [529.0, 2670.5], [531.0, 13178.0], [527.0, 6987.0], [541.0, 15754.0], [539.0, 13148.0], [537.0, 13629.0], [519.0, 13316.0], [517.0, 14397.0], [515.0, 13305.0], [535.0, 13472.0], [533.0, 13230.0], [573.0, 7140.5], [549.0, 7208.5], [569.0, 7366.0], [551.0, 13126.0], [571.0, 13090.0], [545.0, 4995.0], [559.0, 7136.0], [557.0, 13525.0], [555.0, 13199.0], [553.0, 13300.0], [565.0, 6921.0], [567.0, 7394.0], [575.0, 13040.0], [561.0, 13592.0], [605.0, 13160.0], [581.0, 7383.0], [583.0, 13016.0], [591.0, 13652.0], [579.0, 13039.0], [577.0, 13226.0], [587.0, 8997.666666666666], [585.0, 13953.0], [589.0, 6807.0], [597.0, 6983.0], [599.0, 4887.0], [607.0, 12971.0], [595.0, 13883.0], [593.0, 13546.0], [603.0, 13276.0], [601.0, 13934.0], [635.0, 13097.0], [617.0, 6866.5], [619.0, 12938.0], [621.0, 6837.5], [633.0, 6996.5], [623.0, 12848.0], [609.0, 13615.0], [613.0, 12891.0], [611.0, 13938.5], [615.0, 12888.0], [637.0, 12804.0], [631.0, 12792.0], [629.0, 13004.0], [627.0, 13941.5], [625.0, 13027.0], [667.0, 7065.5], [653.0, 6922.5], [651.0, 6812.0], [649.0, 13344.0], [655.0, 6836.5], [641.0, 13921.0], [645.0, 13628.0], [643.0, 12733.0], [663.0, 7010.0], [671.0, 13086.0], [669.0, 12918.0], [665.0, 13175.0], [647.0, 13798.0], [661.0, 12718.0], [659.0, 12959.0], [657.0, 12688.0], [697.0, 4969.333333333334], [673.0, 6711.0], [675.0, 6710.5], [679.0, 13088.0], [677.0, 12653.0], [681.0, 8906.0], [683.0, 12661.0], [685.0, 6729.0], [687.0, 12667.0], [689.0, 4818.666666666666], [695.0, 12625.0], [693.0, 12587.0], [703.0, 12529.0], [701.0, 13616.0], [699.0, 12564.0], [731.0, 7030.0], [705.0, 7195.0], [711.0, 7097.0], [709.0, 12610.0], [713.0, 7265.5], [715.0, 6881.5], [719.0, 12942.0], [717.0, 12737.0], [735.0, 4084.25], [733.0, 12376.0], [727.0, 13415.0], [725.0, 13218.0], [723.0, 12431.0], [721.0, 12613.0], [763.0, 6637.0], [737.0, 7213.0], [741.0, 12732.0], [739.0, 13713.0], [751.0, 13838.0], [749.0, 12482.0], [747.0, 12882.0], [745.0, 12736.0], [743.0, 5296.666666666667], [761.0, 3924.5], [759.0, 6748.0], [767.0, 7339.5], [757.0, 12338.0], [755.0, 12862.0], [753.0, 12337.0], [797.0, 6748.0], [799.0, 6833.0], [795.0, 12068.0], [793.0, 12201.0], [791.0, 13515.0], [789.0, 12781.0], [787.0, 12290.0], [785.0, 12159.0], [783.0, 13751.0], [769.0, 13303.0], [775.0, 12416.0], [773.0, 12614.0], [781.0, 12118.0], [779.0, 13184.0], [777.0, 12218.0], [827.0, 7146.5], [805.0, 6764.5], [801.0, 4894.333333333334], [803.0, 14197.0], [815.0, 12351.0], [811.0, 12032.0], [809.0, 12593.0], [821.0, 6820.0], [823.0, 4837.666666666666], [831.0, 13059.0], [825.0, 12286.0], [807.0, 12310.0], [819.0, 12395.0], [817.0, 12041.0], [861.0, 12087.5], [837.0, 6525.0], [835.0, 11882.0], [833.0, 14391.0], [839.0, 11988.0], [847.0, 12024.0], [845.0, 12317.0], [843.0, 12271.0], [841.0, 12327.0], [863.0, 12302.5], [859.0, 11731.0], [857.0, 12002.0], [855.0, 11801.0], [853.0, 11820.0], [851.0, 11817.0], [849.0, 11792.0], [891.0, 11623.0], [867.0, 4175.0], [869.0, 12287.0], [865.0, 1229.0], [873.0, 6649.0], [877.0, 11696.0], [875.0, 13126.0], [881.0, 6785.0], [895.0, 11802.0], [893.0, 11888.0], [889.0, 12068.0], [871.0, 12473.0], [887.0, 11872.0], [885.0, 11624.0], [901.0, 1708.0], [899.0, 4022.25], [897.0, 12493.0], [903.0, 4083.0], [907.0, 6686.0], [905.0, 11963.0], [909.0, 11695.0], [911.0, 11521.0], [917.0, 4812.0], [915.0, 11523.0], [927.0, 11446.0], [925.0, 11447.0], [921.0, 11661.0], [919.0, 11521.0], [957.0, 3751.6], [949.0, 3506.4], [933.0, 5124.666666666666], [929.0, 11439.5], [935.0, 11375.0], [941.0, 12676.0], [939.0, 11596.0], [937.0, 11389.0], [951.0, 6497.75], [959.0, 11340.0], [955.0, 11999.0], [953.0, 11647.0], [947.0, 11322.0], [945.0, 11746.0], [989.0, 11786.0], [977.0, 6380.0], [979.0, 3083.857142857143], [991.0, 11252.0], [985.0, 11151.0], [967.0, 11269.0], [965.0, 12462.0], [963.0, 11580.0], [983.0, 11138.0], [975.0, 11216.0], [971.0, 11229.0], [969.0, 11468.0], [1021.0, 11566.0], [1019.0, 6580.0], [1023.0, 11826.0], [1017.0, 11981.0], [1013.0, 11959.0], [1011.0, 11201.0], [1009.0, 11049.0], [1007.0, 12020.0], [995.0, 12486.0], [993.0, 11966.0], [999.0, 11148.0], [997.0, 11079.0], [1005.0, 11082.0], [1003.0, 11226.0], [1001.0, 11636.0], [1082.0, 12519.0], [1050.0, 5090.333333333334], [1046.0, 11489.0], [1054.0, 13182.0], [1030.0, 11236.0], [1026.0, 11283.0], [1038.0, 11774.0], [1034.0, 11055.0], [1086.0, 5128.5], [1078.0, 10690.0], [1074.0, 10750.0], [1070.0, 10751.0], [1066.0, 10762.0], [1062.0, 11146.0], [1058.0, 12152.0], [1142.0, 10427.0], [1130.0, 6429.0], [1134.0, 10977.0], [1150.0, 10570.0], [1138.0, 10521.0], [1098.0, 11263.0], [1094.0, 10889.0], [1090.0, 10791.0], [1126.0, 10803.0], [1122.0, 10691.0], [1118.0, 11137.0], [1114.0, 10550.0], [1110.0, 11250.0], [1162.0, 10368.0], [1202.0, 6293.0], [1158.0, 6155.5], [1166.0, 10754.0], [1170.0, 6127.0], [1174.0, 2127.0], [1178.0, 10272.0], [1182.0, 10229.0], [1186.0, 10195.0], [1190.0, 10574.0], [1214.0, 6060.5], [1210.0, 11062.0], [1206.0, 10132.0], [1194.0, 4874.0], [1198.0, 10358.0], [1230.0, 10835.0], [1218.0, 10120.5], [1222.0, 10093.0], [1262.0, 4911.333333333334], [1278.0, 2266.5], [1250.0, 10030.0], [1254.0, 10604.0], [1258.0, 10588.0], [1226.0, 10137.0], [1266.0, 10371.0], [1270.0, 10043.0], [1274.0, 10067.0], [1246.0, 5037.333333333334], [1242.0, 10936.0], [1238.0, 10197.0], [1234.0, 10111.0], [1286.0, 11115.0], [1338.0, 9685.0], [1294.0, 6181.5], [1290.0, 6176.0], [1282.0, 9883.0], [1306.0, 9653.0], [1302.0, 9741.0], [1298.0, 10426.5], [1310.0, 10350.0], [1342.0, 2282.0], [1334.0, 9572.0], [1330.0, 10094.0], [1322.0, 10170.0], [1318.0, 11822.0], [1314.0, 10449.0], [1326.0, 10973.0], [1358.0, 9970.0], [1398.0, 5939.0], [1354.0, 9749.0], [1394.0, 10059.0], [1346.0, 9680.5], [1350.0, 9721.0], [1374.0, 9803.0], [1406.0, 10262.0], [1378.0, 9380.0], [1382.0, 9879.0], [1386.0, 9978.0], [1402.0, 9293.0], [1390.0, 5899.5], [1362.0, 9674.0], [1366.0, 9763.0], [1370.0, 5239.0], [1466.0, 8976.0], [1462.0, 6400.0], [1458.0, 9156.0], [1422.0, 9261.0], [1450.0, 4840.666666666666], [1454.0, 9382.0], [1442.0, 11600.0], [1446.0, 9232.0], [1426.0, 9350.0], [1430.0, 10049.0], [1434.0, 5849.0], [1438.0, 5967.0], [1418.0, 9627.0], [1410.0, 10425.0], [1474.0, 9810.0], [1490.0, 9240.0], [1494.0, 6140.5], [1478.0, 5798.5], [1502.0, 9039.0], [1498.0, 8882.0], [1482.0, 7265.666666666667], [1530.0, 5852.0], [1526.0, 5108.0], [1522.0, 5837.0], [1514.0, 4400.25], [1510.0, 9093.0], [1506.0, 9891.0], [1518.0, 9322.0], [1534.0, 9363.0], [1486.0, 5765.5], [1598.0, 8472.0], [1590.0, 5798.5], [1554.0, 8573.0], [1558.0, 8537.0], [1574.0, 4982.0], [1570.0, 9087.0], [1594.0, 8676.0], [1578.0, 8707.0], [1582.0, 8490.0], [1586.0, 5722.0], [1550.0, 8813.0], [1546.0, 8691.0], [1542.0, 8596.0], [1538.0, 9014.5], [1566.0, 9492.0], [1606.0, 5009.333333333333], [1650.0, 8192.0], [1658.0, 4734.0], [1614.0, 8963.0], [1654.0, 8304.0], [1630.0, 9300.0], [1626.0, 9644.0], [1622.0, 9654.0], [1618.0, 9012.0], [1638.0, 4095.4], [1646.0, 8429.0], [1642.0, 8216.0], [1662.0, 5627.5], [1634.0, 8439.0], [1674.0, 8661.0], [1722.0, 8138.0], [1714.0, 8842.5], [1678.0, 8110.0], [1670.0, 8931.0], [1718.0, 9585.0], [1682.0, 8533.0], [1686.0, 8170.0], [1690.0, 4370.8], [1694.0, 8926.0], [1666.0, 9102.0], [1702.0, 9045.0], [1698.0, 8595.0], [1706.0, 8118.0], [1710.0, 9321.0], [1726.0, 8814.0], [1738.0, 8672.0], [1782.0, 4418.75], [1754.0, 4406.25], [1758.0, 8203.0], [1730.0, 5652.0], [1778.0, 8065.0], [1742.0, 7825.0], [1734.0, 8238.0], [1750.0, 7977.0], [1746.0, 8280.0], [1774.0, 6060.5], [1786.0, 3271.0], [1790.0, 4974.333333333333], [1762.0, 7712.0], [1766.0, 7691.0], [1770.0, 7825.0], [1806.0, 7524.0], [1850.0, 5835.0], [1794.0, 6250.333333333333], [1802.0, 8563.0], [1798.0, 8240.0], [1842.0, 5599.0], [1846.0, 7587.0], [1854.0, 5074.666666666667], [1826.0, 8052.0], [1810.0, 8589.0], [1814.0, 7529.0], [1818.0, 7525.0], [1830.0, 5570.0], [1834.0, 7399.0], [1838.0, 5041.0], [1858.0, 5405.0], [1886.0, 7515.0], [1882.0, 7230.0], [1878.0, 7335.0], [1874.0, 7908.0], [1862.0, 7253.0], [1866.0, 5471.5], [1870.0, 5335.0], [1918.0, 5261.5], [1910.0, 4310.0], [1906.0, 7417.0], [1890.0, 5269.666666666667], [1894.0, 5747.5], [1898.0, 7191.0], [1902.0, 7817.0], [1934.0, 7388.0], [1970.0, 5232.0], [1926.0, 4496.5], [1922.0, 7235.0], [1930.0, 5328.0], [1982.0, 6803.0], [1974.0, 5000.0], [1978.0, 6788.0], [1958.0, 5103.666666666667], [1954.0, 7982.0], [1962.0, 7092.0], [1966.0, 7414.0], [1938.0, 6982.0], [1946.0, 7333.0], [1950.0, 5293.5], [1986.0, 6785.5], [2034.0, 5397.666666666667], [2014.0, 7389.0], [2010.0, 7395.0], [2006.0, 7242.0], [2002.0, 7789.0], [1990.0, 5151.5], [1998.0, 7060.0], [1994.0, 6810.0], [2022.0, 6607.0], [2026.0, 6521.0], [2030.0, 6585.0], [2046.0, 6717.0], [2018.0, 6798.0], [2042.0, 7439.0], [2038.0, 6895.0], [2156.0, 5347.666666666667], [2068.0, 3752.0], [2100.0, 4219.5], [2052.0, 5939.5], [2108.0, 5061.5], [2124.0, 6609.0], [2116.0, 6439.0], [2132.0, 6106.0], [2172.0, 5554.0], [2076.0, 6465.0], [2164.0, 6002.0], [2140.0, 4656.666666666667], [2084.0, 5799.333333333333], [2092.0, 5496.333333333333], [2204.0, 5531.333333333333], [2292.0, 5156.5], [2196.0, 6038.0], [2188.0, 6087.0], [2180.0, 6204.0], [2284.0, 5474.0], [2276.0, 5847.0], [2300.0, 5147.0], [2228.0, 7443.0], [2220.0, 6938.0], [2212.0, 5763.0], [2236.0, 4966.5], [2244.0, 5693.0], [2252.0, 5782.0], [2260.0, 5786.0], [2316.0, 6211.0], [2332.0, 4996.666666666667], [2308.0, 4709.666666666667], [2364.0, 4882.714285714286], [2356.0, 4877.5], [2348.0, 5830.5], [2324.0, 6057.0], [2404.0, 4965.0], [2412.0, 4747.5], [2428.0, 5226.0], [2372.0, 5125.5], [2380.0, 5018.0], [2388.0, 4902.333333333333], [2396.0, 5145.0], [2340.0, 5796.0], [2444.0, 4809.0], [2436.0, 5322.0], [2452.0, 4822.0], [2460.0, 5085.0], [2476.0, 5381.5], [2069.0, 6090.0], [2157.0, 4864.75], [2109.0, 5157.333333333333], [2053.0, 7775.0], [2061.0, 6628.5], [2077.0, 6794.0], [2149.0, 6476.0], [2165.0, 6369.0], [2141.0, 5557.5], [2133.0, 7163.0], [2125.0, 7900.0], [2117.0, 6277.0], [2173.0, 6596.0], [2085.0, 5107.333333333333], [2093.0, 6274.0], [2101.0, 5280.0], [2197.0, 5600.5], [2237.0, 6272.0], [2181.0, 5980.0], [2189.0, 6018.0], [2245.0, 5665.0], [2253.0, 5848.0], [2301.0, 5853.0], [2293.0, 5570.0], [2285.0, 5935.5], [2277.0, 5490.0], [2205.0, 6527.0], [2269.0, 4926.0], [2261.0, 5700.0], [2229.0, 5414.0], [2325.0, 5095.5], [2421.0, 5599.0], [2309.0, 4998.333333333333], [2365.0, 5299.333333333333], [2317.0, 5194.5], [2429.0, 5378.0], [2333.0, 5600.0], [2405.0, 4989.0], [2413.0, 4721.5], [2373.0, 5600.5], [2381.0, 4911.5], [2389.0, 4976.5], [2397.0, 5013.0], [2341.0, 5222.0], [2349.0, 5167.0], [2357.0, 5639.0], [2445.0, 5622.0], [2437.0, 4924.0], [2461.0, 4663.5], [2453.0, 5664.0], [2469.0, 5286.0], [2485.0, 5051.0], [2477.0, 5463.0], [1039.0, 6487.0], [1083.0, 6916.0], [1031.0, 1868.0], [1027.0, 11637.0], [1035.0, 11209.0], [1055.0, 12200.0], [1051.0, 11062.0], [1047.0, 10876.0], [1043.0, 11503.5], [1087.0, 3725.8], [1059.0, 6427.5], [1071.0, 7010.5], [1079.0, 10995.0], [1075.0, 11599.0], [1063.0, 10900.0], [1147.0, 10658.0], [1123.0, 3899.4], [1135.0, 10488.0], [1139.0, 6460.5], [1151.0, 6252.0], [1143.0, 11796.0], [1131.0, 10581.0], [1127.0, 11089.0], [1119.0, 11138.0], [1095.0, 10604.0], [1091.0, 10609.0], [1103.0, 10931.0], [1099.0, 10785.0], [1115.0, 11754.0], [1111.0, 13032.0], [1107.0, 10765.0], [1159.0, 1912.0], [1203.0, 5146.666666666666], [1167.0, 4886.666666666666], [1163.0, 11367.0], [1175.0, 6194.5], [1171.0, 10320.0], [1179.0, 10226.0], [1183.0, 10757.0], [1155.0, 10664.0], [1187.0, 10313.0], [1215.0, 11097.0], [1207.0, 10822.0], [1191.0, 6342.0], [1199.0, 6068.5], [1195.0, 10223.0], [1227.0, 6199.0], [1223.0, 6110.0], [1219.0, 6400.0], [1247.0, 6465.5], [1231.0, 6307.5], [1267.0, 9987.0], [1271.0, 9973.0], [1259.0, 10704.0], [1255.0, 10758.0], [1279.0, 7433.333333333333], [1243.0, 6139.5], [1239.0, 10948.0], [1235.0, 10945.0], [1287.0, 9771.0], [1291.0, 10650.0], [1283.0, 9964.0], [1295.0, 9730.0], [1331.0, 10021.0], [1335.0, 9670.0], [1311.0, 6067.0], [1307.0, 9872.0], [1303.0, 10019.0], [1299.0, 9931.0], [1319.0, 9744.0], [1315.0, 10163.0], [1343.0, 9935.0], [1339.0, 4877.0], [1323.0, 6537.0], [1327.0, 9816.0], [1359.0, 9866.0], [1347.0, 9493.0], [1375.0, 9754.0], [1351.0, 3078.0], [1379.0, 2947.0], [1383.0, 9881.0], [1403.0, 9289.0], [1407.0, 4991.333333333334], [1399.0, 5950.0], [1395.0, 9754.0], [1387.0, 9916.0], [1391.0, 9319.0], [1363.0, 9435.0], [1367.0, 9996.0], [1371.0, 6026.5], [1419.0, 9234.0], [1435.0, 4246.5], [1427.0, 9522.0], [1415.0, 7006.0], [1423.0, 9669.0], [1459.0, 6516.5], [1471.0, 7006.0], [1443.0, 9613.0], [1467.0, 9093.0], [1463.0, 9189.0], [1451.0, 5800.5], [1447.0, 10267.0], [1455.0, 6013.5], [1439.0, 11025.0], [1411.0, 9390.0], [1483.0, 9053.0], [1475.0, 9420.0], [1503.0, 8866.0], [1499.0, 9003.0], [1495.0, 9064.0], [1491.0, 9068.0], [1487.0, 6219.0], [1523.0, 10138.0], [1511.0, 5976.0], [1535.0, 9774.0], [1507.0, 9004.0], [1531.0, 6145.5], [1527.0, 8803.0], [1515.0, 8789.0], [1519.0, 8875.0], [1587.0, 4461.75], [1559.0, 8542.0], [1575.0, 4991.666666666667], [1571.0, 9308.0], [1579.0, 8502.0], [1583.0, 8947.0], [1551.0, 9472.0], [1547.0, 8662.0], [1543.0, 8666.0], [1539.0, 8621.0], [1567.0, 8834.0], [1563.0, 9255.0], [1599.0, 8775.0], [1595.0, 9380.0], [1591.0, 8592.0], [1603.0, 9141.0], [1651.0, 8550.0], [1659.0, 5793.5], [1607.0, 6153.0], [1631.0, 8840.0], [1627.0, 8408.0], [1623.0, 8364.0], [1619.0, 8705.0], [1615.0, 9001.0], [1611.0, 8642.0], [1639.0, 5705.5], [1643.0, 8472.0], [1647.0, 10506.0], [1635.0, 8228.0], [1655.0, 8843.0], [1695.0, 8532.0], [1723.0, 8304.0], [1715.0, 5005.25], [1719.0, 8020.0], [1683.0, 6024.0], [1687.0, 8863.0], [1691.0, 8046.0], [1667.0, 8537.0], [1671.0, 9022.0], [1679.0, 8201.0], [1675.0, 8283.0], [1703.0, 5941.0], [1699.0, 8187.0], [1707.0, 8119.0], [1711.0, 7911.0], [1727.0, 9073.0], [1743.0, 8601.0], [1783.0, 5199.666666666667], [1759.0, 7926.0], [1731.0, 7880.0], [1735.0, 7852.0], [1755.0, 7705.0], [1747.0, 8417.0], [1771.0, 4992.333333333333], [1767.0, 7688.0], [1775.0, 7961.0], [1787.0, 7782.0], [1799.0, 8262.0], [1855.0, 4862.666666666667], [1827.0, 4921.0], [1851.0, 5566.0], [1815.0, 8822.0], [1823.0, 7522.5], [1795.0, 8605.0], [1803.0, 9186.0], [1807.0, 7521.0], [1843.0, 8113.0], [1831.0, 5995.0], [1835.0, 8920.0], [1839.0, 5324.0], [1915.0, 6343.666666666667], [1911.0, 7235.0], [1867.0, 5104.666666666667], [1863.0, 7686.0], [1903.0, 7005.0], [1899.0, 7214.0], [1895.0, 7748.0], [1907.0, 7064.0], [1871.0, 7674.0], [1883.0, 5651.0], [1879.0, 7175.0], [1875.0, 7671.0], [1887.0, 7072.0], [1935.0, 6918.0], [1971.0, 6820.0], [1923.0, 6029.5], [1947.0, 5263.0], [1943.0, 7446.0], [1983.0, 5236.5], [1975.0, 6902.0], [1931.0, 6915.0], [1927.0, 7009.0], [1979.0, 6163.0], [1959.0, 4797.0], [1963.0, 6931.0], [1967.0, 6982.0], [1939.0, 6932.0], [1951.0, 5202.0], [1999.0, 6973.0], [2035.0, 7806.0], [2015.0, 3649.0], [1991.0, 9412.0], [1995.0, 6739.0], [2039.0, 6629.0], [2019.0, 6633.0], [2043.0, 6546.0], [2007.0, 5601.0], [2003.0, 6670.0], [2011.0, 7135.0], [2023.0, 4729.0], [2027.0, 6713.0], [2031.0, 6735.0], [2110.0, 6563.0], [2158.0, 4707.25], [2086.0, 5477.5], [2094.0, 6340.0], [2102.0, 5347.5], [2070.0, 5078.5], [2062.0, 6530.0], [2078.0, 6597.0], [2150.0, 6507.0], [2166.0, 5002.5], [2174.0, 6043.0], [2142.0, 6173.0], [2126.0, 6153.0], [2118.0, 6764.0], [2206.0, 5821.0], [2278.0, 5505.0], [2198.0, 4953.0], [2286.0, 5941.0], [2294.0, 6193.0], [2302.0, 5347.0], [2246.0, 5753.0], [2222.0, 5644.666666666667], [2214.0, 5806.5], [2230.0, 5693.0], [2238.0, 5518.0], [2182.0, 6138.0], [2190.0, 6397.0], [2262.0, 4982.0], [2254.0, 5585.0], [2270.0, 5597.0], [2318.0, 5153.5], [2366.0, 5093.0], [2358.0, 5338.0], [2350.0, 4901.333333333333], [2310.0, 4193.0], [2326.0, 5773.0], [2334.0, 4262.0], [2406.0, 4967.0], [2414.0, 5479.0], [2430.0, 5074.0], [2422.0, 5104.0], [2382.0, 5432.0], [2374.0, 5397.0], [2398.0, 4693.5], [2390.0, 5035.0], [2342.0, 4809.5], [2438.0, 4907.0], [2462.0, 4773.0], [2470.0, 4969.0], [2478.0, 4926.0], [2486.0, 4698.0], [2071.0, 6398.0], [2055.0, 6651.5], [2111.0, 5372.666666666667], [2063.0, 6550.0], [2079.0, 5053.0], [2175.0, 7198.0], [2119.0, 6153.0], [2127.0, 6885.0], [2135.0, 6755.5], [2167.0, 5375.0], [2151.0, 6364.0], [2159.0, 6217.0], [2143.0, 5097.0], [2087.0, 5394.0], [2095.0, 6415.0], [2103.0, 5329.0], [2295.0, 5445.0], [2191.0, 4955.666666666667], [2239.0, 6425.0], [2183.0, 5963.0], [2231.0, 5466.0], [2303.0, 5761.0], [2247.0, 6021.0], [2287.0, 5081.5], [2279.0, 6022.0], [2255.0, 5928.0], [2263.0, 5711.0], [2271.0, 5903.0], [2215.0, 6235.0], [2335.0, 5857.5], [2311.0, 5365.0], [2367.0, 5234.0], [2327.0, 5407.0], [2423.0, 4915.0], [2431.0, 4853.0], [2415.0, 5226.0], [2407.0, 5898.0], [2375.0, 5250.0], [2383.0, 4914.5], [2391.0, 5108.0], [2399.0, 4466.0], [2343.0, 5310.0], [2351.0, 4590.333333333333], [2359.0, 5077.0], [2447.0, 4995.0], [2439.0, 4975.0], [2463.0, 5852.333333333333], [2455.0, 5278.0], [2471.0, 5520.0], [2487.0, 4728.0], [2479.0, 4707.0], [1.0, 15392.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[1095.3031133250313, 7053.278455790772]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2490.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 29395.0, "minX": 1.699972709E12, "maxY": 161871.0, "series": [{"data": [[1.699972717E12, 77200.0], [1.699972716E12, 73852.0], [1.699972715E12, 71985.0], [1.69997272E12, 75335.0], [1.699972719E12, 73404.0], [1.699972718E12, 73478.0], [1.699972722E12, 78598.0], [1.699972721E12, 70701.0], [1.699972725E12, 68766.0], [1.699972724E12, 73955.0], [1.699972723E12, 71142.0], [1.699972728E12, 76262.0], [1.699972727E12, 64025.0], [1.699972726E12, 70641.0], [1.699972709E12, 157161.0], [1.69997273E12, 66962.0], [1.699972729E12, 86525.0], [1.699972712E12, 64974.0], [1.699972711E12, 57971.0], [1.699972732E12, 42590.0], [1.69997271E12, 161871.0], [1.699972731E12, 83765.0], [1.699972714E12, 68287.0], [1.699972713E12, 68760.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.699972717E12, 53275.0], [1.699972716E12, 50942.0], [1.699972715E12, 49655.0], [1.69997272E12, 51990.0], [1.699972719E12, 50639.0], [1.699972718E12, 50713.0], [1.699972722E12, 54238.0], [1.699972721E12, 48806.0], [1.699972725E12, 47451.0], [1.699972724E12, 51045.0], [1.699972723E12, 49102.0], [1.699972728E12, 52627.0], [1.699972727E12, 44160.0], [1.699972726E12, 48746.0], [1.699972709E12, 108441.0], [1.69997273E12, 46227.0], [1.699972729E12, 59700.0], [1.699972712E12, 44819.0], [1.699972711E12, 39991.0], [1.699972732E12, 29395.0], [1.69997271E12, 111701.0], [1.699972731E12, 57810.0], [1.699972714E12, 47117.0], [1.699972713E12, 47445.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699972732E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 12.413690476190476, "minX": 1.699972709E12, "maxY": 15750.824175824177, "series": [{"data": [[1.699972717E12, 5384.757575757576], [1.699972716E12, 4740.08860759494], [1.699972715E12, 4041.2662337662323], [1.69997272E12, 7440.745341614907], [1.699972719E12, 6794.503184713378], [1.699972718E12, 6102.96178343949], [1.699972722E12, 8833.833333333336], [1.699972721E12, 8160.721854304633], [1.699972725E12, 10877.98639455782], [1.699972724E12, 10173.3417721519], [1.699972723E12, 9540.42763157895], [1.699972728E12, 12985.184049079751], [1.699972727E12, 12344.686131386861], [1.699972726E12, 11521.324503311258], [1.699972709E12, 12.413690476190476], [1.69997273E12, 14318.748251748255], [1.699972729E12, 13648.254054054052], [1.699972712E12, 1643.1223021582734], [1.699972711E12, 770.5887096774194], [1.699972732E12, 15750.824175824177], [1.69997271E12, 51.60115606936417], [1.699972731E12, 15200.737430167603], [1.699972714E12, 3253.09589041096], [1.699972713E12, 2504.156462585035]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699972732E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 12.235119047619053, "minX": 1.699972709E12, "maxY": 15750.769230769229, "series": [{"data": [[1.699972717E12, 5384.684848484849], [1.699972716E12, 4740.018987341773], [1.699972715E12, 4041.220779220779], [1.69997272E12, 7440.695652173913], [1.699972719E12, 6794.420382165605], [1.699972718E12, 6102.91082802548], [1.699972722E12, 8833.755952380954], [1.699972721E12, 8160.695364238408], [1.699972725E12, 10877.911564625854], [1.699972724E12, 10173.303797468354], [1.699972723E12, 9540.355263157891], [1.699972728E12, 12985.116564417172], [1.699972727E12, 12344.642335766428], [1.699972726E12, 11521.245033112578], [1.699972709E12, 12.235119047619053], [1.69997273E12, 14318.678321678324], [1.699972729E12, 13648.167567567578], [1.699972712E12, 1643.035971223022], [1.699972711E12, 770.5564516129031], [1.699972732E12, 15750.769230769229], [1.69997271E12, 51.54046242774568], [1.699972731E12, 15200.687150837986], [1.699972714E12, 3253.0205479452056], [1.699972713E12, 2503.891156462586]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699972732E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.627027027027027, "minX": 1.699972709E12, "maxY": 3.3958333333333353, "series": [{"data": [[1.699972717E12, 1.5575757575757574], [1.699972716E12, 1.6772151898734176], [1.699972715E12, 1.2662337662337664], [1.69997272E12, 1.049689440993788], [1.699972719E12, 0.9681528662420381], [1.699972718E12, 1.3949044585987265], [1.699972722E12, 0.7916666666666669], [1.699972721E12, 0.827814569536424], [1.699972725E12, 1.0476190476190474], [1.699972724E12, 0.6392405063291137], [1.699972723E12, 1.2434210526315785], [1.699972728E12, 0.7116564417177916], [1.699972727E12, 0.6934306569343063], [1.699972726E12, 1.006622516556291], [1.699972709E12, 3.3958333333333353], [1.69997273E12, 0.6643356643356642], [1.699972729E12, 0.627027027027027], [1.699972712E12, 1.4604316546762592], [1.699972711E12, 1.1693548387096773], [1.699972732E12, 2.0109890109890096], [1.69997271E12, 1.1878612716763006], [1.699972731E12, 0.6927374301675976], [1.699972714E12, 1.2191780821917808], [1.699972713E12, 1.5510204081632655]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699972732E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.699972709E12, "maxY": 18166.0, "series": [{"data": [[1.699972717E12, 6731.0], [1.699972716E12, 6053.0], [1.699972715E12, 5175.0], [1.69997272E12, 9480.0], [1.699972719E12, 9412.0], [1.699972718E12, 7675.0], [1.699972722E12, 11085.0], [1.699972721E12, 10394.0], [1.699972725E12, 13182.0], [1.699972724E12, 11822.0], [1.699972723E12, 11600.0], [1.699972728E12, 15028.0], [1.699972727E12, 14391.0], [1.699972726E12, 13972.0], [1.699972709E12, 89.0], [1.69997273E12, 15963.0], [1.699972729E12, 15754.0], [1.699972712E12, 2513.0], [1.699972711E12, 1439.0], [1.699972732E12, 18166.0], [1.69997271E12, 514.0], [1.699972731E12, 17669.0], [1.699972714E12, 4295.0], [1.699972713E12, 3417.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.699972717E12, 5983.0], [1.699972716E12, 5419.799999999999], [1.699972715E12, 4671.5], [1.69997272E12, 8070.8], [1.699972719E12, 7520.200000000001], [1.699972718E12, 6748.2], [1.699972722E12, 9532.0], [1.699972721E12, 8836.8], [1.699972725E12, 11528.600000000002], [1.699972724E12, 10835.8], [1.699972723E12, 10175.7], [1.699972728E12, 13623.2], [1.699972727E12, 13203.800000000001], [1.699972726E12, 12043.8], [1.699972709E12, 17.0], [1.69997273E12, 15147.599999999999], [1.699972729E12, 14281.4], [1.699972712E12, 2079.0], [1.699972711E12, 1117.5], [1.699972732E12, 16432.0], [1.69997271E12, 164.60000000000002], [1.699972731E12, 15860.0], [1.699972714E12, 3752.2], [1.699972713E12, 2932.6000000000004]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.699972717E12, 6616.160000000001], [1.699972716E12, 5884.259999999999], [1.699972715E12, 5112.8499999999985], [1.69997272E12, 9432.88], [1.699972719E12, 8851.719999999988], [1.699972718E12, 7540.439999999997], [1.699972722E12, 10685.490000000002], [1.699972721E12, 9984.239999999993], [1.699972725E12, 13110.000000000002], [1.699972724E12, 11561.22], [1.699972723E12, 11328.109999999999], [1.699972728E12, 14642.71999999999], [1.699972727E12, 14317.28], [1.699972726E12, 13573.679999999993], [1.699972709E12, 62.14999999999998], [1.69997273E12, 15949.8], [1.699972729E12, 15325.719999999994], [1.699972712E12, 2484.5999999999995], [1.699972711E12, 1424.25], [1.699972732E12, 18166.0], [1.69997271E12, 364.8299999999997], [1.699972731E12, 17524.999999999996], [1.699972714E12, 4240.4800000000005], [1.699972713E12, 3386.2800000000007]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.699972717E12, 6181.7], [1.699972716E12, 5652.3], [1.699972715E12, 4864.75], [1.69997272E12, 8216.9], [1.699972719E12, 7858.7], [1.699972718E12, 6979.5], [1.699972722E12, 9749.699999999999], [1.699972721E12, 9206.0], [1.699972725E12, 12216.8], [1.699972724E12, 11063.75], [1.699972723E12, 10315.4], [1.699972728E12, 13948.4], [1.699972727E12, 13529.3], [1.699972726E12, 12395.400000000001], [1.699972709E12, 44.0], [1.69997273E12, 15434.6], [1.699972729E12, 14775.8], [1.699972712E12, 2303.0], [1.699972711E12, 1200.75], [1.699972732E12, 16625.6], [1.69997271E12, 236.29999999999995], [1.699972731E12, 16281.0], [1.699972714E12, 3868.55], [1.699972713E12, 3141.2]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.699972717E12, 4729.0], [1.699972716E12, 4080.0], [1.699972715E12, 3319.0], [1.69997272E12, 6784.0], [1.699972719E12, 6053.0], [1.699972718E12, 5399.0], [1.699972722E12, 8128.0], [1.699972721E12, 7426.0], [1.699972725E12, 10195.0], [1.699972724E12, 9493.0], [1.699972723E12, 8809.0], [1.699972728E12, 12335.0], [1.699972727E12, 11552.0], [1.699972726E12, 10854.0], [1.699972709E12, 5.0], [1.69997273E12, 13631.0], [1.699972729E12, 12964.0], [1.699972712E12, 1064.0], [1.699972711E12, 247.0], [1.699972732E12, 15166.0], [1.69997271E12, 5.0], [1.699972731E12, 14299.0], [1.699972714E12, 2646.0], [1.699972713E12, 1901.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.699972717E12, 5297.0], [1.699972716E12, 4668.0], [1.699972715E12, 3993.0], [1.69997272E12, 7360.0], [1.699972719E12, 6609.0], [1.699972718E12, 6021.0], [1.699972722E12, 8727.5], [1.699972721E12, 8061.0], [1.699972725E12, 10757.0], [1.699972724E12, 10093.5], [1.699972723E12, 9411.5], [1.699972728E12, 12878.0], [1.699972727E12, 12200.0], [1.699972726E12, 11433.0], [1.699972709E12, 9.0], [1.69997273E12, 14174.0], [1.699972729E12, 13525.0], [1.699972712E12, 1643.0], [1.699972711E12, 767.0], [1.699972732E12, 15613.0], [1.69997271E12, 10.5], [1.699972731E12, 15138.0], [1.699972714E12, 3219.5], [1.699972713E12, 2505.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699972732E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 9.0, "minX": 91.0, "maxY": 15613.0, "series": [{"data": [[139.0, 1643.0], [137.0, 12200.0], [143.0, 14174.0], [147.0, 6806.0], [146.0, 3219.5], [151.0, 10624.0], [154.0, 3993.0], [158.0, 7773.0], [157.0, 6399.0], [152.0, 9411.5], [165.0, 5297.0], [161.0, 7360.0], [163.0, 12878.0], [168.0, 8727.5], [179.0, 15138.0], [185.0, 13525.0], [336.0, 9.0], [346.0, 10.5], [91.0, 15613.0], [124.0, 767.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 346.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 9.0, "minX": 91.0, "maxY": 15613.0, "series": [{"data": [[139.0, 1643.0], [137.0, 12200.0], [143.0, 14174.0], [147.0, 6806.0], [146.0, 3219.5], [151.0, 10624.0], [154.0, 3993.0], [158.0, 7772.5], [157.0, 6398.5], [152.0, 9410.0], [165.0, 5297.0], [161.0, 7360.0], [163.0, 12878.0], [168.0, 8727.5], [179.0, 15138.0], [185.0, 13525.0], [336.0, 9.0], [346.0, 10.0], [91.0, 15613.0], [124.0, 767.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 346.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 28.0, "minX": 1.699972708E12, "maxY": 684.0, "series": [{"data": [[1.699972716E12, 425.0], [1.699972715E12, 500.0], [1.699972709E12, 310.0], [1.699972708E12, 28.0], [1.699972712E12, 499.0], [1.699972711E12, 569.0], [1.69997271E12, 684.0], [1.699972714E12, 500.0], [1.699972713E12, 500.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699972716E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 91.0, "minX": 1.699972709E12, "maxY": 346.0, "series": [{"data": [[1.699972717E12, 165.0], [1.699972716E12, 158.0], [1.699972715E12, 154.0], [1.69997272E12, 161.0], [1.699972719E12, 157.0], [1.699972718E12, 157.0], [1.699972722E12, 168.0], [1.699972721E12, 151.0], [1.699972725E12, 147.0], [1.699972724E12, 158.0], [1.699972723E12, 152.0], [1.699972728E12, 163.0], [1.699972727E12, 137.0], [1.699972726E12, 151.0], [1.699972709E12, 336.0], [1.69997273E12, 143.0], [1.699972729E12, 185.0], [1.699972712E12, 139.0], [1.699972711E12, 124.0], [1.699972732E12, 91.0], [1.69997271E12, 346.0], [1.699972731E12, 179.0], [1.699972714E12, 146.0], [1.699972713E12, 147.0]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699972732E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 91.0, "minX": 1.699972709E12, "maxY": 346.0, "series": [{"data": [[1.699972717E12, 165.0], [1.699972716E12, 158.0], [1.699972715E12, 154.0], [1.69997272E12, 161.0], [1.699972719E12, 157.0], [1.699972718E12, 157.0], [1.699972722E12, 168.0], [1.699972721E12, 151.0], [1.699972725E12, 147.0], [1.699972724E12, 158.0], [1.699972723E12, 152.0], [1.699972728E12, 163.0], [1.699972727E12, 137.0], [1.699972726E12, 151.0], [1.699972709E12, 336.0], [1.69997273E12, 143.0], [1.699972729E12, 185.0], [1.699972712E12, 139.0], [1.699972711E12, 124.0], [1.699972732E12, 91.0], [1.69997271E12, 346.0], [1.699972731E12, 179.0], [1.699972714E12, 146.0], [1.699972713E12, 147.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699972732E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 91.0, "minX": 1.699972709E12, "maxY": 346.0, "series": [{"data": [[1.699972717E12, 165.0], [1.699972716E12, 158.0], [1.699972715E12, 154.0], [1.69997272E12, 161.0], [1.699972719E12, 157.0], [1.699972718E12, 157.0], [1.699972722E12, 168.0], [1.699972721E12, 151.0], [1.699972725E12, 147.0], [1.699972724E12, 158.0], [1.699972723E12, 152.0], [1.699972728E12, 163.0], [1.699972727E12, 137.0], [1.699972726E12, 151.0], [1.699972709E12, 336.0], [1.69997273E12, 143.0], [1.699972729E12, 185.0], [1.699972712E12, 139.0], [1.699972711E12, 124.0], [1.699972732E12, 91.0], [1.69997271E12, 346.0], [1.699972731E12, 179.0], [1.699972714E12, 146.0], [1.699972713E12, 147.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.699972732E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

