/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 18674.0, "series": [{"data": [[0.0, 5.0], [0.1, 6.0], [0.2, 6.0], [0.3, 6.0], [0.4, 6.0], [0.5, 6.0], [0.6, 6.0], [0.7, 6.0], [0.8, 6.0], [0.9, 6.0], [1.0, 6.0], [1.1, 7.0], [1.2, 7.0], [1.3, 7.0], [1.4, 7.0], [1.5, 7.0], [1.6, 7.0], [1.7, 7.0], [1.8, 7.0], [1.9, 7.0], [2.0, 7.0], [2.1, 7.0], [2.2, 7.0], [2.3, 7.0], [2.4, 7.0], [2.5, 7.0], [2.6, 7.0], [2.7, 7.0], [2.8, 7.0], [2.9, 7.0], [3.0, 7.0], [3.1, 7.0], [3.2, 7.0], [3.3, 7.0], [3.4, 7.0], [3.5, 7.0], [3.6, 7.0], [3.7, 8.0], [3.8, 8.0], [3.9, 8.0], [4.0, 8.0], [4.1, 8.0], [4.2, 8.0], [4.3, 8.0], [4.4, 8.0], [4.5, 8.0], [4.6, 8.0], [4.7, 8.0], [4.8, 8.0], [4.9, 8.0], [5.0, 8.0], [5.1, 8.0], [5.2, 8.0], [5.3, 8.0], [5.4, 8.0], [5.5, 8.0], [5.6, 8.0], [5.7, 8.0], [5.8, 8.0], [5.9, 8.0], [6.0, 8.0], [6.1, 8.0], [6.2, 8.0], [6.3, 8.0], [6.4, 8.0], [6.5, 9.0], [6.6, 9.0], [6.7, 9.0], [6.8, 9.0], [6.9, 9.0], [7.0, 9.0], [7.1, 9.0], [7.2, 9.0], [7.3, 9.0], [7.4, 9.0], [7.5, 9.0], [7.6, 9.0], [7.7, 9.0], [7.8, 9.0], [7.9, 9.0], [8.0, 9.0], [8.1, 9.0], [8.2, 9.0], [8.3, 9.0], [8.4, 9.0], [8.5, 9.0], [8.6, 9.0], [8.7, 9.0], [8.8, 9.0], [8.9, 9.0], [9.0, 9.0], [9.1, 9.0], [9.2, 9.0], [9.3, 10.0], [9.4, 10.0], [9.5, 10.0], [9.6, 10.0], [9.7, 10.0], [9.8, 10.0], [9.9, 10.0], [10.0, 10.0], [10.1, 10.0], [10.2, 10.0], [10.3, 10.0], [10.4, 10.0], [10.5, 10.0], [10.6, 10.0], [10.7, 11.0], [10.8, 11.0], [10.9, 11.0], [11.0, 11.0], [11.1, 11.0], [11.2, 11.0], [11.3, 11.0], [11.4, 11.0], [11.5, 11.0], [11.6, 11.0], [11.7, 12.0], [11.8, 12.0], [11.9, 12.0], [12.0, 12.0], [12.1, 12.0], [12.2, 12.0], [12.3, 12.0], [12.4, 13.0], [12.5, 13.0], [12.6, 14.0], [12.7, 14.0], [12.8, 14.0], [12.9, 14.0], [13.0, 15.0], [13.1, 15.0], [13.2, 16.0], [13.3, 18.0], [13.4, 19.0], [13.5, 20.0], [13.6, 21.0], [13.7, 23.0], [13.8, 24.0], [13.9, 25.0], [14.0, 26.0], [14.1, 28.0], [14.2, 31.0], [14.3, 34.0], [14.4, 35.0], [14.5, 36.0], [14.6, 39.0], [14.7, 42.0], [14.8, 49.0], [14.9, 52.0], [15.0, 55.0], [15.1, 57.0], [15.2, 59.0], [15.3, 61.0], [15.4, 62.0], [15.5, 63.0], [15.6, 68.0], [15.7, 75.0], [15.8, 80.0], [15.9, 84.0], [16.0, 87.0], [16.1, 88.0], [16.2, 94.0], [16.3, 97.0], [16.4, 100.0], [16.5, 107.0], [16.6, 111.0], [16.7, 114.0], [16.8, 118.0], [16.9, 126.0], [17.0, 133.0], [17.1, 147.0], [17.2, 149.0], [17.3, 157.0], [17.4, 168.0], [17.5, 174.0], [17.6, 199.0], [17.7, 234.0], [17.8, 265.0], [17.9, 296.0], [18.0, 367.0], [18.1, 411.0], [18.2, 419.0], [18.3, 438.0], [18.4, 462.0], [18.5, 508.0], [18.6, 528.0], [18.7, 581.0], [18.8, 611.0], [18.9, 628.0], [19.0, 655.0], [19.1, 693.0], [19.2, 715.0], [19.3, 767.0], [19.4, 789.0], [19.5, 798.0], [19.6, 803.0], [19.7, 826.0], [19.8, 856.0], [19.9, 878.0], [20.0, 900.0], [20.1, 926.0], [20.2, 958.0], [20.3, 965.0], [20.4, 1001.0], [20.5, 1022.0], [20.6, 1034.0], [20.7, 1057.0], [20.8, 1075.0], [20.9, 1105.0], [21.0, 1114.0], [21.1, 1138.0], [21.2, 1186.0], [21.3, 1210.0], [21.4, 1252.0], [21.5, 1258.0], [21.6, 1270.0], [21.7, 1292.0], [21.8, 1327.0], [21.9, 1352.0], [22.0, 1365.0], [22.1, 1414.0], [22.2, 1433.0], [22.3, 1470.0], [22.4, 1491.0], [22.5, 1507.0], [22.6, 1536.0], [22.7, 1553.0], [22.8, 1600.0], [22.9, 1616.0], [23.0, 1666.0], [23.1, 1683.0], [23.2, 1697.0], [23.3, 1717.0], [23.4, 1735.0], [23.5, 1742.0], [23.6, 1756.0], [23.7, 1768.0], [23.8, 1788.0], [23.9, 1818.0], [24.0, 1838.0], [24.1, 1875.0], [24.2, 1914.0], [24.3, 1929.0], [24.4, 1938.0], [24.5, 1964.0], [24.6, 1995.0], [24.7, 2011.0], [24.8, 2025.0], [24.9, 2040.0], [25.0, 2065.0], [25.1, 2095.0], [25.2, 2113.0], [25.3, 2134.0], [25.4, 2149.0], [25.5, 2161.0], [25.6, 2180.0], [25.7, 2216.0], [25.8, 2224.0], [25.9, 2250.0], [26.0, 2263.0], [26.1, 2279.0], [26.2, 2291.0], [26.3, 2325.0], [26.4, 2344.0], [26.5, 2353.0], [26.6, 2371.0], [26.7, 2387.0], [26.8, 2419.0], [26.9, 2437.0], [27.0, 2449.0], [27.1, 2493.0], [27.2, 2505.0], [27.3, 2520.0], [27.4, 2527.0], [27.5, 2577.0], [27.6, 2596.0], [27.7, 2615.0], [27.8, 2627.0], [27.9, 2642.0], [28.0, 2653.0], [28.1, 2668.0], [28.2, 2695.0], [28.3, 2712.0], [28.4, 2730.0], [28.5, 2763.0], [28.6, 2784.0], [28.7, 2807.0], [28.8, 2835.0], [28.9, 2842.0], [29.0, 2879.0], [29.1, 2909.0], [29.2, 2939.0], [29.3, 2978.0], [29.4, 2993.0], [29.5, 3016.0], [29.6, 3036.0], [29.7, 3044.0], [29.8, 3063.0], [29.9, 3072.0], [30.0, 3090.0], [30.1, 3133.0], [30.2, 3150.0], [30.3, 3158.0], [30.4, 3182.0], [30.5, 3212.0], [30.6, 3217.0], [30.7, 3225.0], [30.8, 3250.0], [30.9, 3273.0], [31.0, 3289.0], [31.1, 3300.0], [31.2, 3330.0], [31.3, 3341.0], [31.4, 3353.0], [31.5, 3368.0], [31.6, 3401.0], [31.7, 3435.0], [31.8, 3458.0], [31.9, 3472.0], [32.0, 3510.0], [32.1, 3522.0], [32.2, 3533.0], [32.3, 3545.0], [32.4, 3570.0], [32.5, 3593.0], [32.6, 3621.0], [32.7, 3650.0], [32.8, 3708.0], [32.9, 3748.0], [33.0, 3765.0], [33.1, 3795.0], [33.2, 3806.0], [33.3, 3823.0], [33.4, 3865.0], [33.5, 3882.0], [33.6, 3914.0], [33.7, 3927.0], [33.8, 3953.0], [33.9, 3966.0], [34.0, 3978.0], [34.1, 4012.0], [34.2, 4025.0], [34.3, 4047.0], [34.4, 4070.0], [34.5, 4078.0], [34.6, 4121.0], [34.7, 4148.0], [34.8, 4174.0], [34.9, 4185.0], [35.0, 4233.0], [35.1, 4243.0], [35.2, 4264.0], [35.3, 4287.0], [35.4, 4315.0], [35.5, 4332.0], [35.6, 4354.0], [35.7, 4371.0], [35.8, 4392.0], [35.9, 4411.0], [36.0, 4448.0], [36.1, 4475.0], [36.2, 4488.0], [36.3, 4497.0], [36.4, 4507.0], [36.5, 4539.0], [36.6, 4561.0], [36.7, 4576.0], [36.8, 4581.0], [36.9, 4589.0], [37.0, 4617.0], [37.1, 4624.0], [37.2, 4639.0], [37.3, 4654.0], [37.4, 4669.0], [37.5, 4690.0], [37.6, 4720.0], [37.7, 4748.0], [37.8, 4777.0], [37.9, 4788.0], [38.0, 4805.0], [38.1, 4822.0], [38.2, 4843.0], [38.3, 4847.0], [38.4, 4859.0], [38.5, 4880.0], [38.6, 4903.0], [38.7, 4938.0], [38.8, 4950.0], [38.9, 4969.0], [39.0, 4994.0], [39.1, 5022.0], [39.2, 5033.0], [39.3, 5044.0], [39.4, 5055.0], [39.5, 5088.0], [39.6, 5099.0], [39.7, 5156.0], [39.8, 5171.0], [39.9, 5177.0], [40.0, 5191.0], [40.1, 5217.0], [40.2, 5243.0], [40.3, 5268.0], [40.4, 5281.0], [40.5, 5302.0], [40.6, 5322.0], [40.7, 5349.0], [40.8, 5363.0], [40.9, 5384.0], [41.0, 5398.0], [41.1, 5407.0], [41.2, 5430.0], [41.3, 5440.0], [41.4, 5456.0], [41.5, 5476.0], [41.6, 5487.0], [41.7, 5498.0], [41.8, 5514.0], [41.9, 5538.0], [42.0, 5557.0], [42.1, 5569.0], [42.2, 5576.0], [42.3, 5589.0], [42.4, 5620.0], [42.5, 5635.0], [42.6, 5645.0], [42.7, 5662.0], [42.8, 5686.0], [42.9, 5700.0], [43.0, 5706.0], [43.1, 5733.0], [43.2, 5751.0], [43.3, 5770.0], [43.4, 5781.0], [43.5, 5816.0], [43.6, 5835.0], [43.7, 5891.0], [43.8, 5913.0], [43.9, 5928.0], [44.0, 5950.0], [44.1, 5960.0], [44.2, 5996.0], [44.3, 6008.0], [44.4, 6025.0], [44.5, 6040.0], [44.6, 6063.0], [44.7, 6077.0], [44.8, 6086.0], [44.9, 6091.0], [45.0, 6097.0], [45.1, 6127.0], [45.2, 6142.0], [45.3, 6159.0], [45.4, 6175.0], [45.5, 6195.0], [45.6, 6205.0], [45.7, 6240.0], [45.8, 6259.0], [45.9, 6276.0], [46.0, 6284.0], [46.1, 6312.0], [46.2, 6331.0], [46.3, 6360.0], [46.4, 6371.0], [46.5, 6407.0], [46.6, 6420.0], [46.7, 6438.0], [46.8, 6463.0], [46.9, 6476.0], [47.0, 6487.0], [47.1, 6505.0], [47.2, 6536.0], [47.3, 6548.0], [47.4, 6580.0], [47.5, 6596.0], [47.6, 6612.0], [47.7, 6621.0], [47.8, 6675.0], [47.9, 6686.0], [48.0, 6722.0], [48.1, 6745.0], [48.2, 6752.0], [48.3, 6767.0], [48.4, 6781.0], [48.5, 6799.0], [48.6, 6813.0], [48.7, 6848.0], [48.8, 6860.0], [48.9, 6870.0], [49.0, 6890.0], [49.1, 6898.0], [49.2, 6908.0], [49.3, 6918.0], [49.4, 6944.0], [49.5, 6958.0], [49.6, 6972.0], [49.7, 6991.0], [49.8, 7000.0], [49.9, 7017.0], [50.0, 7039.0], [50.1, 7058.0], [50.2, 7075.0], [50.3, 7098.0], [50.4, 7114.0], [50.5, 7137.0], [50.6, 7148.0], [50.7, 7164.0], [50.8, 7170.0], [50.9, 7186.0], [51.0, 7217.0], [51.1, 7232.0], [51.2, 7244.0], [51.3, 7274.0], [51.4, 7288.0], [51.5, 7293.0], [51.6, 7311.0], [51.7, 7320.0], [51.8, 7325.0], [51.9, 7340.0], [52.0, 7366.0], [52.1, 7373.0], [52.2, 7390.0], [52.3, 7405.0], [52.4, 7423.0], [52.5, 7429.0], [52.6, 7438.0], [52.7, 7444.0], [52.8, 7455.0], [52.9, 7464.0], [53.0, 7481.0], [53.1, 7493.0], [53.2, 7525.0], [53.3, 7533.0], [53.4, 7565.0], [53.5, 7600.0], [53.6, 7616.0], [53.7, 7640.0], [53.8, 7655.0], [53.9, 7667.0], [54.0, 7683.0], [54.1, 7697.0], [54.2, 7706.0], [54.3, 7720.0], [54.4, 7726.0], [54.5, 7733.0], [54.6, 7748.0], [54.7, 7764.0], [54.8, 7769.0], [54.9, 7783.0], [55.0, 7795.0], [55.1, 7808.0], [55.2, 7826.0], [55.3, 7838.0], [55.4, 7870.0], [55.5, 7878.0], [55.6, 7903.0], [55.7, 7921.0], [55.8, 7934.0], [55.9, 7952.0], [56.0, 7961.0], [56.1, 7986.0], [56.2, 8024.0], [56.3, 8031.0], [56.4, 8057.0], [56.5, 8075.0], [56.6, 8091.0], [56.7, 8099.0], [56.8, 8105.0], [56.9, 8129.0], [57.0, 8136.0], [57.1, 8155.0], [57.2, 8197.0], [57.3, 8209.0], [57.4, 8231.0], [57.5, 8237.0], [57.6, 8255.0], [57.7, 8273.0], [57.8, 8294.0], [57.9, 8305.0], [58.0, 8332.0], [58.1, 8352.0], [58.2, 8366.0], [58.3, 8376.0], [58.4, 8386.0], [58.5, 8416.0], [58.6, 8431.0], [58.7, 8439.0], [58.8, 8467.0], [58.9, 8488.0], [59.0, 8515.0], [59.1, 8537.0], [59.2, 8541.0], [59.3, 8573.0], [59.4, 8590.0], [59.5, 8612.0], [59.6, 8638.0], [59.7, 8653.0], [59.8, 8669.0], [59.9, 8697.0], [60.0, 8721.0], [60.1, 8725.0], [60.2, 8733.0], [60.3, 8749.0], [60.4, 8765.0], [60.5, 8776.0], [60.6, 8786.0], [60.7, 8813.0], [60.8, 8842.0], [60.9, 8868.0], [61.0, 8879.0], [61.1, 8914.0], [61.2, 8932.0], [61.3, 8952.0], [61.4, 8965.0], [61.5, 8995.0], [61.6, 9022.0], [61.7, 9055.0], [61.8, 9070.0], [61.9, 9081.0], [62.0, 9105.0], [62.1, 9112.0], [62.2, 9129.0], [62.3, 9140.0], [62.4, 9161.0], [62.5, 9171.0], [62.6, 9193.0], [62.7, 9217.0], [62.8, 9222.0], [62.9, 9247.0], [63.0, 9261.0], [63.1, 9288.0], [63.2, 9297.0], [63.3, 9314.0], [63.4, 9348.0], [63.5, 9381.0], [63.6, 9400.0], [63.7, 9414.0], [63.8, 9450.0], [63.9, 9485.0], [64.0, 9503.0], [64.1, 9508.0], [64.2, 9522.0], [64.3, 9536.0], [64.4, 9544.0], [64.5, 9551.0], [64.6, 9569.0], [64.7, 9598.0], [64.8, 9611.0], [64.9, 9616.0], [65.0, 9636.0], [65.1, 9640.0], [65.2, 9657.0], [65.3, 9665.0], [65.4, 9688.0], [65.5, 9710.0], [65.6, 9721.0], [65.7, 9749.0], [65.8, 9754.0], [65.9, 9788.0], [66.0, 9801.0], [66.1, 9814.0], [66.2, 9822.0], [66.3, 9843.0], [66.4, 9866.0], [66.5, 9884.0], [66.6, 9899.0], [66.7, 9922.0], [66.8, 9936.0], [66.9, 9943.0], [67.0, 9980.0], [67.1, 10002.0], [67.2, 10013.0], [67.3, 10040.0], [67.4, 10060.0], [67.5, 10089.0], [67.6, 10099.0], [67.7, 10119.0], [67.8, 10141.0], [67.9, 10151.0], [68.0, 10173.0], [68.1, 10207.0], [68.2, 10230.0], [68.3, 10253.0], [68.4, 10264.0], [68.5, 10280.0], [68.6, 10294.0], [68.7, 10307.0], [68.8, 10336.0], [68.9, 10351.0], [69.0, 10371.0], [69.1, 10391.0], [69.2, 10401.0], [69.3, 10409.0], [69.4, 10422.0], [69.5, 10456.0], [69.6, 10468.0], [69.7, 10480.0], [69.8, 10487.0], [69.9, 10513.0], [70.0, 10525.0], [70.1, 10546.0], [70.2, 10571.0], [70.3, 10579.0], [70.4, 10609.0], [70.5, 10620.0], [70.6, 10632.0], [70.7, 10648.0], [70.8, 10670.0], [70.9, 10682.0], [71.0, 10706.0], [71.1, 10713.0], [71.2, 10723.0], [71.3, 10730.0], [71.4, 10764.0], [71.5, 10778.0], [71.6, 10805.0], [71.7, 10816.0], [71.8, 10858.0], [71.9, 10871.0], [72.0, 10881.0], [72.1, 10902.0], [72.2, 10912.0], [72.3, 10918.0], [72.4, 10930.0], [72.5, 10945.0], [72.6, 10953.0], [72.7, 10983.0], [72.8, 10995.0], [72.9, 11011.0], [73.0, 11022.0], [73.1, 11037.0], [73.2, 11064.0], [73.3, 11079.0], [73.4, 11108.0], [73.5, 11112.0], [73.6, 11126.0], [73.7, 11133.0], [73.8, 11139.0], [73.9, 11158.0], [74.0, 11169.0], [74.1, 11188.0], [74.2, 11197.0], [74.3, 11212.0], [74.4, 11218.0], [74.5, 11224.0], [74.6, 11233.0], [74.7, 11276.0], [74.8, 11301.0], [74.9, 11313.0], [75.0, 11321.0], [75.1, 11339.0], [75.2, 11355.0], [75.3, 11363.0], [75.4, 11379.0], [75.5, 11398.0], [75.6, 11414.0], [75.7, 11434.0], [75.8, 11448.0], [75.9, 11451.0], [76.0, 11462.0], [76.1, 11490.0], [76.2, 11509.0], [76.3, 11513.0], [76.4, 11522.0], [76.5, 11536.0], [76.6, 11543.0], [76.7, 11554.0], [76.8, 11559.0], [76.9, 11580.0], [77.0, 11589.0], [77.1, 11598.0], [77.2, 11607.0], [77.3, 11621.0], [77.4, 11638.0], [77.5, 11645.0], [77.6, 11673.0], [77.7, 11689.0], [77.8, 11712.0], [77.9, 11721.0], [78.0, 11732.0], [78.1, 11745.0], [78.2, 11760.0], [78.3, 11798.0], [78.4, 11805.0], [78.5, 11831.0], [78.6, 11857.0], [78.7, 11874.0], [78.8, 11922.0], [78.9, 11949.0], [79.0, 11967.0], [79.1, 11989.0], [79.2, 12004.0], [79.3, 12019.0], [79.4, 12049.0], [79.5, 12065.0], [79.6, 12075.0], [79.7, 12100.0], [79.8, 12133.0], [79.9, 12138.0], [80.0, 12178.0], [80.1, 12191.0], [80.2, 12194.0], [80.3, 12213.0], [80.4, 12227.0], [80.5, 12247.0], [80.6, 12265.0], [80.7, 12278.0], [80.8, 12292.0], [80.9, 12311.0], [81.0, 12331.0], [81.1, 12369.0], [81.2, 12385.0], [81.3, 12405.0], [81.4, 12428.0], [81.5, 12445.0], [81.6, 12455.0], [81.7, 12460.0], [81.8, 12476.0], [81.9, 12508.0], [82.0, 12511.0], [82.1, 12532.0], [82.2, 12552.0], [82.3, 12575.0], [82.4, 12603.0], [82.5, 12617.0], [82.6, 12639.0], [82.7, 12660.0], [82.8, 12692.0], [82.9, 12701.0], [83.0, 12740.0], [83.1, 12752.0], [83.2, 12769.0], [83.3, 12792.0], [83.4, 12803.0], [83.5, 12825.0], [83.6, 12846.0], [83.7, 12857.0], [83.8, 12867.0], [83.9, 12899.0], [84.0, 12928.0], [84.1, 12961.0], [84.2, 12977.0], [84.3, 12986.0], [84.4, 13058.0], [84.5, 13063.0], [84.6, 13080.0], [84.7, 13096.0], [84.8, 13118.0], [84.9, 13138.0], [85.0, 13154.0], [85.1, 13168.0], [85.2, 13197.0], [85.3, 13218.0], [85.4, 13246.0], [85.5, 13256.0], [85.6, 13268.0], [85.7, 13290.0], [85.8, 13343.0], [85.9, 13355.0], [86.0, 13386.0], [86.1, 13420.0], [86.2, 13431.0], [86.3, 13440.0], [86.4, 13471.0], [86.5, 13489.0], [86.6, 13506.0], [86.7, 13539.0], [86.8, 13551.0], [86.9, 13578.0], [87.0, 13614.0], [87.1, 13635.0], [87.2, 13644.0], [87.3, 13671.0], [87.4, 13687.0], [87.5, 13715.0], [87.6, 13744.0], [87.7, 13765.0], [87.8, 13776.0], [87.9, 13804.0], [88.0, 13833.0], [88.1, 13855.0], [88.2, 13860.0], [88.3, 13895.0], [88.4, 13920.0], [88.5, 13928.0], [88.6, 13962.0], [88.7, 14002.0], [88.8, 14033.0], [88.9, 14082.0], [89.0, 14095.0], [89.1, 14103.0], [89.2, 14126.0], [89.3, 14139.0], [89.4, 14149.0], [89.5, 14175.0], [89.6, 14190.0], [89.7, 14201.0], [89.8, 14225.0], [89.9, 14259.0], [90.0, 14288.0], [90.1, 14313.0], [90.2, 14341.0], [90.3, 14352.0], [90.4, 14374.0], [90.5, 14391.0], [90.6, 14402.0], [90.7, 14439.0], [90.8, 14453.0], [90.9, 14473.0], [91.0, 14490.0], [91.1, 14494.0], [91.2, 14508.0], [91.3, 14522.0], [91.4, 14537.0], [91.5, 14562.0], [91.6, 14571.0], [91.7, 14595.0], [91.8, 14624.0], [91.9, 14640.0], [92.0, 14652.0], [92.1, 14677.0], [92.2, 14690.0], [92.3, 14701.0], [92.4, 14708.0], [92.5, 14725.0], [92.6, 14747.0], [92.7, 14760.0], [92.8, 14797.0], [92.9, 14818.0], [93.0, 14838.0], [93.1, 14866.0], [93.2, 14869.0], [93.3, 14890.0], [93.4, 14919.0], [93.5, 14942.0], [93.6, 14955.0], [93.7, 14964.0], [93.8, 14990.0], [93.9, 14997.0], [94.0, 15015.0], [94.1, 15025.0], [94.2, 15040.0], [94.3, 15068.0], [94.4, 15092.0], [94.5, 15107.0], [94.6, 15124.0], [94.7, 15155.0], [94.8, 15189.0], [94.9, 15215.0], [95.0, 15239.0], [95.1, 15275.0], [95.2, 15298.0], [95.3, 15308.0], [95.4, 15314.0], [95.5, 15323.0], [95.6, 15337.0], [95.7, 15372.0], [95.8, 15398.0], [95.9, 15434.0], [96.0, 15447.0], [96.1, 15464.0], [96.2, 15482.0], [96.3, 15506.0], [96.4, 15521.0], [96.5, 15538.0], [96.6, 15551.0], [96.7, 15563.0], [96.8, 15574.0], [96.9, 15588.0], [97.0, 15596.0], [97.1, 15600.0], [97.2, 15606.0], [97.3, 15615.0], [97.4, 15639.0], [97.5, 15651.0], [97.6, 15662.0], [97.7, 15696.0], [97.8, 15721.0], [97.9, 15737.0], [98.0, 15768.0], [98.1, 15782.0], [98.2, 15795.0], [98.3, 15845.0], [98.4, 15901.0], [98.5, 15932.0], [98.6, 15978.0], [98.7, 16025.0], [98.8, 16063.0], [98.9, 16090.0], [99.0, 16111.0], [99.1, 16305.0], [99.2, 16354.0], [99.3, 16394.0], [99.4, 16430.0], [99.5, 16509.0], [99.6, 16578.0], [99.7, 16756.0], [99.8, 16966.0], [99.9, 17358.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 668.0, "series": [{"data": [[0.0, 668.0], [100.0, 50.0], [200.0, 12.0], [300.0, 7.0], [400.0, 16.0], [500.0, 12.0], [600.0, 14.0], [700.0, 18.0], [800.0, 17.0], [900.0, 17.0], [1000.0, 20.0], [1100.0, 15.0], [1200.0, 21.0], [1300.0, 13.0], [1400.0, 15.0], [1500.0, 14.0], [1600.0, 17.0], [1700.0, 26.0], [1800.0, 12.0], [1900.0, 19.0], [2000.0, 21.0], [2100.0, 21.0], [2300.0, 22.0], [2200.0, 23.0], [2400.0, 16.0], [2500.0, 19.0], [2600.0, 25.0], [2700.0, 19.0], [2800.0, 15.0], [2900.0, 16.0], [3000.0, 23.0], [3100.0, 19.0], [3200.0, 25.0], [3300.0, 20.0], [3400.0, 16.0], [3500.0, 24.0], [3600.0, 9.0], [3700.0, 14.0], [3800.0, 19.0], [3900.0, 19.0], [4000.0, 20.0], [4100.0, 17.0], [4200.0, 16.0], [4300.0, 19.0], [4600.0, 25.0], [4400.0, 23.0], [4500.0, 22.0], [4800.0, 25.0], [4700.0, 17.0], [5000.0, 24.0], [5100.0, 17.0], [4900.0, 18.0], [5300.0, 22.0], [5200.0, 18.0], [5400.0, 29.0], [5500.0, 25.0], [5600.0, 23.0], [5700.0, 22.0], [5800.0, 12.0], [5900.0, 21.0], [6000.0, 32.0], [6100.0, 22.0], [6300.0, 17.0], [6200.0, 19.0], [6400.0, 26.0], [6500.0, 17.0], [6600.0, 17.0], [6700.0, 24.0], [6900.0, 28.0], [6800.0, 24.0], [7100.0, 26.0], [7000.0, 21.0], [7200.0, 24.0], [7400.0, 35.0], [7300.0, 30.0], [7500.0, 15.0], [7600.0, 26.0], [7700.0, 37.0], [7900.0, 23.0], [7800.0, 22.0], [8000.0, 23.0], [8100.0, 20.0], [8300.0, 25.0], [8400.0, 19.0], [8500.0, 21.0], [8200.0, 27.0], [8600.0, 19.0], [8700.0, 30.0], [9000.0, 18.0], [8900.0, 19.0], [8800.0, 17.0], [9200.0, 25.0], [9100.0, 26.0], [9700.0, 22.0], [9600.0, 29.0], [9400.0, 16.0], [9500.0, 30.0], [9300.0, 14.0], [9900.0, 20.0], [10100.0, 20.0], [9800.0, 26.0], [10000.0, 21.0], [10200.0, 22.0], [10400.0, 30.0], [10700.0, 25.0], [10500.0, 20.0], [10600.0, 25.0], [10300.0, 20.0], [10900.0, 31.0], [11200.0, 22.0], [10800.0, 21.0], [11100.0, 35.0], [11000.0, 21.0], [11500.0, 38.0], [11400.0, 27.0], [11300.0, 31.0], [11700.0, 22.0], [11600.0, 27.0], [12200.0, 23.0], [11900.0, 17.0], [12100.0, 23.0], [12000.0, 20.0], [11800.0, 18.0], [12700.0, 19.0], [12600.0, 21.0], [12300.0, 19.0], [12400.0, 23.0], [12500.0, 22.0], [12800.0, 22.0], [13100.0, 20.0], [12900.0, 17.0], [13000.0, 16.0], [13200.0, 21.0], [13300.0, 13.0], [13800.0, 20.0], [13600.0, 20.0], [13400.0, 20.0], [13500.0, 18.0], [13700.0, 15.0], [14000.0, 13.0], [13900.0, 15.0], [14100.0, 28.0], [14300.0, 22.0], [14200.0, 14.0], [14500.0, 24.0], [14400.0, 23.0], [14800.0, 20.0], [14600.0, 22.0], [14700.0, 24.0], [15300.0, 24.0], [15000.0, 22.0], [14900.0, 23.0], [15100.0, 17.0], [15200.0, 14.0], [15600.0, 27.0], [15400.0, 19.0], [15500.0, 33.0], [15700.0, 19.0], [15800.0, 7.0], [16300.0, 10.0], [15900.0, 13.0], [16000.0, 10.0], [16100.0, 4.0], [16200.0, 2.0], [16500.0, 6.0], [17300.0, 2.0], [16400.0, 6.0], [16800.0, 3.0], [17000.0, 2.0], [16700.0, 2.0], [16900.0, 1.0], [17200.0, 1.0], [16600.0, 1.0], [17600.0, 1.0], [17500.0, 1.0], [18600.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 18600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 162.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 3160.0, "series": [{"data": [[0.0, 753.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 162.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 3160.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 7.047468354430379, "minX": 1.699972137E12, "maxY": 2434.373333333333, "series": [{"data": [[1.699972142E12, 1557.797297297297], [1.699972143E12, 1894.9699248120296], [1.699972144E12, 2282.620000000001], [1.699972139E12, 499.19841269841277], [1.69997214E12, 852.3214285714287], [1.699972141E12, 1195.0519480519483], [1.699972147E12, 2141.5897435897436], [1.699972148E12, 1976.0685714285726], [1.699972149E12, 1802.656976744186], [1.699972145E12, 2434.373333333333], [1.699972146E12, 2290.556338028169], [1.699972153E12, 1178.1030303030304], [1.699972154E12, 1005.5944444444439], [1.69997215E12, 1639.6428571428576], [1.699972151E12, 1487.5733333333328], [1.699972152E12, 1336.5592105263158], [1.699972158E12, 419.0851063829787], [1.699972137E12, 7.047468354430379], [1.699972138E12, 28.87657430730478], [1.699972159E12, 269.59493670886087], [1.69997216E12, 95.70526315789469], [1.699972155E12, 841.1208053691278], [1.699972156E12, 690.6381578947369], [1.699972157E12, 552.0880000000002]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.69997216E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 8.666666666666666, "minX": 1.0, "maxY": 17374.0, "series": [{"data": [[2.0, 8.666666666666666], [3.0, 8.924050632911392], [4.0, 433.972972972973], [5.0, 141.92307692307693], [6.0, 9.782178217821777], [7.0, 513.7619047619048], [8.0, 775.0], [9.0, 11.0], [10.0, 2524.3846153846152], [11.0, 1878.7000000000003], [12.0, 2624.166666666667], [13.0, 41.5], [14.0, 7854.0], [15.0, 7887.0], [16.0, 15969.5], [17.0, 2699.1666666666665], [18.0, 3943.5], [20.0, 4172.5], [21.0, 4049.0], [22.0, 6523.2], [23.0, 19.0], [24.0, 4595.714285714286], [25.0, 3929.75], [26.0, 3226.6], [27.0, 16111.0], [28.0, 3315.2], [29.0, 2420.857142857143], [30.0, 4099.5], [31.0, 4091.0], [33.0, 5511.333333333333], [32.0, 35.0], [35.0, 3152.4], [34.0, 3209.2], [37.0, 5379.333333333333], [36.0, 4048.75], [38.0, 2386.4285714285716], [41.0, 17208.0], [40.0, 15675.0], [43.0, 15606.0], [42.0, 16430.0], [44.0, 15932.0], [46.0, 15892.5], [48.0, 10555.333333333334], [49.0, 7842.5], [51.0, 7833.0], [50.0, 7842.5], [53.0, 8244.5], [52.0, 73.5], [55.0, 7820.0], [54.0, 16527.0], [57.0, 15559.0], [56.0, 16025.0], [59.0, 15721.0], [58.0, 15627.0], [61.0, 16496.0], [63.0, 7891.5], [62.0, 3958.0], [67.0, 7823.5], [66.0, 7868.5], [65.0, 15674.0], [70.0, 113.0], [71.0, 10362.333333333334], [68.0, 8017.5], [69.0, 15737.0], [73.0, 7788.25], [75.0, 3944.75], [74.0, 4175.75], [72.0, 68.66666666666667], [77.0, 2071.625], [76.0, 3221.6], [78.0, 7824.5], [79.0, 15521.0], [81.0, 82.0], [83.0, 15439.0], [82.0, 15530.0], [87.0, 5195.333333333333], [86.0, 15916.0], [85.0, 15511.0], [84.0, 15522.0], [91.0, 7734.0], [90.0, 7967.5], [89.0, 7825.0], [88.0, 5738.666666666667], [94.0, 7953.0], [93.0, 5934.333333333333], [92.0, 8002.5], [95.0, 15710.0], [99.0, 3368.0], [98.0, 7857.25], [96.0, 15620.0], [100.0, 5684.0], [103.0, 15324.0], [102.0, 15600.0], [101.0, 15789.0], [107.0, 15661.0], [106.0, 16574.5], [104.0, 16418.0], [110.0, 15322.0], [109.0, 16732.0], [115.0, 15615.0], [114.0, 15630.0], [113.0, 15597.0], [112.0, 15786.0], [119.0, 16056.0], [118.0, 15275.0], [117.0, 17085.0], [116.0, 15769.0], [123.0, 15366.0], [122.0, 15642.0], [121.0, 15334.0], [120.0, 17374.0], [127.0, 15314.0], [126.0, 15239.0], [125.0, 16455.0], [124.0, 15551.0], [135.0, 15447.0], [134.0, 15469.0], [133.0, 15379.0], [132.0, 15711.5], [130.0, 15284.0], [129.0, 15464.0], [128.0, 15506.0], [143.0, 15476.0], [142.0, 15151.0], [141.0, 15311.0], [139.0, 15304.0], [138.0, 15323.5], [136.0, 15574.0], [151.0, 15246.0], [149.0, 15599.0], [148.0, 16131.0], [147.0, 15590.0], [146.0, 15839.5], [144.0, 15538.0], [154.0, 7608.5], [159.0, 7801.0], [158.0, 5586.333333333333], [157.0, 15001.0], [156.0, 15555.0], [155.0, 15705.0], [153.0, 15119.0], [152.0, 15069.0], [165.0, 2659.333333333333], [167.0, 15335.0], [166.0, 15530.0], [164.0, 15266.0], [163.0, 15064.0], [162.0, 15224.0], [161.0, 15129.5], [175.0, 15639.0], [174.0, 15197.0], [173.0, 16142.0], [171.0, 15936.0], [170.0, 15123.0], [169.0, 15320.0], [168.0, 15659.0], [183.0, 15040.0], [182.0, 15012.0], [181.0, 15262.0], [180.0, 15033.0], [179.0, 15588.0], [178.0, 14919.0], [177.0, 15093.0], [176.0, 15605.0], [191.0, 14894.0], [190.0, 15160.0], [188.0, 14942.0], [187.0, 15025.0], [186.0, 15057.0], [185.0, 15434.0], [184.0, 15030.0], [199.0, 14997.0], [198.0, 16473.0], [196.0, 14866.0], [195.0, 14855.0], [194.0, 14869.5], [192.0, 15170.0], [207.0, 15176.0], [206.0, 14757.0], [205.0, 14951.0], [204.0, 15102.5], [202.0, 15293.0], [201.0, 14838.0], [200.0, 15254.0], [215.0, 15155.0], [214.0, 15476.0], [213.0, 14742.0], [212.0, 14867.0], [211.0, 15018.0], [210.0, 15979.0], [209.0, 14997.0], [208.0, 16578.0], [221.0, 88.0], [220.0, 5358.0], [223.0, 5244.0], [222.0, 15004.5], [219.0, 14869.0], [218.0, 14700.5], [216.0, 14701.0], [226.0, 4064.5], [225.0, 4194.5], [224.0, 4060.5], [227.0, 246.0], [231.0, 15728.0], [230.0, 15396.0], [229.0, 14755.0], [228.0, 14972.5], [232.0, 7446.5], [239.0, 16354.0], [238.0, 14846.0], [237.0, 15098.0], [236.0, 14667.0], [235.0, 14818.0], [234.0, 15124.0], [233.0, 14964.0], [247.0, 14828.0], [246.0, 15539.0], [245.0, 14624.0], [244.0, 14626.0], [243.0, 14707.0], [242.0, 15211.0], [241.0, 14956.0], [240.0, 16385.0], [248.0, 53.0], [255.0, 15001.0], [254.0, 14797.0], [253.0, 14718.0], [252.0, 14691.0], [251.0, 14846.0], [250.0, 14730.0], [249.0, 14814.0], [269.0, 14497.0], [271.0, 14497.5], [268.0, 14489.0], [259.0, 14646.0], [258.0, 14636.0], [256.0, 14990.0], [267.0, 14695.0], [266.0, 14614.0], [265.0, 14545.0], [264.0, 15218.0], [263.0, 15902.0], [262.0, 14642.0], [261.0, 14652.0], [260.0, 15337.0], [285.0, 14441.0], [287.0, 14778.0], [284.0, 14835.0], [275.0, 15308.0], [274.0, 14537.0], [273.0, 15101.0], [272.0, 16443.0], [283.0, 16350.0], [282.0, 14525.0], [281.0, 14747.0], [280.0, 15319.0], [279.0, 15132.0], [278.0, 15442.0], [277.0, 14510.0], [276.0, 14513.0], [302.0, 3809.0], [303.0, 3750.5], [301.0, 14960.5], [291.0, 14796.0], [290.0, 14602.0], [289.0, 14522.0], [288.0, 14640.0], [299.0, 14391.0], [298.0, 15072.0], [297.0, 15592.0], [296.0, 14955.0], [295.0, 14453.0], [294.0, 14671.0], [293.0, 15015.0], [292.0, 14456.0], [318.0, 14324.0], [305.0, 3911.75], [306.0, 5067.666666666667], [307.0, 15306.0], [304.0, 5178.0], [311.0, 15189.0], [310.0, 15444.0], [309.0, 14690.0], [308.0, 14890.0], [319.0, 15782.0], [313.0, 14680.0], [312.0, 14410.0], [317.0, 14345.0], [316.0, 14940.0], [315.0, 14903.0], [314.0, 14494.0], [334.0, 15609.0], [335.0, 14288.0], [333.0, 14493.0], [332.0, 14477.5], [330.0, 14349.0], [329.0, 15092.0], [328.0, 14309.5], [326.0, 14592.0], [321.0, 14711.0], [323.0, 14571.0], [322.0, 14548.0], [325.0, 15464.0], [324.0, 14323.0], [350.0, 14798.0], [351.0, 14360.0], [349.0, 14341.0], [348.0, 14427.0], [347.0, 14175.0], [346.0, 14791.0], [345.0, 14595.0], [344.0, 14213.0], [343.0, 14473.0], [336.0, 14813.0], [338.0, 14725.0], [337.0, 14391.0], [342.0, 14476.0], [341.0, 14402.0], [340.0, 14477.0], [365.0, 14101.0], [366.0, 14890.0], [364.0, 14103.0], [355.0, 14978.0], [354.0, 14570.0], [353.0, 15548.0], [352.0, 14355.0], [363.0, 14107.0], [362.0, 14139.0], [361.0, 14141.0], [360.0, 15300.0], [359.0, 14352.0], [358.0, 14378.0], [356.0, 14131.0], [381.0, 14227.0], [382.0, 14958.0], [380.0, 14087.0], [371.0, 14091.0], [370.0, 14226.0], [369.0, 14149.0], [368.0, 14336.5], [379.0, 14073.0], [378.0, 14411.0], [377.0, 14164.0], [376.0, 14176.5], [374.0, 14492.0], [373.0, 14102.0], [372.0, 14203.0], [398.0, 14285.0], [396.0, 14225.0], [386.0, 14468.0], [385.0, 14188.5], [384.0, 14983.0], [395.0, 14690.0], [394.0, 14100.0], [393.0, 13931.0], [392.0, 14597.0], [391.0, 13962.0], [390.0, 14903.0], [389.0, 14103.0], [388.0, 13987.5], [414.0, 13908.0], [408.0, 4868.333333333333], [410.0, 3926.75], [412.0, 4834.333333333333], [415.0, 14240.0], [413.0, 14183.0], [411.0, 14352.0], [409.0, 13860.0], [407.0, 15129.0], [400.0, 14318.5], [402.0, 13857.0], [401.0, 14954.0], [406.0, 13853.0], [405.0, 14292.0], [404.0, 14441.5], [428.0, 7143.0], [424.0, 4962.0], [423.0, 7695.5], [416.0, 13822.0], [418.0, 13776.0], [417.0, 14259.0], [422.0, 13810.0], [421.0, 14120.0], [420.0, 14051.0], [426.0, 7597.0], [430.0, 7361.0], [431.0, 14432.0], [429.0, 13765.0], [427.0, 13958.0], [425.0, 15572.0], [447.0, 13672.0], [435.0, 7117.5], [439.0, 13751.0], [432.0, 13757.0], [434.0, 15312.0], [433.0, 13766.0], [438.0, 13754.0], [437.0, 14647.0], [436.0, 14532.0], [446.0, 7922.5], [445.0, 3830.75], [444.0, 13715.0], [443.0, 14143.0], [442.0, 14988.0], [441.0, 13773.0], [440.0, 14562.0], [462.0, 14275.0], [448.0, 4982.0], [449.0, 14711.0], [455.0, 13616.0], [454.0, 13687.0], [453.0, 13665.0], [452.0, 14313.0], [450.0, 7186.5], [463.0, 13890.0], [461.0, 14014.0], [460.0, 13859.0], [451.0, 14141.0], [459.0, 13851.0], [458.0, 14033.0], [457.0, 13638.0], [477.0, 13694.0], [466.0, 7399.5], [467.0, 7545.0], [469.0, 7371.0], [468.0, 13895.0], [471.0, 3161.0], [465.0, 14891.0], [464.0, 14937.0], [470.0, 14028.0], [472.0, 7185.0], [473.0, 13915.0], [475.0, 13505.0], [474.0, 13489.0], [479.0, 13478.0], [478.0, 13496.0], [476.0, 13485.0], [494.0, 13535.0], [483.0, 7073.0], [482.0, 6960.5], [485.0, 3772.5], [484.0, 13637.0], [487.0, 7168.5], [481.0, 13440.0], [480.0, 13857.0], [489.0, 4916.0], [491.0, 15615.0], [490.0, 13425.0], [488.0, 7230.5], [495.0, 13359.0], [493.0, 13410.0], [492.0, 13744.0], [510.0, 13255.0], [503.0, 7570.0], [496.0, 13355.0], [499.0, 14381.0], [498.0, 13725.5], [502.0, 13466.0], [500.0, 14441.0], [511.0, 13506.0], [509.0, 14953.0], [508.0, 13635.0], [507.0, 14094.0], [506.0, 13802.0], [505.0, 13256.0], [504.0, 14394.0], [512.0, 7115.5], [514.0, 7302.0], [518.0, 14190.0], [516.0, 13399.0], [520.0, 687.6666666666666], [522.0, 14196.0], [526.0, 14344.0], [524.0, 13428.0], [530.0, 7392.5], [540.0, 13290.0], [538.0, 13530.5], [536.0, 13928.0], [534.0, 13366.0], [528.0, 13674.0], [572.0, 13154.0], [552.0, 6888.0], [556.0, 6858.5], [554.0, 6860.0], [560.0, 7031.5], [564.0, 6890.0], [562.0, 13118.0], [574.0, 12923.0], [568.0, 12984.0], [550.0, 13243.0], [548.0, 13601.0], [546.0, 14382.0], [544.0, 13455.0], [558.0, 13087.0], [566.0, 13928.0], [602.0, 12759.0], [578.0, 7297.0], [590.0, 14312.0], [588.0, 13560.0], [584.0, 6904.0], [586.0, 7031.5], [596.0, 7406.0], [598.0, 7011.0], [604.0, 13162.0], [600.0, 14201.0], [582.0, 13135.0], [580.0, 13149.0], [594.0, 12857.0], [592.0, 13138.0], [638.0, 4892.333333333334], [622.0, 4947.0], [620.0, 7155.5], [618.0, 12709.0], [616.0, 12970.0], [630.0, 1057.0], [636.0, 12693.0], [632.0, 12617.0], [614.0, 12779.0], [612.0, 13168.0], [610.0, 12934.0], [628.0, 12820.0], [626.0, 13543.0], [624.0, 12859.0], [668.0, 6786.5], [652.0, 8637.0], [650.0, 12646.0], [648.0, 12697.0], [654.0, 13118.0], [642.0, 12611.0], [646.0, 12570.0], [644.0, 12863.0], [670.0, 12986.0], [666.0, 13088.0], [664.0, 12656.5], [662.0, 12463.0], [660.0, 12867.0], [658.0, 12783.0], [656.0, 12531.0], [702.0, 12508.0], [692.0, 6768.75], [690.0, 5122.666666666666], [694.0, 4891.0], [700.0, 12408.5], [698.0, 12308.0], [696.0, 12508.0], [674.0, 12803.0], [672.0, 12836.0], [688.0, 12762.0], [686.0, 12794.0], [684.0, 13371.0], [682.0, 12478.0], [680.0, 12428.0], [730.0, 8678.333333333334], [714.0, 3408.6], [712.0, 4842.333333333334], [716.0, 7075.5], [734.0, 12302.0], [732.0, 12309.0], [728.0, 12191.0], [710.0, 14484.0], [708.0, 12270.0], [706.0, 12548.0], [704.0, 12548.5], [718.0, 12803.0], [724.0, 13058.0], [722.0, 12204.0], [720.0, 13442.0], [764.0, 12429.0], [742.0, 6573.0], [748.0, 6639.5], [744.0, 12178.0], [750.0, 12306.0], [740.0, 12135.0], [738.0, 12191.0], [756.0, 6964.5], [758.0, 8457.0], [766.0, 12604.0], [762.0, 12134.0], [760.0, 12067.0], [754.0, 12074.0], [752.0, 12371.0], [794.0, 11874.0], [772.0, 6632.0], [774.0, 4901.666666666666], [778.0, 6875.0], [776.0, 12961.0], [790.0, 6568.0], [788.0, 11876.0], [786.0, 12178.0], [784.0, 11933.0], [782.0, 12062.0], [770.0, 12198.0], [768.0, 12242.5], [780.0, 12885.0], [804.0, 7144.0], [806.0, 6880.0], [810.0, 4793.0], [808.0, 11860.5], [814.0, 6484.5], [802.0, 12660.0], [800.0, 12065.0], [812.0, 13550.0], [830.0, 12409.0], [828.0, 12053.0], [826.0, 12019.0], [824.0, 12080.0], [822.0, 11695.0], [820.0, 13134.5], [858.0, 6610.0], [836.0, 6428.5], [842.0, 3510.8], [840.0, 11678.0], [846.0, 12030.0], [834.0, 12637.0], [844.0, 12266.0], [862.0, 11665.0], [856.0, 11645.0], [838.0, 11780.0], [854.0, 11607.0], [852.0, 11810.0], [850.0, 11705.5], [848.0, 11716.0], [870.0, 4936.666666666666], [866.0, 1551.0], [868.0, 3734.6], [872.0, 1581.0], [874.0, 11638.0], [878.0, 11672.0], [864.0, 13487.0], [876.0, 11448.0], [894.0, 11488.0], [882.0, 11708.0], [880.0, 11493.0], [892.0, 11453.0], [890.0, 11826.5], [888.0, 11521.0], [886.0, 11860.0], [884.0, 11752.0], [924.0, 11304.0], [896.0, 6576.0], [910.0, 3455.8], [906.0, 11690.0], [904.0, 11510.0], [926.0, 1488.5], [922.0, 11673.0], [920.0, 11456.0], [902.0, 11450.0], [900.0, 11315.0], [898.0, 11543.0], [918.0, 11962.0], [914.0, 11580.0], [912.0, 11511.0], [952.0, 6403.0], [928.0, 6426.5], [930.0, 11873.0], [934.0, 11110.0], [932.0, 11600.0], [940.0, 6397.0], [938.0, 11343.0], [936.0, 11903.0], [942.0, 6671.0], [958.0, 11136.0], [946.0, 11386.0], [944.0, 11539.0], [956.0, 11218.0], [954.0, 11189.0], [950.0, 11323.0], [948.0, 11230.0], [988.0, 11064.0], [966.0, 1543.5], [964.0, 6333.0], [962.0, 11216.0], [960.0, 11511.0], [974.0, 11221.0], [972.0, 11155.0], [970.0, 11207.0], [968.0, 12470.0], [978.0, 4042.25], [980.0, 4999.0], [990.0, 12792.0], [976.0, 12247.0], [986.0, 11811.5], [984.0, 11079.0], [982.0, 11332.0], [1020.0, 11498.5], [994.0, 4973.333333333334], [992.0, 7393.0], [1006.0, 11255.0], [1004.0, 11300.0], [1002.0, 12750.0], [1000.0, 11414.0], [998.0, 4750.666666666666], [996.0, 11240.0], [1022.0, 11110.0], [1010.0, 12213.0], [1008.0, 11398.0], [1018.0, 10926.0], [1016.0, 11349.0], [1014.0, 11035.0], [1012.0, 11360.0], [1080.0, 6465.25], [1036.0, 6904.0], [1056.0, 4961.666666666666], [1032.0, 3798.4], [1028.0, 11218.0], [1024.0, 11071.5], [1060.0, 1778.0], [1068.0, 10973.0], [1064.0, 11057.0], [1084.0, 6347.0], [1076.0, 11118.0], [1072.0, 10781.0], [1048.0, 5190.666666666666], [1044.0, 10912.0], [1040.0, 11739.0], [1052.0, 6518.5], [1148.0, 10602.0], [1108.0, 6396.5], [1104.0, 6635.0], [1120.0, 4302.5], [1124.0, 10549.0], [1144.0, 10526.0], [1140.0, 10717.5], [1136.0, 10485.0], [1096.0, 10988.0], [1092.0, 11105.0], [1088.0, 10728.0], [1116.0, 11039.0], [1112.0, 10617.0], [1132.0, 11298.0], [1128.0, 10656.0], [1200.0, 7794.333333333333], [1160.0, 4255.25], [1164.0, 10472.0], [1176.0, 10549.5], [1180.0, 10412.5], [1156.0, 10469.0], [1152.0, 10710.0], [1204.0, 10465.0], [1208.0, 10253.0], [1196.0, 4864.0], [1184.0, 10485.0], [1188.0, 10480.0], [1192.0, 10356.0], [1168.0, 6658.0], [1172.0, 2149.0], [1272.0, 10421.0], [1264.0, 6209.5], [1276.0, 2493.0], [1224.0, 5977.333333333334], [1220.0, 3628.833333333333], [1216.0, 10411.0], [1268.0, 10400.0], [1260.0, 6069.5], [1248.0, 5157.666666666666], [1252.0, 10076.0], [1228.0, 10621.0], [1232.0, 5217.333333333334], [1236.0, 10119.0], [1240.0, 10805.0], [1244.0, 10079.0], [1284.0, 10455.0], [1332.0, 6383.5], [1288.0, 6585.0], [1292.0, 10395.0], [1304.0, 11175.0], [1300.0, 11522.0], [1296.0, 10181.5], [1280.0, 10277.0], [1308.0, 9814.0], [1336.0, 6163.0], [1316.0, 11212.0], [1312.0, 10151.0], [1340.0, 9617.0], [1328.0, 5983.5], [1324.0, 6035.0], [1356.0, 9761.0], [1352.0, 5940.5], [1344.0, 9683.0], [1348.0, 10089.0], [1392.0, 9613.5], [1376.0, 9531.0], [1404.0, 9918.0], [1400.0, 10216.0], [1396.0, 10720.0], [1380.0, 5404.666666666666], [1388.0, 9676.0], [1384.0, 9899.0], [1364.0, 9816.0], [1360.0, 10060.5], [1368.0, 10391.0], [1372.0, 9834.0], [1412.0, 9943.0], [1464.0, 9331.0], [1456.0, 9193.0], [1460.0, 9345.0], [1428.0, 5906.0], [1424.0, 10934.0], [1432.0, 9217.0], [1408.0, 9461.0], [1436.0, 9222.0], [1468.0, 2626.0], [1448.0, 5851.5], [1452.0, 9598.0], [1440.0, 10022.0], [1444.0, 9171.0], [1476.0, 8979.0], [1524.0, 8883.0], [1532.0, 10108.0], [1480.0, 3058.0], [1472.0, 10141.0], [1500.0, 9264.0], [1496.0, 9260.0], [1492.0, 9278.5], [1488.0, 9002.0], [1484.0, 9284.0], [1520.0, 9430.0], [1528.0, 8771.0], [1504.0, 6098.0], [1508.0, 6299.5], [1516.0, 9261.0], [1512.0, 4415.4], [1584.0, 5808.0], [1588.0, 8612.0], [1540.0, 6173.5], [1560.0, 5798.5], [1536.0, 10212.0], [1564.0, 8773.0], [1544.0, 4714.666666666667], [1548.0, 8915.0], [1592.0, 6252.0], [1568.0, 5693.5], [1572.0, 9120.0], [1576.0, 9247.0], [1580.0, 9165.0], [1596.0, 8515.0], [1552.0, 5844.5], [1556.0, 10404.0], [1656.0, 6233.5], [1604.0, 5763.5], [1612.0, 9303.0], [1608.0, 8541.0], [1616.0, 4871.0], [1632.0, 8914.0], [1660.0, 9142.0], [1652.0, 5745.0], [1648.0, 8785.0], [1644.0, 7254.5], [1640.0, 8284.0], [1636.0, 4876.333333333333], [1620.0, 6983.0], [1624.0, 8703.0], [1628.0, 8366.5], [1676.0, 9058.0], [1668.0, 5674.5], [1664.0, 3391.5], [1672.0, 5684.5], [1696.0, 3479.5], [1724.0, 8122.0], [1720.0, 4285.0], [1716.0, 5658.5], [1712.0, 9137.0], [1708.0, 8129.5], [1704.0, 8129.0], [1700.0, 8978.0], [1680.0, 5706.5], [1684.0, 8758.0], [1688.0, 8220.0], [1692.0, 8025.0], [1728.0, 8513.5], [1776.0, 5600.0], [1788.0, 5454.0], [1732.0, 4710.5], [1756.0, 7768.0], [1752.0, 7754.0], [1748.0, 8105.0], [1744.0, 7994.0], [1736.0, 7838.0], [1764.0, 3133.0], [1772.0, 3603.5], [1760.0, 8705.0], [1784.0, 5988.0], [1780.0, 7867.0], [1740.0, 7838.5], [1792.0, 7616.0], [1800.0, 7748.0], [1796.0, 8157.0], [1804.0, 7927.0], [1840.0, 7457.0], [1808.0, 4597.5], [1812.0, 7600.0], [1816.0, 7808.0], [1820.0, 7587.0], [1848.0, 3531.0], [1828.0, 7493.0], [1824.0, 7820.0], [1832.0, 7533.0], [1852.0, 7419.0], [1844.0, 7566.0], [1836.0, 5064.666666666667], [1916.0, 5681.5], [1864.0, 5548.5], [1856.0, 7684.0], [1884.0, 8305.0], [1880.0, 7730.0], [1872.0, 7443.0], [1900.0, 7373.0], [1912.0, 7461.0], [1888.0, 7311.0], [1892.0, 7332.0], [1896.0, 7879.0], [1904.0, 4985.0], [1868.0, 7658.0], [1908.0, 7243.0], [1924.0, 5380.0], [1976.0, 7039.0], [1920.0, 7533.0], [1928.0, 5670.0], [1932.0, 7322.0], [1944.0, 7297.0], [1940.0, 7096.0], [1936.0, 7461.0], [1948.0, 7167.0], [1952.0, 7525.0], [1956.0, 7186.0], [1960.0, 7324.0], [1964.0, 6944.0], [1980.0, 8075.0], [1972.0, 7472.0], [1968.0, 7550.0], [2040.0, 7664.0], [2016.0, 7075.0], [2020.0, 6787.0], [2024.0, 7282.0], [2044.0, 7091.0], [2036.0, 6752.0], [2032.0, 6880.0], [1984.0, 6890.0], [1988.0, 6902.5], [1996.0, 6870.0], [2012.0, 6882.0], [2008.0, 7014.0], [2004.0, 7374.0], [2000.0, 7217.0], [2028.0, 6848.0], [2048.0, 5433.0], [2072.0, 6540.0], [2104.0, 6443.0], [2096.0, 5605.0], [2080.0, 5611.0], [2088.0, 8376.0], [2056.0, 7136.0], [2064.0, 4724.333333333333], [2128.0, 5539.0], [2112.0, 6918.0], [2120.0, 6856.0], [2168.0, 6999.0], [2160.0, 6146.0], [2152.0, 7137.0], [2144.0, 6240.0], [2136.0, 6266.0], [2200.0, 6790.0], [2280.0, 4574.5], [2176.0, 4818.0], [2184.0, 5304.0], [2192.0, 6068.0], [2272.0, 5639.0], [2240.0, 5043.5], [2296.0, 5823.0], [2288.0, 5640.0], [2256.0, 5042.333333333333], [2248.0, 5817.0], [2264.0, 6678.0], [2224.0, 6008.0], [2216.0, 6915.0], [2208.0, 6238.0], [2232.0, 6032.0], [2408.0, 5328.0], [2304.0, 5017.666666666667], [2312.0, 5230.0], [2400.0, 5024.0], [2368.0, 5249.0], [2376.0, 5309.0], [2424.0, 4931.0], [2416.0, 5038.0], [2384.0, 5664.5], [2392.0, 5347.0], [2328.0, 5321.0], [2336.0, 6159.0], [2360.0, 4943.0], [2352.0, 5440.0], [2344.0, 7252.0], [2432.0, 4694.0], [2440.0, 5172.0], [2464.0, 5110.0], [2472.0, 5960.0], [2480.0, 4720.0], [2496.0, 4800.5], [2456.0, 4843.0], [2448.0, 4829.0], [2488.0, 4794.5], [2161.0, 8099.0], [2049.0, 5361.0], [2057.0, 6606.0], [2065.0, 5003.0], [2169.0, 7292.0], [2153.0, 5462.5], [2145.0, 5395.0], [2129.0, 6575.0], [2121.0, 7364.0], [2137.0, 7151.0], [2097.0, 6380.0], [2089.0, 6542.0], [2081.0, 8467.0], [2105.0, 5582.5], [2185.0, 6331.0], [2281.0, 4982.75], [2201.0, 5996.0], [2289.0, 5067.0], [2297.0, 6275.0], [2177.0, 6407.0], [2193.0, 6420.0], [2233.0, 5817.0], [2225.0, 6165.0], [2209.0, 6040.0], [2241.0, 5771.0], [2249.0, 5816.0], [2257.0, 5700.0], [2265.0, 6181.0], [2329.0, 4649.333333333333], [2305.0, 5044.0], [2313.0, 4916.5], [2321.0, 5596.0], [2401.0, 6175.0], [2409.0, 5776.0], [2417.0, 5551.0], [2425.0, 5195.0], [2369.0, 5138.5], [2377.0, 5498.0], [2385.0, 4819.285714285714], [2393.0, 5466.0], [2337.0, 5895.0], [2345.0, 5504.0], [2353.0, 5954.0], [2361.0, 5234.0], [2433.0, 4641.666666666667], [2441.0, 5099.0], [2489.0, 4994.0], [2449.0, 5034.0], [2457.0, 5522.0], [2497.0, 5359.0], [2465.0, 5152.0], [2473.0, 4687.0], [1081.0, 5689.333333333334], [1037.0, 6329.0], [1033.0, 6345.5], [1029.0, 11164.0], [1025.0, 11555.0], [1061.0, 8302.666666666666], [1065.0, 6940.0], [1069.0, 11126.0], [1085.0, 6820.5], [1057.0, 11163.0], [1077.0, 6509.5], [1073.0, 10777.0], [1049.0, 5272.666666666666], [1045.0, 10881.0], [1041.0, 11169.0], [1053.0, 10995.0], [1149.0, 11020.0], [1105.0, 6396.0], [1113.0, 10915.0], [1109.0, 11076.0], [1121.0, 3795.4], [1145.0, 10521.0], [1141.0, 10650.0], [1137.0, 11118.0], [1101.0, 11709.0], [1097.0, 11414.0], [1093.0, 10676.0], [1089.0, 11359.0], [1117.0, 10708.0], [1133.0, 11179.0], [1129.0, 10609.0], [1125.0, 10571.0], [1165.0, 10888.0], [1161.0, 4934.666666666666], [1173.0, 7858.0], [1157.0, 10572.0], [1181.0, 10937.0], [1153.0, 11498.0], [1201.0, 2306.0], [1205.0, 12278.0], [1185.0, 6714.0], [1213.0, 10406.5], [1209.0, 10671.0], [1189.0, 6317.5], [1197.0, 6428.5], [1169.0, 11339.0], [1277.0, 11071.0], [1217.0, 6242.5], [1225.0, 10783.0], [1221.0, 10317.0], [1249.0, 4713.75], [1273.0, 9933.0], [1265.0, 10013.0], [1261.0, 10492.0], [1257.0, 10566.5], [1253.0, 11154.0], [1229.0, 6719.0], [1245.0, 10381.0], [1241.0, 10646.0], [1237.0, 11011.0], [1233.0, 10694.0], [1285.0, 10189.0], [1289.0, 6839.0], [1305.0, 11222.0], [1301.0, 9884.0], [1297.0, 9879.0], [1281.0, 9926.0], [1309.0, 9953.0], [1317.0, 10730.0], [1313.0, 10148.0], [1321.0, 9775.0], [1325.0, 9747.0], [1329.0, 3800.2], [1293.0, 11451.0], [1341.0, 9613.0], [1337.0, 9721.0], [1333.0, 10487.0], [1357.0, 9543.0], [1353.0, 5439.333333333334], [1345.0, 9569.0], [1349.0, 9646.0], [1373.0, 9505.0], [1393.0, 9543.0], [1397.0, 9549.0], [1401.0, 10296.0], [1405.0, 9640.0], [1385.0, 6573.5], [1389.0, 9414.0], [1377.0, 9536.0], [1381.0, 10291.0], [1365.0, 9525.0], [1361.0, 10122.0], [1369.0, 5937.0], [1409.0, 9366.0], [1469.0, 9194.5], [1417.0, 5324.0], [1421.0, 9295.0], [1457.0, 9915.0], [1461.0, 9889.0], [1429.0, 5935.5], [1425.0, 9508.0], [1433.0, 9980.0], [1413.0, 10164.0], [1437.0, 10253.0], [1441.0, 2987.0], [1445.0, 9293.0], [1449.0, 4324.8], [1453.0, 9119.0], [1477.0, 9434.0], [1481.0, 6188.25], [1473.0, 9941.0], [1501.0, 9153.0], [1497.0, 8932.0], [1493.0, 9113.0], [1489.0, 9906.0], [1485.0, 5493.0], [1521.0, 9791.0], [1525.0, 8786.0], [1529.0, 9392.0], [1517.0, 9534.0], [1513.0, 3981.833333333333], [1509.0, 8943.0], [1505.0, 8878.0], [1533.0, 9626.0], [1541.0, 8725.0], [1537.0, 6696.5], [1545.0, 8734.0], [1565.0, 9314.0], [1561.0, 8638.0], [1557.0, 3278.0], [1549.0, 8776.0], [1585.0, 8590.0], [1589.0, 9080.0], [1593.0, 8868.0], [1573.0, 9866.0], [1569.0, 8871.0], [1597.0, 8733.0], [1577.0, 5652.0], [1613.0, 6307.5], [1605.0, 4751.333333333333], [1601.0, 9424.0], [1609.0, 8538.0], [1649.0, 8386.0], [1653.0, 4789.0], [1637.0, 3423.6666666666665], [1633.0, 8386.0], [1641.0, 8396.0], [1661.0, 8542.0], [1657.0, 8473.0], [1617.0, 5907.0], [1621.0, 8368.0], [1629.0, 8535.0], [1721.0, 8554.0], [1665.0, 6524.0], [1669.0, 8492.0], [1717.0, 8095.0], [1697.0, 8215.5], [1725.0, 7973.0], [1705.0, 5677.0], [1701.0, 8048.0], [1709.0, 5162.666666666667], [1677.0, 3090.0], [1713.0, 7934.0], [1681.0, 5101.333333333333], [1685.0, 9555.0], [1689.0, 9867.0], [1693.0, 8033.0], [1741.0, 7875.0], [1733.0, 5797.0], [1729.0, 9249.0], [1737.0, 8798.0], [1777.0, 7964.0], [1781.0, 7655.0], [1785.0, 8441.0], [1773.0, 5891.75], [1769.0, 7875.5], [1765.0, 7706.0], [1761.0, 7886.0], [1789.0, 7827.0], [1745.0, 5609.0], [1749.0, 8324.0], [1753.0, 5146.333333333333], [1757.0, 5842.5], [1797.0, 7959.0], [1801.0, 8233.0], [1793.0, 8361.0], [1805.0, 7547.0], [1821.0, 7490.0], [1817.0, 8240.0], [1813.0, 7789.0], [1809.0, 7733.0], [1833.0, 4823.5], [1829.0, 7807.0], [1825.0, 7576.0], [1853.0, 7440.0], [1849.0, 7461.5], [1841.0, 7744.0], [1837.0, 7629.0], [1909.0, 5182.0], [1889.0, 5447.0], [1885.0, 5700.5], [1881.0, 7367.0], [1877.0, 7321.5], [1873.0, 7331.0], [1857.0, 7373.0], [1861.0, 7850.0], [1901.0, 7464.0], [1897.0, 7256.0], [1893.0, 7721.0], [1905.0, 5482.0], [1869.0, 7697.0], [1913.0, 7785.0], [1917.0, 7216.0], [1921.0, 7228.0], [1977.0, 7937.0], [1941.0, 7302.0], [1937.0, 7915.0], [1945.0, 7389.0], [1949.0, 7163.0], [1953.0, 7244.0], [1957.0, 7017.0], [1961.0, 8368.0], [1965.0, 6947.0], [1981.0, 6959.0], [1973.0, 7441.0], [1969.0, 7651.0], [1933.0, 7170.0], [1929.0, 7506.0], [1925.0, 7141.0], [2041.0, 6895.0], [2017.0, 6951.0], [2021.0, 6753.0], [2025.0, 6892.0], [2045.0, 7186.0], [2037.0, 6722.0], [2033.0, 8237.0], [1985.0, 6908.0], [1989.0, 7287.0], [1993.0, 7496.0], [1997.0, 6868.0], [2005.0, 6979.0], [2001.0, 6914.0], [2029.0, 6879.0], [2050.0, 6261.5], [2058.0, 5665.0], [2106.0, 5184.5], [2090.0, 6474.0], [2082.0, 6527.0], [2098.0, 6813.0], [2066.0, 5103.333333333333], [2074.0, 7142.0], [2146.0, 6433.0], [2154.0, 6958.0], [2122.0, 5342.5], [2162.0, 5144.0], [2170.0, 5054.666666666667], [2114.0, 6636.5], [2138.0, 6719.0], [2290.0, 4892.5], [2202.0, 5995.0], [2274.0, 6049.5], [2178.0, 5030.0], [2194.0, 7218.0], [2298.0, 5497.0], [2282.0, 5210.0], [2242.0, 5768.0], [2250.0, 6073.0], [2258.0, 5579.5], [2266.0, 5769.0], [2218.0, 6635.0], [2226.0, 6105.0], [2234.0, 5410.0], [2402.0, 5538.0], [2306.0, 6205.0], [2322.0, 7407.0], [2330.0, 4976.333333333333], [2410.0, 6483.0], [2370.0, 5353.0], [2378.0, 5426.0], [2426.0, 5287.0], [2418.0, 6767.0], [2386.0, 5058.0], [2394.0, 5928.0], [2338.0, 4946.0], [2362.0, 4990.0], [2354.0, 6145.0], [2346.0, 5464.0], [2434.0, 5477.666666666667], [2442.0, 4721.0], [2466.0, 4749.0], [2474.0, 4685.0], [2482.0, 5033.5], [2458.0, 4938.0], [2450.0, 4911.0], [2490.0, 4843.0], [2155.0, 6258.0], [2147.0, 3955.0], [2059.0, 4830.333333333333], [2075.0, 5788.0], [2067.0, 7340.0], [2123.0, 5527.5], [2115.0, 6344.0], [2163.0, 6096.0], [2171.0, 6087.0], [2131.0, 5521.333333333333], [2139.0, 6972.0], [2091.0, 7048.0], [2083.0, 6991.0], [2099.0, 7509.0], [2107.0, 6476.0], [2195.0, 5842.5], [2203.0, 4376.333333333333], [2187.0, 6527.5], [2179.0, 6735.0], [2275.0, 6090.0], [2283.0, 5281.0], [2299.0, 5648.0], [2291.0, 6199.0], [2211.0, 6186.5], [2219.0, 5927.0], [2227.0, 5918.0], [2235.0, 6165.0], [2243.0, 5514.0], [2259.0, 5710.0], [2331.0, 6222.0], [2411.0, 5225.5], [2307.0, 5430.0], [2315.0, 5677.0], [2323.0, 5781.0], [2403.0, 5662.0], [2419.0, 5171.0], [2427.0, 5177.0], [2371.0, 5525.0], [2379.0, 5177.0], [2395.0, 5462.5], [2387.0, 5576.0], [2339.0, 5147.8], [2347.0, 4915.5], [2355.0, 5204.0], [2363.0, 5055.0], [2435.0, 4907.0], [2491.0, 5088.0], [2443.0, 5522.0], [2451.0, 5130.0], [2459.0, 4858.0], [2467.0, 5231.0], [2475.0, 4690.0], [2483.0, 4766.5], [541.0, 14681.0], [515.0, 6939.5], [513.0, 4944.0], [517.0, 7186.5], [521.0, 9141.666666666666], [525.0, 13267.0], [527.0, 13386.0], [529.0, 7238.5], [531.0, 7208.5], [535.0, 13677.0], [533.0, 13213.0], [543.0, 13149.5], [539.0, 13285.0], [519.0, 13173.0], [573.0, 7089.5], [547.0, 6986.5], [545.0, 6960.5], [559.0, 13261.0], [557.0, 13833.0], [571.0, 13165.0], [569.0, 13096.0], [551.0, 17358.0], [549.0, 13206.0], [575.0, 13093.0], [561.0, 13804.0], [553.0, 6941.5], [555.0, 4937.333333333334], [563.0, 7196.0], [567.0, 6895.5], [565.0, 13553.0], [605.0, 12769.0], [583.0, 3605.6], [601.0, 7374.0], [585.0, 3789.5], [587.0, 13256.0], [591.0, 12847.0], [577.0, 13133.0], [581.0, 13723.0], [579.0, 13572.0], [589.0, 13351.0], [593.0, 7667.0], [599.0, 7194.0], [607.0, 13921.5], [603.0, 12769.0], [597.0, 12854.0], [595.0, 13080.0], [611.0, 7199.0], [617.0, 6820.5], [619.0, 7027.0], [621.0, 956.0], [623.0, 13073.0], [609.0, 13110.5], [639.0, 12580.0], [627.0, 12845.0], [625.0, 13271.0], [637.0, 13343.0], [635.0, 12725.5], [633.0, 12639.0], [615.0, 12849.0], [613.0, 13771.0], [631.0, 12618.5], [629.0, 12846.0], [667.0, 4941.0], [653.0, 3714.0], [651.0, 983.0], [649.0, 14168.0], [655.0, 873.0], [641.0, 13207.0], [645.0, 12843.0], [643.0, 13431.0], [657.0, 6758.5], [671.0, 13217.0], [669.0, 12745.0], [665.0, 12452.0], [647.0, 12981.0], [661.0, 13193.0], [659.0, 12810.0], [701.0, 12336.0], [691.0, 1102.5], [689.0, 6994.0], [693.0, 8155.5], [697.0, 14194.0], [679.0, 12428.5], [677.0, 13158.0], [675.0, 12660.0], [673.0, 12411.0], [695.0, 14867.0], [687.0, 13197.0], [685.0, 12726.0], [683.0, 12682.0], [681.0, 13547.0], [735.0, 12450.0], [713.0, 4940.333333333334], [715.0, 12260.0], [711.0, 4237.5], [725.0, 6849.0], [731.0, 12191.0], [727.0, 12306.5], [723.0, 12351.0], [721.0, 12975.0], [719.0, 12280.0], [705.0, 12526.0], [709.0, 13716.0], [707.0, 13063.0], [717.0, 12500.0], [741.0, 3465.6], [743.0, 6773.5], [739.0, 6604.5], [737.0, 12305.5], [747.0, 6987.75], [745.0, 12149.0], [751.0, 12103.0], [753.0, 6988.5], [757.0, 1218.0], [763.0, 12574.0], [761.0, 12093.0], [755.0, 12192.0], [797.0, 8408.666666666666], [773.0, 4935.333333333334], [779.0, 7053.5], [777.0, 12331.0], [783.0, 12179.0], [771.0, 12511.0], [769.0, 12425.0], [781.0, 12314.0], [791.0, 6742.0], [793.0, 8798.0], [775.0, 13946.0], [799.0, 12188.0], [795.0, 11798.0], [789.0, 12006.0], [787.0, 12265.0], [785.0, 11942.0], [827.0, 11846.0], [831.0, 11610.0], [813.0, 6647.0], [811.0, 12678.0], [809.0, 11756.0], [817.0, 8610.0], [829.0, 13539.0], [825.0, 12385.0], [805.0, 14555.0], [803.0, 11799.0], [801.0, 11989.0], [821.0, 11696.0], [819.0, 11958.0], [815.0, 11914.0], [859.0, 6850.5], [843.0, 3586.4], [841.0, 11804.0], [845.0, 12245.0], [861.0, 8166.0], [863.0, 6444.0], [857.0, 11541.0], [839.0, 12641.0], [835.0, 11686.0], [833.0, 11625.0], [855.0, 11589.0], [853.0, 11674.0], [851.0, 12369.0], [847.0, 11712.0], [893.0, 11854.0], [865.0, 6605.0], [867.0, 9124.333333333334], [895.0, 11379.0], [891.0, 11552.0], [871.0, 11976.0], [869.0, 11922.0], [887.0, 11730.0], [885.0, 11513.0], [883.0, 11517.0], [879.0, 11558.0], [877.0, 14020.0], [875.0, 11601.0], [873.0, 11978.5], [925.0, 12533.0], [899.0, 6427.0], [901.0, 6944.0], [903.0, 12089.0], [911.0, 4865.666666666666], [897.0, 11789.0], [909.0, 8612.666666666666], [907.0, 11721.0], [905.0, 11309.0], [927.0, 11670.0], [915.0, 11629.0], [913.0, 11798.0], [923.0, 12168.0], [921.0, 11857.0], [919.0, 11276.0], [917.0, 11206.5], [959.0, 11137.0], [943.0, 4494.0], [941.0, 4147.75], [939.0, 11399.0], [937.0, 11523.0], [947.0, 6460.0], [945.0, 11490.0], [949.0, 4917.333333333334], [951.0, 6406.0], [957.0, 11552.0], [955.0, 11840.0], [953.0, 11864.0], [933.0, 11188.0], [931.0, 11363.0], [929.0, 12627.0], [989.0, 11087.0], [965.0, 4899.833333333333], [963.0, 1914.0], [961.0, 11363.0], [975.0, 11198.0], [973.0, 11934.0], [971.0, 11137.0], [969.0, 11536.0], [979.0, 5083.0], [981.0, 1679.0], [991.0, 6768.5], [987.0, 11068.0], [967.0, 11596.5], [983.0, 11337.0], [977.0, 11822.0], [1021.0, 4819.0], [995.0, 6424.5], [1007.0, 6562.0], [993.0, 11882.0], [1017.0, 12227.0], [999.0, 11475.0], [997.0, 11091.0], [1015.0, 12272.0], [1013.0, 10996.0], [1011.0, 11624.0], [1009.0, 11069.0], [1005.0, 11403.0], [1003.0, 11167.0], [1001.0, 12311.0], [1086.0, 1880.0], [1054.0, 6492.5], [1062.0, 7002.0], [1070.0, 6917.0], [1058.0, 4939.666666666666], [1078.0, 5053.0], [1038.0, 10930.0], [1034.0, 11559.0], [1030.0, 13855.0], [1066.0, 11197.0], [1050.0, 10953.0], [1046.0, 10878.0], [1042.0, 11015.0], [1146.0, 6514.0], [1098.0, 6453.0], [1090.0, 10910.0], [1102.0, 11148.0], [1118.0, 11096.0], [1114.0, 10682.0], [1110.0, 11558.0], [1106.0, 10622.0], [1150.0, 6272.5], [1134.0, 6500.5], [1142.0, 10648.0], [1138.0, 10764.0], [1130.0, 10777.0], [1126.0, 10871.0], [1122.0, 10551.0], [1202.0, 10918.5], [1206.0, 10254.0], [1162.0, 2288.5], [1174.0, 6581.5], [1178.0, 8149.333333333333], [1182.0, 10368.0], [1154.0, 11313.0], [1166.0, 5202.0], [1210.0, 6479.0], [1198.0, 10301.0], [1214.0, 10574.0], [1190.0, 10350.0], [1194.0, 10539.5], [1170.0, 10402.0], [1250.0, 10091.0], [1222.0, 10164.0], [1274.0, 9937.0], [1270.0, 10303.5], [1266.0, 10231.0], [1262.0, 5105.0], [1258.0, 10078.0], [1254.0, 10280.0], [1278.0, 10099.0], [1230.0, 6109.0], [1226.0, 10871.0], [1234.0, 10576.0], [1238.0, 11445.0], [1242.0, 10405.0], [1246.0, 10060.0], [1310.0, 9797.0], [1290.0, 3903.4], [1294.0, 9898.0], [1306.0, 4035.8], [1302.0, 9971.0], [1298.0, 10527.0], [1282.0, 9987.0], [1286.0, 10048.0], [1334.0, 9822.0], [1338.0, 9754.0], [1342.0, 9611.0], [1322.0, 9922.0], [1318.0, 10340.0], [1330.0, 9710.0], [1326.0, 6436.5], [1354.0, 6078.0], [1394.0, 6403.0], [1374.0, 4854.0], [1346.0, 9616.0], [1350.0, 9750.0], [1358.0, 9544.0], [1378.0, 6012.5], [1406.0, 6289.5], [1402.0, 10254.0], [1398.0, 9514.0], [1390.0, 9411.0], [1382.0, 10591.0], [1366.0, 4977.666666666666], [1362.0, 9574.0], [1370.0, 9663.0], [1418.0, 6287.0], [1414.0, 4985.333333333334], [1422.0, 9640.0], [1458.0, 9112.0], [1462.0, 9105.0], [1426.0, 9228.0], [1430.0, 9540.0], [1434.0, 9219.0], [1438.0, 9184.0], [1450.0, 3820.0], [1454.0, 9108.0], [1470.0, 9548.0], [1442.0, 9615.5], [1466.0, 9316.0], [1478.0, 8973.0], [1482.0, 5820.5], [1474.0, 9732.0], [1502.0, 9022.0], [1498.0, 9297.0], [1494.0, 9388.0], [1490.0, 9243.0], [1486.0, 5852.0], [1522.0, 8922.0], [1526.0, 8783.0], [1530.0, 9070.0], [1534.0, 8721.0], [1506.0, 9487.0], [1510.0, 8965.0], [1514.0, 4059.6], [1518.0, 8866.0], [1542.0, 8723.0], [1566.0, 3728.142857142857], [1538.0, 9856.0], [1562.0, 9602.0], [1558.0, 7195.666666666667], [1546.0, 5712.5], [1550.0, 8786.0], [1586.0, 8813.0], [1590.0, 8742.0], [1570.0, 9513.0], [1574.0, 8765.0], [1578.0, 8538.0], [1582.0, 9134.5], [1598.0, 9185.0], [1554.0, 9810.0], [1658.0, 8332.0], [1654.0, 5848.0], [1614.0, 3507.5], [1610.0, 8424.0], [1606.0, 9643.0], [1618.0, 8754.0], [1662.0, 8148.0], [1634.0, 8273.0], [1642.0, 8342.0], [1638.0, 8366.5], [1646.0, 8509.5], [1622.0, 3497.0], [1626.0, 8364.0], [1630.0, 8488.0], [1602.0, 8517.0], [1678.0, 6390.666666666667], [1666.0, 5091.666666666667], [1670.0, 8236.0], [1674.0, 9123.0], [1726.0, 8325.0], [1722.0, 6021.0], [1718.0, 8229.0], [1698.0, 5655.5], [1710.0, 4719.0], [1706.0, 8287.0], [1702.0, 8118.0], [1682.0, 8386.0], [1686.0, 8673.0], [1690.0, 8460.0], [1694.0, 9422.0], [1734.0, 5606.5], [1758.0, 6114.0], [1730.0, 7873.0], [1754.0, 7764.0], [1746.0, 8044.0], [1738.0, 8225.0], [1774.0, 4857.666666666667], [1766.0, 7726.0], [1762.0, 5473.5], [1782.0, 7676.0], [1778.0, 8136.0], [1786.0, 7661.0], [1742.0, 6375.5], [1802.0, 4895.0], [1846.0, 6853.333333333333], [1794.0, 5866.5], [1798.0, 7614.0], [1806.0, 7873.0], [1814.0, 8724.0], [1818.0, 8650.0], [1822.0, 7471.0], [1850.0, 7775.0], [1854.0, 7733.0], [1830.0, 7486.0], [1842.0, 5338.5], [1834.0, 4967.666666666667], [1838.0, 4808.0], [1858.0, 7419.0], [1910.0, 4514.75], [1866.0, 6494.666666666667], [1862.0, 7982.0], [1886.0, 9076.0], [1882.0, 7603.0], [1878.0, 7826.0], [1874.0, 7320.0], [1898.0, 5005.0], [1902.0, 5594.0], [1914.0, 8244.0], [1918.0, 7159.0], [1890.0, 8770.0], [1894.0, 7395.0], [1870.0, 10119.0], [1906.0, 7288.0], [1926.0, 8660.0], [1934.0, 6294.666666666667], [1922.0, 3983.0], [1946.0, 4690.0], [1942.0, 7288.0], [1938.0, 7094.0], [1982.0, 7070.0], [1954.0, 8462.0], [1958.0, 7466.0], [1962.0, 7058.0], [1966.0, 6942.0], [1978.0, 7320.0], [1974.0, 7385.0], [1970.0, 7146.0], [2042.0, 6683.0], [2046.0, 7205.0], [2018.0, 7232.0], [2022.0, 6900.0], [2026.0, 7112.0], [2038.0, 7318.0], [2034.0, 6721.0], [2014.0, 7232.0], [1986.0, 7113.0], [1990.0, 6860.0], [1994.0, 6863.0], [2010.0, 6949.5], [2006.0, 6804.0], [2002.0, 7065.0], [2030.0, 6941.0], [2060.0, 4917.666666666667], [2052.0, 6444.0], [2108.0, 6762.0], [2100.0, 4783.333333333333], [2084.0, 7765.0], [2092.0, 5827.0], [2068.0, 5199.0], [2172.0, 6487.0], [2116.0, 7130.0], [2124.0, 6331.0], [2164.0, 6142.0], [2156.0, 6463.0], [2148.0, 6232.0], [2076.0, 6540.0], [2140.0, 4846.0], [2132.0, 6322.0], [2292.0, 6047.0], [2300.0, 5612.0], [2180.0, 6778.0], [2204.0, 5115.5], [2196.0, 6003.0], [2188.0, 6551.0], [2276.0, 5586.0], [2284.0, 5653.0], [2244.0, 5371.0], [2252.0, 6239.0], [2260.0, 4857.0], [2268.0, 6852.5], [2228.0, 4711.0], [2220.0, 5987.0], [2212.0, 6844.0], [2236.0, 5776.0], [2404.0, 5012.0], [2412.0, 5117.0], [2308.0, 4837.5], [2364.0, 6129.0], [2316.0, 5680.0], [2324.0, 5389.0], [2332.0, 5531.0], [2372.0, 5182.0], [2428.0, 5557.0], [2420.0, 6078.0], [2380.0, 5138.666666666667], [2396.0, 5322.0], [2388.0, 5456.0], [2340.0, 5010.0], [2356.0, 5261.0], [2348.0, 5273.0], [2444.0, 5085.666666666667], [2436.0, 5214.0], [2468.0, 4714.0], [2460.0, 5443.0], [2452.0, 5307.0], [2157.0, 6199.0], [2061.0, 4823.666666666667], [2053.0, 7366.0], [2077.0, 6747.0], [2165.0, 5219.5], [2149.0, 6735.0], [2133.0, 5584.0], [2125.0, 6986.0], [2141.0, 6371.0], [2173.0, 6751.0], [2085.0, 6743.0], [2101.0, 4738.666666666667], [2109.0, 6370.0], [2197.0, 4012.0], [2293.0, 5476.0], [2277.0, 6086.0], [2205.0, 6897.0], [2285.0, 5955.0], [2301.0, 6412.0], [2237.0, 5114.0], [2181.0, 7067.0], [2189.0, 6963.0], [2229.0, 6175.0], [2221.0, 5996.0], [2213.0, 6243.0], [2245.0, 5460.5], [2253.0, 6133.0], [2261.0, 5061.5], [2269.0, 6195.0], [2325.0, 5724.0], [2333.0, 5580.0], [2309.0, 5039.5], [2365.0, 7274.0], [2317.0, 5383.0], [2413.0, 5346.5], [2421.0, 4957.0], [2429.0, 5314.0], [2373.0, 4872.5], [2381.0, 6283.0], [2389.0, 5770.0], [2397.0, 5221.0], [2341.0, 5302.0], [2349.0, 5268.0], [2357.0, 5215.0], [2493.0, 5189.5], [2437.0, 5315.5], [2485.0, 5071.5], [2445.0, 4880.0], [2453.0, 5514.0], [2461.0, 4668.0], [2469.0, 4898.0], [2477.0, 4803.666666666667], [1087.0, 8031.333333333333], [1035.0, 6826.5], [1031.0, 6313.5], [1027.0, 11180.0], [1059.0, 5100.333333333334], [1063.0, 11638.0], [1047.0, 3766.8], [1043.0, 11540.0], [1051.0, 12603.0], [1055.0, 10816.0], [1083.0, 10732.0], [1075.0, 11254.5], [1039.0, 11619.0], [1071.0, 10723.0], [1067.0, 10971.0], [1151.0, 11108.0], [1143.0, 6700.5], [1119.0, 6481.0], [1095.0, 10895.0], [1091.0, 11374.0], [1103.0, 11038.0], [1099.0, 11424.0], [1131.0, 6699.5], [1147.0, 10706.0], [1135.0, 10522.0], [1127.0, 10877.0], [1123.0, 11949.0], [1111.0, 10621.0], [1107.0, 10634.0], [1163.0, 7622.0], [1179.0, 2098.0], [1183.0, 6624.0], [1159.0, 10610.5], [1155.0, 10723.0], [1167.0, 13154.0], [1203.0, 6235.0], [1207.0, 2596.0], [1187.0, 10372.5], [1215.0, 10167.0], [1211.0, 10987.0], [1195.0, 5498.333333333334], [1191.0, 10666.0], [1199.0, 2210.0], [1171.0, 7042.0], [1275.0, 11022.0], [1231.0, 4928.333333333334], [1219.0, 7780.666666666667], [1227.0, 4970.333333333334], [1223.0, 10509.0], [1279.0, 10701.0], [1271.0, 10379.0], [1267.0, 10040.0], [1251.0, 6568.0], [1263.0, 6932.5], [1259.0, 10432.0], [1255.0, 10173.0], [1247.0, 6675.5], [1243.0, 10787.0], [1239.0, 10336.0], [1235.0, 10579.0], [1291.0, 9867.0], [1331.0, 6609.0], [1287.0, 3725.666666666667], [1307.0, 6120.0], [1303.0, 9805.0], [1299.0, 9893.0], [1311.0, 10338.0], [1283.0, 10199.0], [1319.0, 6402.0], [1315.0, 9725.0], [1323.0, 10409.0], [1327.0, 9938.0], [1343.0, 9603.0], [1339.0, 9859.0], [1335.0, 9678.0], [1395.0, 6140.0], [1355.0, 6010.0], [1351.0, 6151.0], [1375.0, 5982.5], [1347.0, 9560.0], [1371.0, 10356.0], [1399.0, 9408.0], [1403.0, 9916.0], [1383.0, 6134.5], [1387.0, 9810.0], [1379.0, 6223.0], [1407.0, 9338.0], [1367.0, 6366.5], [1363.0, 11593.0], [1423.0, 5968.5], [1459.0, 9664.0], [1419.0, 9308.0], [1467.0, 9502.0], [1463.0, 9480.0], [1471.0, 9840.0], [1427.0, 9359.0], [1431.0, 9703.0], [1435.0, 9701.0], [1439.0, 9154.0], [1411.0, 9364.5], [1415.0, 9551.0], [1443.0, 5870.5], [1447.0, 9167.0], [1451.0, 4009.4], [1455.0, 9105.0], [1479.0, 8959.0], [1527.0, 9208.0], [1535.0, 8747.0], [1483.0, 2728.0], [1475.0, 9404.0], [1503.0, 9046.0], [1499.0, 8891.0], [1495.0, 9265.0], [1487.0, 9209.0], [1523.0, 8891.0], [1515.0, 5997.0], [1519.0, 9470.0], [1511.0, 5854.0], [1507.0, 9095.0], [1531.0, 8788.0], [1543.0, 8733.0], [1547.0, 5040.333333333333], [1539.0, 6324.0], [1567.0, 6129.5], [1563.0, 9061.0], [1559.0, 8652.0], [1551.0, 5038.333333333333], [1587.0, 9092.0], [1591.0, 9081.0], [1595.0, 9147.0], [1599.0, 9591.0], [1575.0, 5678.0], [1583.0, 8573.0], [1555.0, 6561.5], [1615.0, 5223.2], [1651.0, 6706.333333333333], [1603.0, 8508.0], [1607.0, 9645.0], [1611.0, 8660.0], [1655.0, 5233.0], [1635.0, 8418.0], [1647.0, 9600.0], [1643.0, 8193.0], [1663.0, 8710.0], [1659.0, 8134.0], [1623.0, 8585.0], [1631.0, 9805.0], [1719.0, 8024.0], [1715.0, 5486.5], [1695.0, 5523.5], [1675.0, 5651.0], [1671.0, 8077.0], [1667.0, 8260.0], [1723.0, 5863.0], [1727.0, 8824.0], [1699.0, 6001.0], [1703.0, 7952.0], [1711.0, 5705.5], [1679.0, 8091.0], [1683.0, 8104.0], [1687.0, 8587.0], [1691.0, 8020.0], [1743.0, 4748.0], [1731.0, 5889.0], [1759.0, 8101.0], [1735.0, 8335.0], [1779.0, 7671.0], [1783.0, 9749.0], [1763.0, 4768.333333333333], [1771.0, 8799.5], [1767.0, 7706.0], [1775.0, 7783.0], [1787.0, 5027.666666666667], [1791.0, 8064.0], [1747.0, 8239.0], [1751.0, 8165.0], [1755.0, 5795.0], [1799.0, 8875.0], [1807.0, 5197.666666666667], [1851.0, 5842.5], [1803.0, 4511.5], [1823.0, 7692.0], [1819.0, 7481.0], [1815.0, 7948.0], [1811.0, 7652.5], [1855.0, 7759.0], [1831.0, 8206.0], [1827.0, 7518.5], [1847.0, 4739.75], [1843.0, 5995.0], [1839.0, 5596.5], [1835.0, 7429.0], [1859.0, 7986.0], [1867.0, 4025.75], [1883.0, 7795.0], [1879.0, 7423.0], [1875.0, 7954.0], [1887.0, 8166.0], [1863.0, 7819.0], [1891.0, 5503.5], [1903.0, 4871.0], [1899.0, 8352.0], [1895.0, 7366.0], [1871.0, 7317.0], [1907.0, 7773.0], [1911.0, 4754.666666666667], [1915.0, 7767.0], [1919.0, 7913.0], [1951.0, 8465.5], [1923.0, 5651.75], [1943.0, 5395.5], [1939.0, 9665.0], [1947.0, 7738.0], [1983.0, 7621.0], [1955.0, 8474.0], [1959.0, 6993.0], [1963.0, 7098.0], [1967.0, 7673.0], [1979.0, 6913.0], [1975.0, 7157.0], [1935.0, 7616.0], [1931.0, 8399.0], [1927.0, 7341.0], [2039.0, 7427.0], [2043.0, 5356.5], [2047.0, 5146.666666666667], [2019.0, 7148.0], [2027.0, 7006.0], [2035.0, 8148.0], [2015.0, 7035.0], [1991.0, 6854.0], [1995.0, 7293.0], [1999.0, 6946.0], [2007.0, 6799.0], [2003.0, 6967.0], [2031.0, 6798.0], [2062.0, 4699.6], [2054.0, 7455.0], [2110.0, 5003.0], [2102.0, 5561.5], [2094.0, 5934.333333333333], [2086.0, 6498.0], [2070.0, 6827.0], [2078.0, 7307.0], [2150.0, 6276.0], [2166.0, 6479.0], [2174.0, 6097.0], [2118.0, 6364.0], [2126.0, 5130.5], [2134.0, 5376.0], [2142.0, 5259.0], [2294.0, 5838.0], [2206.0, 5717.0], [2278.0, 5697.0], [2190.0, 6077.0], [2182.0, 6063.0], [2198.0, 5180.25], [2302.0, 5423.0], [2286.0, 5621.0], [2246.0, 5745.0], [2254.0, 5715.0], [2270.0, 5657.0], [2262.0, 6469.0], [2214.0, 5088.5], [2222.0, 5984.0], [2230.0, 6499.0], [2238.0, 5054.0], [2334.0, 5454.0], [2310.0, 6324.0], [2318.0, 5384.0], [2326.0, 6125.0], [2406.0, 5883.0], [2430.0, 4969.0], [2374.0, 5243.0], [2422.0, 5033.0], [2414.0, 5363.0], [2382.0, 4859.0], [2398.0, 5044.0], [2390.0, 5156.0], [2350.0, 5300.0], [2342.0, 5388.0], [2494.0, 4931.0], [2478.0, 4867.0], [2438.0, 4877.0], [2470.0, 4980.0], [2486.0, 4730.5], [2462.0, 4900.0], [2454.0, 5050.0], [2446.0, 4829.0], [2079.0, 7431.0], [2063.0, 4900.0], [2055.0, 7922.0], [2071.0, 6812.0], [2119.0, 6922.0], [2175.0, 5568.0], [2159.0, 5979.666666666667], [2151.0, 6379.0], [2167.0, 6661.0], [2127.0, 5394.5], [2135.0, 7168.0], [2143.0, 6260.0], [2095.0, 5403.5], [2087.0, 6745.0], [2103.0, 6441.0], [2111.0, 6813.5], [2207.0, 6438.0], [2191.0, 6078.0], [2183.0, 6240.0], [2199.0, 6431.0], [2279.0, 5234.0], [2295.0, 5698.0], [2287.0, 5631.0], [2303.0, 5451.0], [2215.0, 5152.5], [2223.0, 6371.0], [2231.0, 5119.5], [2239.0, 5756.333333333333], [2263.0, 5056.0], [2271.0, 5628.0], [2247.0, 5910.0], [2255.0, 5802.0], [2327.0, 5944.0], [2335.0, 5487.0], [2367.0, 5407.5], [2311.0, 5485.0], [2319.0, 5591.5], [2407.0, 5027.0], [2415.0, 5273.0], [2423.0, 5012.0], [2431.0, 4779.666666666667], [2375.0, 5158.0], [2391.0, 5277.0], [2399.0, 5360.0], [2343.0, 7183.0], [2351.0, 5635.0], [2359.0, 5403.0], [2439.0, 5229.0], [2495.0, 4636.5], [2447.0, 5414.5], [2455.0, 4788.0], [2463.0, 5185.0], [2471.0, 4858.5], [2479.0, 4768.0], [1.0, 3167.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[1069.6152147239266, 6976.605153374221]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2497.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 40296.0, "minX": 1.699972137E12, "maxY": 185677.0, "series": [{"data": [[1.699972142E12, 69262.0], [1.699972143E12, 62200.0], [1.699972144E12, 70199.0], [1.699972139E12, 58925.0], [1.69997214E12, 65487.0], [1.699972141E12, 72034.0], [1.699972147E12, 72966.0], [1.699972148E12, 81821.0], [1.699972149E12, 80486.0], [1.699972145E12, 70168.0], [1.699972146E12, 66412.0], [1.699972153E12, 77159.0], [1.699972154E12, 84204.0], [1.69997215E12, 72055.0], [1.699972151E12, 70215.0], [1.699972152E12, 71078.0], [1.699972158E12, 65971.0], [1.699972137E12, 147942.0], [1.699972138E12, 185677.0], [1.699972159E12, 73910.0], [1.69997216E12, 88887.0], [1.699972155E12, 69683.0], [1.699972156E12, 71091.0], [1.699972157E12, 58421.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.699972142E12, 47802.0], [1.699972143E12, 42915.0], [1.699972144E12, 48449.0], [1.699972139E12, 40655.0], [1.69997214E12, 45187.0], [1.699972141E12, 49704.0], [1.699972147E12, 50346.0], [1.699972148E12, 56446.0], [1.699972149E12, 55546.0], [1.699972145E12, 48418.0], [1.699972146E12, 45822.0], [1.699972153E12, 53234.0], [1.699972154E12, 58104.0], [1.69997215E12, 49725.0], [1.699972151E12, 48465.0], [1.699972152E12, 49038.0], [1.699972158E12, 45526.0], [1.699972137E12, 102122.0], [1.699972138E12, 128112.0], [1.699972159E12, 51000.0], [1.69997216E12, 61337.0], [1.699972155E12, 48078.0], [1.699972156E12, 49051.0], [1.699972157E12, 40296.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.69997216E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 17.759493670886062, "minX": 1.699972137E12, "maxY": 15744.34736842105, "series": [{"data": [[1.699972142E12, 3050.891891891891], [1.699972143E12, 3746.112781954889], [1.699972144E12, 4580.2], [1.699972139E12, 650.0714285714288], [1.69997214E12, 1463.3357142857135], [1.699972141E12, 2267.8506493506493], [1.699972147E12, 6633.320512820516], [1.699972148E12, 7325.46285714286], [1.699972149E12, 7937.924418604653], [1.699972145E12, 5249.3933333333325], [1.699972146E12, 5854.014084507042], [1.699972153E12, 10730.000000000005], [1.699972154E12, 11396.116666666663], [1.69997215E12, 8646.558441558434], [1.699972151E12, 9334.699999999997], [1.699972152E12, 10021.526315789475], [1.699972158E12, 14164.22695035461], [1.699972137E12, 17.759493670886062], [1.699972138E12, 32.977329974811084], [1.699972159E12, 14929.569620253164], [1.69997216E12, 15744.34736842105], [1.699972155E12, 12013.08053691275], [1.699972156E12, 12719.54605263159], [1.699972157E12, 13518.512000000004]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.69997216E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 17.537974683544302, "minX": 1.699972137E12, "maxY": 15744.336842105271, "series": [{"data": [[1.699972142E12, 3050.797297297298], [1.699972143E12, 3746.0601503759394], [1.699972144E12, 4580.139999999997], [1.699972139E12, 649.9523809523808], [1.69997214E12, 1463.2857142857142], [1.699972141E12, 2267.7987012987005], [1.699972147E12, 6633.262820512822], [1.699972148E12, 7325.37714285714], [1.699972149E12, 7937.877906976743], [1.699972145E12, 5249.319999999999], [1.699972146E12, 5853.971830985913], [1.699972153E12, 10729.93333333333], [1.699972154E12, 11396.055555555555], [1.69997215E12, 8646.487012987018], [1.699972151E12, 9334.593333333338], [1.699972152E12, 10021.460526315786], [1.699972158E12, 14164.120567375885], [1.699972137E12, 17.537974683544302], [1.699972138E12, 32.92695214105793], [1.699972159E12, 14929.518987341764], [1.69997216E12, 15744.336842105271], [1.699972155E12, 12013.01342281879], [1.699972156E12, 12719.506578947368], [1.699972157E12, 13518.472000000002]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.69997216E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.7960526315789477, "minX": 1.699972137E12, "maxY": 4.357594936708863, "series": [{"data": [[1.699972142E12, 1.1351351351351355], [1.699972143E12, 1.3233082706766914], [1.699972144E12, 1.1533333333333338], [1.699972139E12, 1.3888888888888897], [1.69997214E12, 1.6357142857142846], [1.699972141E12, 1.181818181818182], [1.699972147E12, 1.307692307692309], [1.699972148E12, 1.3599999999999994], [1.699972149E12, 1.0058139534883719], [1.699972145E12, 1.8000000000000003], [1.699972146E12, 0.8943661971830986], [1.699972153E12, 0.9090909090909093], [1.699972154E12, 1.15], [1.69997215E12, 0.8961038961038961], [1.699972151E12, 1.2466666666666668], [1.699972152E12, 1.0460526315789473], [1.699972158E12, 3.063829787234042], [1.699972137E12, 4.357594936708863], [1.699972138E12, 1.463476070528966], [1.699972159E12, 2.1645569620253164], [1.69997216E12, 1.7842105263157895], [1.699972155E12, 0.8724832214765099], [1.699972156E12, 0.7960526315789477], [1.699972157E12, 1.3119999999999998]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.69997216E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.699972137E12, "maxY": 18674.0, "series": [{"data": [[1.699972142E12, 4285.0], [1.699972143E12, 5044.0], [1.699972144E12, 6022.0], [1.699972139E12, 1286.0], [1.69997214E12, 2157.0], [1.699972141E12, 3072.0], [1.699972147E12, 9003.0], [1.699972148E12, 9936.0], [1.699972149E12, 10119.0], [1.699972145E12, 7274.0], [1.699972146E12, 7444.0], [1.699972153E12, 13154.0], [1.699972154E12, 13855.0], [1.69997215E12, 11224.0], [1.699972151E12, 10934.0], [1.699972152E12, 11593.0], [1.699972158E12, 15572.0], [1.699972137E12, 129.0], [1.699972138E12, 369.0], [1.699972159E12, 16878.0], [1.69997216E12, 18674.0], [1.699972155E12, 14555.0], [1.699972156E12, 15398.0], [1.699972157E12, 17358.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.699972142E12, 3573.1], [1.699972143E12, 4335.6], [1.699972144E12, 5342.200000000001], [1.699972139E12, 1029.5], [1.69997214E12, 1836.6000000000001], [1.699972141E12, 2688.0], [1.699972147E12, 7259.8], [1.699972148E12, 7992.200000000001], [1.699972149E12, 8664.2], [1.699972145E12, 5925.8], [1.699972146E12, 6409.6], [1.699972153E12, 11361.4], [1.699972154E12, 12164.9], [1.69997215E12, 9497.5], [1.699972151E12, 10017.9], [1.699972152E12, 10785.300000000001], [1.699972158E12, 14900.6], [1.699972137E12, 56.30000000000001], [1.699972138E12, 106.19999999999999], [1.699972159E12, 15662.4], [1.69997216E12, 16452.5], [1.699972155E12, 12641.0], [1.699972156E12, 13365.6], [1.699972157E12, 14356.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.699972142E12, 4232.079999999999], [1.699972143E12, 4962.0599999999995], [1.699972144E12, 5986.81], [1.699972139E12, 1278.17], [1.69997214E12, 2148.39], [1.699972141E12, 3052.2], [1.699972147E12, 8697.480000000003], [1.699972148E12, 9794.640000000001], [1.699972149E12, 9848.900000000003], [1.699972145E12, 7123.550000000003], [1.699972146E12, 7436.26], [1.699972153E12, 12985.7], [1.699972154E12, 12996.399999999998], [1.69997215E12, 11061.749999999996], [1.699972151E12, 10824.860000000002], [1.699972152E12, 11555.37], [1.699972158E12, 15561.92], [1.699972137E12, 124.7899999999998], [1.699972138E12, 258.05999999999995], [1.699972159E12, 16701.0], [1.69997216E12, 17701.210000000003], [1.699972155E12, 14287.5], [1.699972156E12, 15116.57], [1.699972157E12, 16904.819999999992]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.699972142E12, 3868.099999999999], [1.699972143E12, 4616.3], [1.699972144E12, 5557.299999999999], [1.699972139E12, 1116.6], [1.69997214E12, 1993.1499999999996], [1.699972141E12, 2842.0], [1.699972147E12, 7517.400000000001], [1.699972148E12, 8464.4], [1.699972149E12, 8955.15], [1.699972145E12, 6149.7], [1.699972146E12, 6593.6], [1.699972153E12, 11556.5], [1.699972154E12, 12529.849999999999], [1.69997215E12, 9648.0], [1.699972151E12, 10243.1], [1.699972152E12, 11187.949999999999], [1.699972158E12, 14987.5], [1.699972137E12, 84.29999999999995], [1.699972138E12, 150.19999999999993], [1.699972159E12, 16082.099999999995], [1.69997216E12, 16813.4], [1.699972155E12, 13513.0], [1.699972156E12, 13606.15], [1.699972157E12, 14628.499999999998]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.699972142E12, 2365.0], [1.699972143E12, 3070.0], [1.699972144E12, 3807.0], [1.699972139E12, 33.0], [1.69997214E12, 913.0], [1.699972141E12, 1726.0], [1.699972147E12, 5927.0], [1.699972148E12, 6606.0], [1.699972149E12, 7311.0], [1.699972145E12, 4589.0], [1.699972146E12, 5204.0], [1.699972153E12, 10012.0], [1.699972154E12, 10670.0], [1.69997215E12, 7934.0], [1.699972151E12, 8638.0], [1.699972152E12, 9338.0], [1.699972158E12, 13420.0], [1.699972137E12, 6.0], [1.699972138E12, 5.0], [1.699972159E12, 14175.0], [1.69997216E12, 14919.0], [1.699972155E12, 11309.0], [1.699972156E12, 12050.0], [1.699972157E12, 12759.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.699972142E12, 3031.5], [1.699972143E12, 3736.0], [1.699972144E12, 4496.0], [1.699972139E12, 660.0], [1.69997214E12, 1477.0], [1.699972141E12, 2250.5], [1.699972147E12, 6524.0], [1.699972148E12, 7186.0], [1.699972149E12, 7803.0], [1.699972145E12, 5159.0], [1.699972146E12, 5738.5], [1.699972153E12, 10622.0], [1.699972154E12, 11277.0], [1.69997215E12, 8525.5], [1.699972151E12, 9228.0], [1.699972152E12, 9907.5], [1.699972158E12, 14103.0], [1.699972137E12, 9.0], [1.699972138E12, 10.0], [1.699972159E12, 14797.5], [1.69997216E12, 15607.5], [1.699972155E12, 11846.0], [1.699972156E12, 12615.5], [1.699972157E12, 13351.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.69997216E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 9.0, "minX": 125.0, "maxY": 15607.5, "series": [{"data": [[133.0, 3736.0], [140.0, 1477.0], [142.0, 5738.5], [141.0, 14103.0], [148.0, 3031.5], [150.0, 5279.0], [149.0, 11846.0], [154.0, 5503.0], [156.0, 6524.0], [152.0, 11821.5], [158.0, 14797.5], [165.0, 10622.0], [175.0, 7186.0], [172.0, 7803.0], [180.0, 11277.0], [190.0, 15607.5], [316.0, 9.0], [397.0, 10.0], [126.0, 660.0], [125.0, 13351.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 397.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 9.0, "minX": 125.0, "maxY": 15607.5, "series": [{"data": [[133.0, 3736.0], [140.0, 1477.0], [142.0, 5738.5], [141.0, 14103.0], [148.0, 3031.5], [150.0, 5279.0], [149.0, 11846.0], [154.0, 5503.0], [156.0, 6524.0], [152.0, 11821.5], [158.0, 14797.5], [165.0, 10622.0], [175.0, 7186.0], [172.0, 7802.5], [180.0, 11277.0], [190.0, 15607.5], [316.0, 9.0], [397.0, 10.0], [126.0, 660.0], [125.0, 13351.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 397.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 65.0, "minX": 1.699972137E12, "maxY": 621.0, "series": [{"data": [[1.699972142E12, 500.0], [1.699972143E12, 500.0], [1.699972144E12, 499.0], [1.699972139E12, 573.0], [1.69997214E12, 499.0], [1.699972141E12, 501.0], [1.699972137E12, 317.0], [1.699972138E12, 621.0], [1.699972145E12, 65.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699972145E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 125.0, "minX": 1.699972137E12, "maxY": 397.0, "series": [{"data": [[1.699972142E12, 148.0], [1.699972143E12, 133.0], [1.699972144E12, 150.0], [1.699972139E12, 126.0], [1.69997214E12, 140.0], [1.699972141E12, 154.0], [1.699972147E12, 156.0], [1.699972148E12, 175.0], [1.699972149E12, 172.0], [1.699972145E12, 150.0], [1.699972146E12, 142.0], [1.699972153E12, 165.0], [1.699972154E12, 180.0], [1.69997215E12, 154.0], [1.699972151E12, 150.0], [1.699972152E12, 152.0], [1.699972158E12, 141.0], [1.699972137E12, 316.0], [1.699972138E12, 397.0], [1.699972159E12, 158.0], [1.69997216E12, 190.0], [1.699972155E12, 149.0], [1.699972156E12, 152.0], [1.699972157E12, 125.0]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.69997216E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 125.0, "minX": 1.699972137E12, "maxY": 397.0, "series": [{"data": [[1.699972142E12, 148.0], [1.699972143E12, 133.0], [1.699972144E12, 150.0], [1.699972139E12, 126.0], [1.69997214E12, 140.0], [1.699972141E12, 154.0], [1.699972147E12, 156.0], [1.699972148E12, 175.0], [1.699972149E12, 172.0], [1.699972145E12, 150.0], [1.699972146E12, 142.0], [1.699972153E12, 165.0], [1.699972154E12, 180.0], [1.69997215E12, 154.0], [1.699972151E12, 150.0], [1.699972152E12, 152.0], [1.699972158E12, 141.0], [1.699972137E12, 316.0], [1.699972138E12, 397.0], [1.699972159E12, 158.0], [1.69997216E12, 190.0], [1.699972155E12, 149.0], [1.699972156E12, 152.0], [1.699972157E12, 125.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.69997216E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 125.0, "minX": 1.699972137E12, "maxY": 397.0, "series": [{"data": [[1.699972142E12, 148.0], [1.699972143E12, 133.0], [1.699972144E12, 150.0], [1.699972139E12, 126.0], [1.69997214E12, 140.0], [1.699972141E12, 154.0], [1.699972147E12, 156.0], [1.699972148E12, 175.0], [1.699972149E12, 172.0], [1.699972145E12, 150.0], [1.699972146E12, 142.0], [1.699972153E12, 165.0], [1.699972154E12, 180.0], [1.69997215E12, 154.0], [1.699972151E12, 150.0], [1.699972152E12, 152.0], [1.699972158E12, 141.0], [1.699972137E12, 316.0], [1.699972138E12, 397.0], [1.699972159E12, 158.0], [1.69997216E12, 190.0], [1.699972155E12, 149.0], [1.699972156E12, 152.0], [1.699972157E12, 125.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.69997216E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

