/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 15846.0, "series": [{"data": [[0.0, 5.0], [0.1, 5.0], [0.2, 6.0], [0.3, 6.0], [0.4, 6.0], [0.5, 6.0], [0.6, 6.0], [0.7, 6.0], [0.8, 6.0], [0.9, 6.0], [1.0, 6.0], [1.1, 6.0], [1.2, 6.0], [1.3, 6.0], [1.4, 6.0], [1.5, 6.0], [1.6, 6.0], [1.7, 6.0], [1.8, 6.0], [1.9, 6.0], [2.0, 7.0], [2.1, 7.0], [2.2, 7.0], [2.3, 7.0], [2.4, 7.0], [2.5, 7.0], [2.6, 7.0], [2.7, 7.0], [2.8, 7.0], [2.9, 7.0], [3.0, 7.0], [3.1, 7.0], [3.2, 7.0], [3.3, 7.0], [3.4, 7.0], [3.5, 7.0], [3.6, 7.0], [3.7, 7.0], [3.8, 7.0], [3.9, 7.0], [4.0, 7.0], [4.1, 7.0], [4.2, 7.0], [4.3, 7.0], [4.4, 7.0], [4.5, 7.0], [4.6, 7.0], [4.7, 7.0], [4.8, 7.0], [4.9, 7.0], [5.0, 7.0], [5.1, 7.0], [5.2, 7.0], [5.3, 7.0], [5.4, 7.0], [5.5, 7.0], [5.6, 7.0], [5.7, 7.0], [5.8, 7.0], [5.9, 7.0], [6.0, 7.0], [6.1, 7.0], [6.2, 7.0], [6.3, 7.0], [6.4, 7.0], [6.5, 7.0], [6.6, 7.0], [6.7, 7.0], [6.8, 7.0], [6.9, 7.0], [7.0, 7.0], [7.1, 7.0], [7.2, 7.0], [7.3, 7.0], [7.4, 7.0], [7.5, 8.0], [7.6, 8.0], [7.7, 8.0], [7.8, 8.0], [7.9, 8.0], [8.0, 8.0], [8.1, 8.0], [8.2, 8.0], [8.3, 8.0], [8.4, 8.0], [8.5, 8.0], [8.6, 8.0], [8.7, 8.0], [8.8, 8.0], [8.9, 8.0], [9.0, 8.0], [9.1, 8.0], [9.2, 8.0], [9.3, 8.0], [9.4, 8.0], [9.5, 8.0], [9.6, 8.0], [9.7, 8.0], [9.8, 8.0], [9.9, 8.0], [10.0, 8.0], [10.1, 8.0], [10.2, 8.0], [10.3, 8.0], [10.4, 8.0], [10.5, 8.0], [10.6, 8.0], [10.7, 8.0], [10.8, 8.0], [10.9, 8.0], [11.0, 8.0], [11.1, 8.0], [11.2, 8.0], [11.3, 8.0], [11.4, 8.0], [11.5, 8.0], [11.6, 8.0], [11.7, 8.0], [11.8, 8.0], [11.9, 8.0], [12.0, 8.0], [12.1, 8.0], [12.2, 8.0], [12.3, 8.0], [12.4, 8.0], [12.5, 9.0], [12.6, 9.0], [12.7, 9.0], [12.8, 9.0], [12.9, 9.0], [13.0, 9.0], [13.1, 9.0], [13.2, 9.0], [13.3, 9.0], [13.4, 9.0], [13.5, 9.0], [13.6, 9.0], [13.7, 9.0], [13.8, 9.0], [13.9, 9.0], [14.0, 9.0], [14.1, 9.0], [14.2, 9.0], [14.3, 9.0], [14.4, 9.0], [14.5, 9.0], [14.6, 9.0], [14.7, 9.0], [14.8, 9.0], [14.9, 9.0], [15.0, 9.0], [15.1, 9.0], [15.2, 9.0], [15.3, 9.0], [15.4, 9.0], [15.5, 9.0], [15.6, 9.0], [15.7, 9.0], [15.8, 9.0], [15.9, 10.0], [16.0, 10.0], [16.1, 10.0], [16.2, 10.0], [16.3, 10.0], [16.4, 10.0], [16.5, 10.0], [16.6, 10.0], [16.7, 10.0], [16.8, 10.0], [16.9, 10.0], [17.0, 10.0], [17.1, 10.0], [17.2, 10.0], [17.3, 10.0], [17.4, 10.0], [17.5, 10.0], [17.6, 11.0], [17.7, 11.0], [17.8, 11.0], [17.9, 11.0], [18.0, 11.0], [18.1, 11.0], [18.2, 11.0], [18.3, 11.0], [18.4, 11.0], [18.5, 11.0], [18.6, 11.0], [18.7, 11.0], [18.8, 11.0], [18.9, 11.0], [19.0, 11.0], [19.1, 11.0], [19.2, 12.0], [19.3, 12.0], [19.4, 12.0], [19.5, 12.0], [19.6, 12.0], [19.7, 12.0], [19.8, 13.0], [19.9, 13.0], [20.0, 13.0], [20.1, 13.0], [20.2, 13.0], [20.3, 14.0], [20.4, 14.0], [20.5, 14.0], [20.6, 14.0], [20.7, 14.0], [20.8, 15.0], [20.9, 15.0], [21.0, 15.0], [21.1, 15.0], [21.2, 16.0], [21.3, 16.0], [21.4, 17.0], [21.5, 18.0], [21.6, 18.0], [21.7, 18.0], [21.8, 19.0], [21.9, 20.0], [22.0, 21.0], [22.1, 22.0], [22.2, 23.0], [22.3, 27.0], [22.4, 28.0], [22.5, 29.0], [22.6, 30.0], [22.7, 33.0], [22.8, 37.0], [22.9, 39.0], [23.0, 41.0], [23.1, 43.0], [23.2, 45.0], [23.3, 48.0], [23.4, 50.0], [23.5, 51.0], [23.6, 54.0], [23.7, 56.0], [23.8, 61.0], [23.9, 64.0], [24.0, 65.0], [24.1, 67.0], [24.2, 70.0], [24.3, 72.0], [24.4, 74.0], [24.5, 76.0], [24.6, 80.0], [24.7, 83.0], [24.8, 87.0], [24.9, 88.0], [25.0, 91.0], [25.1, 94.0], [25.2, 97.0], [25.3, 100.0], [25.4, 104.0], [25.5, 106.0], [25.6, 112.0], [25.7, 113.0], [25.8, 117.0], [25.9, 122.0], [26.0, 130.0], [26.1, 139.0], [26.2, 146.0], [26.3, 152.0], [26.4, 164.0], [26.5, 170.0], [26.6, 181.0], [26.7, 188.0], [26.8, 194.0], [26.9, 226.0], [27.0, 250.0], [27.1, 257.0], [27.2, 271.0], [27.3, 307.0], [27.4, 327.0], [27.5, 346.0], [27.6, 362.0], [27.7, 381.0], [27.8, 393.0], [27.9, 483.0], [28.0, 519.0], [28.1, 527.0], [28.2, 546.0], [28.3, 568.0], [28.4, 599.0], [28.5, 607.0], [28.6, 634.0], [28.7, 652.0], [28.8, 671.0], [28.9, 689.0], [29.0, 700.0], [29.1, 740.0], [29.2, 781.0], [29.3, 819.0], [29.4, 830.0], [29.5, 877.0], [29.6, 891.0], [29.7, 904.0], [29.8, 923.0], [29.9, 955.0], [30.0, 976.0], [30.1, 984.0], [30.2, 1022.0], [30.3, 1046.0], [30.4, 1109.0], [30.5, 1130.0], [30.6, 1157.0], [30.7, 1211.0], [30.8, 1241.0], [30.9, 1266.0], [31.0, 1326.0], [31.1, 1336.0], [31.2, 1347.0], [31.3, 1357.0], [31.4, 1371.0], [31.5, 1386.0], [31.6, 1415.0], [31.7, 1427.0], [31.8, 1431.0], [31.9, 1456.0], [32.0, 1470.0], [32.1, 1477.0], [32.2, 1492.0], [32.3, 1527.0], [32.4, 1536.0], [32.5, 1605.0], [32.6, 1645.0], [32.7, 1664.0], [32.8, 1698.0], [32.9, 1714.0], [33.0, 1734.0], [33.1, 1747.0], [33.2, 1770.0], [33.3, 1797.0], [33.4, 1817.0], [33.5, 1850.0], [33.6, 1891.0], [33.7, 1921.0], [33.8, 1952.0], [33.9, 1958.0], [34.0, 1982.0], [34.1, 1991.0], [34.2, 2010.0], [34.3, 2032.0], [34.4, 2066.0], [34.5, 2089.0], [34.6, 2114.0], [34.7, 2128.0], [34.8, 2148.0], [34.9, 2161.0], [35.0, 2188.0], [35.1, 2210.0], [35.2, 2224.0], [35.3, 2233.0], [35.4, 2240.0], [35.5, 2259.0], [35.6, 2286.0], [35.7, 2309.0], [35.8, 2354.0], [35.9, 2368.0], [36.0, 2378.0], [36.1, 2381.0], [36.2, 2404.0], [36.3, 2417.0], [36.4, 2422.0], [36.5, 2446.0], [36.6, 2464.0], [36.7, 2476.0], [36.8, 2489.0], [36.9, 2515.0], [37.0, 2539.0], [37.1, 2567.0], [37.2, 2590.0], [37.3, 2603.0], [37.4, 2611.0], [37.5, 2621.0], [37.6, 2654.0], [37.7, 2671.0], [37.8, 2704.0], [37.9, 2717.0], [38.0, 2752.0], [38.1, 2759.0], [38.2, 2776.0], [38.3, 2814.0], [38.4, 2833.0], [38.5, 2847.0], [38.6, 2878.0], [38.7, 2896.0], [38.8, 2920.0], [38.9, 2933.0], [39.0, 2943.0], [39.1, 2953.0], [39.2, 2970.0], [39.3, 3001.0], [39.4, 3019.0], [39.5, 3036.0], [39.6, 3047.0], [39.7, 3055.0], [39.8, 3068.0], [39.9, 3077.0], [40.0, 3104.0], [40.1, 3119.0], [40.2, 3133.0], [40.3, 3156.0], [40.4, 3168.0], [40.5, 3182.0], [40.6, 3215.0], [40.7, 3239.0], [40.8, 3256.0], [40.9, 3296.0], [41.0, 3310.0], [41.1, 3334.0], [41.2, 3362.0], [41.3, 3396.0], [41.4, 3407.0], [41.5, 3420.0], [41.6, 3441.0], [41.7, 3451.0], [41.8, 3470.0], [41.9, 3480.0], [42.0, 3502.0], [42.1, 3520.0], [42.2, 3536.0], [42.3, 3552.0], [42.4, 3590.0], [42.5, 3623.0], [42.6, 3641.0], [42.7, 3652.0], [42.8, 3664.0], [42.9, 3670.0], [43.0, 3687.0], [43.1, 3705.0], [43.2, 3737.0], [43.3, 3754.0], [43.4, 3770.0], [43.5, 3786.0], [43.6, 3802.0], [43.7, 3814.0], [43.8, 3821.0], [43.9, 3846.0], [44.0, 3870.0], [44.1, 3882.0], [44.2, 3901.0], [44.3, 3910.0], [44.4, 3916.0], [44.5, 3937.0], [44.6, 3962.0], [44.7, 3996.0], [44.8, 4011.0], [44.9, 4045.0], [45.0, 4069.0], [45.1, 4086.0], [45.2, 4099.0], [45.3, 4133.0], [45.4, 4141.0], [45.5, 4144.0], [45.6, 4149.0], [45.7, 4179.0], [45.8, 4205.0], [45.9, 4222.0], [46.0, 4230.0], [46.1, 4243.0], [46.2, 4260.0], [46.3, 4279.0], [46.4, 4294.0], [46.5, 4308.0], [46.6, 4314.0], [46.7, 4324.0], [46.8, 4329.0], [46.9, 4357.0], [47.0, 4373.0], [47.1, 4383.0], [47.2, 4411.0], [47.3, 4420.0], [47.4, 4434.0], [47.5, 4456.0], [47.6, 4466.0], [47.7, 4482.0], [47.8, 4494.0], [47.9, 4511.0], [48.0, 4520.0], [48.1, 4530.0], [48.2, 4568.0], [48.3, 4585.0], [48.4, 4604.0], [48.5, 4623.0], [48.6, 4642.0], [48.7, 4660.0], [48.8, 4700.0], [48.9, 4711.0], [49.0, 4731.0], [49.1, 4739.0], [49.2, 4771.0], [49.3, 4782.0], [49.4, 4794.0], [49.5, 4821.0], [49.6, 4842.0], [49.7, 4847.0], [49.8, 4868.0], [49.9, 4889.0], [50.0, 4897.0], [50.1, 4915.0], [50.2, 4935.0], [50.3, 4954.0], [50.4, 5002.0], [50.5, 5011.0], [50.6, 5036.0], [50.7, 5059.0], [50.8, 5072.0], [50.9, 5079.0], [51.0, 5084.0], [51.1, 5094.0], [51.2, 5124.0], [51.3, 5161.0], [51.4, 5183.0], [51.5, 5195.0], [51.6, 5216.0], [51.7, 5230.0], [51.8, 5244.0], [51.9, 5252.0], [52.0, 5268.0], [52.1, 5277.0], [52.2, 5292.0], [52.3, 5306.0], [52.4, 5325.0], [52.5, 5341.0], [52.6, 5350.0], [52.7, 5359.0], [52.8, 5393.0], [52.9, 5404.0], [53.0, 5415.0], [53.1, 5424.0], [53.2, 5436.0], [53.3, 5448.0], [53.4, 5453.0], [53.5, 5471.0], [53.6, 5477.0], [53.7, 5483.0], [53.8, 5498.0], [53.9, 5515.0], [54.0, 5527.0], [54.1, 5549.0], [54.2, 5568.0], [54.3, 5603.0], [54.4, 5628.0], [54.5, 5659.0], [54.6, 5670.0], [54.7, 5683.0], [54.8, 5692.0], [54.9, 5700.0], [55.0, 5727.0], [55.1, 5743.0], [55.2, 5767.0], [55.3, 5781.0], [55.4, 5790.0], [55.5, 5823.0], [55.6, 5828.0], [55.7, 5837.0], [55.8, 5846.0], [55.9, 5856.0], [56.0, 5866.0], [56.1, 5895.0], [56.2, 5928.0], [56.3, 5941.0], [56.4, 5967.0], [56.5, 5978.0], [56.6, 5991.0], [56.7, 5997.0], [56.8, 6020.0], [56.9, 6048.0], [57.0, 6062.0], [57.1, 6082.0], [57.2, 6096.0], [57.3, 6107.0], [57.4, 6128.0], [57.5, 6135.0], [57.6, 6154.0], [57.7, 6177.0], [57.8, 6208.0], [57.9, 6213.0], [58.0, 6229.0], [58.1, 6244.0], [58.2, 6251.0], [58.3, 6268.0], [58.4, 6279.0], [58.5, 6283.0], [58.6, 6297.0], [58.7, 6306.0], [58.8, 6342.0], [58.9, 6361.0], [59.0, 6381.0], [59.1, 6395.0], [59.2, 6408.0], [59.3, 6429.0], [59.4, 6444.0], [59.5, 6455.0], [59.6, 6475.0], [59.7, 6493.0], [59.8, 6521.0], [59.9, 6524.0], [60.0, 6546.0], [60.1, 6572.0], [60.2, 6587.0], [60.3, 6591.0], [60.4, 6605.0], [60.5, 6624.0], [60.6, 6633.0], [60.7, 6634.0], [60.8, 6653.0], [60.9, 6679.0], [61.0, 6695.0], [61.1, 6701.0], [61.2, 6734.0], [61.3, 6738.0], [61.4, 6765.0], [61.5, 6781.0], [61.6, 6792.0], [61.7, 6813.0], [61.8, 6828.0], [61.9, 6847.0], [62.0, 6871.0], [62.1, 6911.0], [62.2, 6927.0], [62.3, 6964.0], [62.4, 6970.0], [62.5, 6987.0], [62.6, 6999.0], [62.7, 7028.0], [62.8, 7036.0], [62.9, 7047.0], [63.0, 7086.0], [63.1, 7102.0], [63.2, 7125.0], [63.3, 7137.0], [63.4, 7155.0], [63.5, 7191.0], [63.6, 7201.0], [63.7, 7210.0], [63.8, 7220.0], [63.9, 7236.0], [64.0, 7258.0], [64.1, 7277.0], [64.2, 7290.0], [64.3, 7306.0], [64.4, 7313.0], [64.5, 7333.0], [64.6, 7360.0], [64.7, 7366.0], [64.8, 7386.0], [64.9, 7398.0], [65.0, 7419.0], [65.1, 7443.0], [65.2, 7448.0], [65.3, 7466.0], [65.4, 7472.0], [65.5, 7493.0], [65.6, 7514.0], [65.7, 7531.0], [65.8, 7546.0], [65.9, 7566.0], [66.0, 7572.0], [66.1, 7580.0], [66.2, 7590.0], [66.3, 7601.0], [66.4, 7640.0], [66.5, 7653.0], [66.6, 7664.0], [66.7, 7682.0], [66.8, 7705.0], [66.9, 7717.0], [67.0, 7738.0], [67.1, 7743.0], [67.2, 7761.0], [67.3, 7767.0], [67.4, 7775.0], [67.5, 7786.0], [67.6, 7799.0], [67.7, 7805.0], [67.8, 7813.0], [67.9, 7845.0], [68.0, 7851.0], [68.1, 7859.0], [68.2, 7882.0], [68.3, 7892.0], [68.4, 7900.0], [68.5, 7906.0], [68.6, 7911.0], [68.7, 7942.0], [68.8, 7964.0], [68.9, 7969.0], [69.0, 7979.0], [69.1, 8017.0], [69.2, 8020.0], [69.3, 8038.0], [69.4, 8048.0], [69.5, 8060.0], [69.6, 8096.0], [69.7, 8108.0], [69.8, 8124.0], [69.9, 8148.0], [70.0, 8157.0], [70.1, 8182.0], [70.2, 8205.0], [70.3, 8245.0], [70.4, 8261.0], [70.5, 8288.0], [70.6, 8298.0], [70.7, 8319.0], [70.8, 8353.0], [70.9, 8364.0], [71.0, 8380.0], [71.1, 8390.0], [71.2, 8404.0], [71.3, 8418.0], [71.4, 8430.0], [71.5, 8444.0], [71.6, 8473.0], [71.7, 8500.0], [71.8, 8531.0], [71.9, 8543.0], [72.0, 8550.0], [72.1, 8560.0], [72.2, 8566.0], [72.3, 8584.0], [72.4, 8589.0], [72.5, 8599.0], [72.6, 8624.0], [72.7, 8658.0], [72.8, 8675.0], [72.9, 8687.0], [73.0, 8725.0], [73.1, 8752.0], [73.2, 8783.0], [73.3, 8801.0], [73.4, 8807.0], [73.5, 8814.0], [73.6, 8824.0], [73.7, 8838.0], [73.8, 8857.0], [73.9, 8871.0], [74.0, 8881.0], [74.1, 8905.0], [74.2, 8920.0], [74.3, 8936.0], [74.4, 8947.0], [74.5, 8969.0], [74.6, 9013.0], [74.7, 9029.0], [74.8, 9050.0], [74.9, 9070.0], [75.0, 9093.0], [75.1, 9104.0], [75.2, 9129.0], [75.3, 9138.0], [75.4, 9178.0], [75.5, 9187.0], [75.6, 9226.0], [75.7, 9269.0], [75.8, 9289.0], [75.9, 9315.0], [76.0, 9323.0], [76.1, 9346.0], [76.2, 9359.0], [76.3, 9375.0], [76.4, 9380.0], [76.5, 9391.0], [76.6, 9415.0], [76.7, 9437.0], [76.8, 9449.0], [76.9, 9456.0], [77.0, 9483.0], [77.1, 9501.0], [77.2, 9521.0], [77.3, 9542.0], [77.4, 9583.0], [77.5, 9590.0], [77.6, 9609.0], [77.7, 9619.0], [77.8, 9635.0], [77.9, 9660.0], [78.0, 9682.0], [78.1, 9708.0], [78.2, 9735.0], [78.3, 9766.0], [78.4, 9783.0], [78.5, 9808.0], [78.6, 9816.0], [78.7, 9837.0], [78.8, 9851.0], [78.9, 9871.0], [79.0, 9885.0], [79.1, 9899.0], [79.2, 9907.0], [79.3, 9923.0], [79.4, 9938.0], [79.5, 9944.0], [79.6, 9972.0], [79.7, 9994.0], [79.8, 10002.0], [79.9, 10027.0], [80.0, 10040.0], [80.1, 10063.0], [80.2, 10079.0], [80.3, 10107.0], [80.4, 10126.0], [80.5, 10131.0], [80.6, 10145.0], [80.7, 10160.0], [80.8, 10188.0], [80.9, 10202.0], [81.0, 10214.0], [81.1, 10232.0], [81.2, 10243.0], [81.3, 10251.0], [81.4, 10268.0], [81.5, 10280.0], [81.6, 10292.0], [81.7, 10324.0], [81.8, 10337.0], [81.9, 10343.0], [82.0, 10352.0], [82.1, 10373.0], [82.2, 10386.0], [82.3, 10399.0], [82.4, 10419.0], [82.5, 10434.0], [82.6, 10447.0], [82.7, 10451.0], [82.8, 10474.0], [82.9, 10503.0], [83.0, 10527.0], [83.1, 10546.0], [83.2, 10551.0], [83.3, 10566.0], [83.4, 10579.0], [83.5, 10597.0], [83.6, 10637.0], [83.7, 10661.0], [83.8, 10682.0], [83.9, 10693.0], [84.0, 10709.0], [84.1, 10748.0], [84.2, 10755.0], [84.3, 10769.0], [84.4, 10791.0], [84.5, 10824.0], [84.6, 10838.0], [84.7, 10851.0], [84.8, 10871.0], [84.9, 10888.0], [85.0, 10894.0], [85.1, 10911.0], [85.2, 10929.0], [85.3, 10955.0], [85.4, 10987.0], [85.5, 11003.0], [85.6, 11013.0], [85.7, 11042.0], [85.8, 11047.0], [85.9, 11067.0], [86.0, 11078.0], [86.1, 11086.0], [86.2, 11115.0], [86.3, 11120.0], [86.4, 11149.0], [86.5, 11162.0], [86.6, 11172.0], [86.7, 11183.0], [86.8, 11194.0], [86.9, 11207.0], [87.0, 11225.0], [87.1, 11260.0], [87.2, 11277.0], [87.3, 11312.0], [87.4, 11319.0], [87.5, 11332.0], [87.6, 11340.0], [87.7, 11367.0], [87.8, 11382.0], [87.9, 11409.0], [88.0, 11433.0], [88.1, 11446.0], [88.2, 11481.0], [88.3, 11506.0], [88.4, 11514.0], [88.5, 11544.0], [88.6, 11558.0], [88.7, 11564.0], [88.8, 11572.0], [88.9, 11580.0], [89.0, 11586.0], [89.1, 11601.0], [89.2, 11608.0], [89.3, 11631.0], [89.4, 11672.0], [89.5, 11701.0], [89.6, 11722.0], [89.7, 11728.0], [89.8, 11755.0], [89.9, 11783.0], [90.0, 11791.0], [90.1, 11803.0], [90.2, 11811.0], [90.3, 11838.0], [90.4, 11842.0], [90.5, 11858.0], [90.6, 11886.0], [90.7, 11900.0], [90.8, 11912.0], [90.9, 11922.0], [91.0, 11940.0], [91.1, 11950.0], [91.2, 11970.0], [91.3, 12000.0], [91.4, 12012.0], [91.5, 12021.0], [91.6, 12037.0], [91.7, 12055.0], [91.8, 12074.0], [91.9, 12082.0], [92.0, 12096.0], [92.1, 12121.0], [92.2, 12147.0], [92.3, 12164.0], [92.4, 12178.0], [92.5, 12203.0], [92.6, 12215.0], [92.7, 12227.0], [92.8, 12249.0], [92.9, 12276.0], [93.0, 12318.0], [93.1, 12331.0], [93.2, 12367.0], [93.3, 12382.0], [93.4, 12419.0], [93.5, 12435.0], [93.6, 12466.0], [93.7, 12507.0], [93.8, 12523.0], [93.9, 12553.0], [94.0, 12577.0], [94.1, 12616.0], [94.2, 12644.0], [94.3, 12682.0], [94.4, 12692.0], [94.5, 12718.0], [94.6, 12757.0], [94.7, 12783.0], [94.8, 12792.0], [94.9, 12821.0], [95.0, 12852.0], [95.1, 12867.0], [95.2, 12876.0], [95.3, 12905.0], [95.4, 12939.0], [95.5, 12965.0], [95.6, 12975.0], [95.7, 13002.0], [95.8, 13021.0], [95.9, 13041.0], [96.0, 13053.0], [96.1, 13060.0], [96.2, 13068.0], [96.3, 13091.0], [96.4, 13100.0], [96.5, 13121.0], [96.6, 13151.0], [96.7, 13177.0], [96.8, 13195.0], [96.9, 13232.0], [97.0, 13243.0], [97.1, 13253.0], [97.2, 13269.0], [97.3, 13276.0], [97.4, 13296.0], [97.5, 13310.0], [97.6, 13318.0], [97.7, 13351.0], [97.8, 13362.0], [97.9, 13377.0], [98.0, 13412.0], [98.1, 13436.0], [98.2, 13455.0], [98.3, 13478.0], [98.4, 13501.0], [98.5, 13529.0], [98.6, 13549.0], [98.7, 13564.0], [98.8, 13617.0], [98.9, 13661.0], [99.0, 13730.0], [99.1, 13824.0], [99.2, 13849.0], [99.3, 13886.0], [99.4, 13972.0], [99.5, 14187.0], [99.6, 14305.0], [99.7, 14490.0], [99.8, 14573.0], [99.9, 14752.0], [100.0, 15846.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1043.0, "series": [{"data": [[0.0, 1043.0], [100.0, 63.0], [200.0, 19.0], [300.0, 22.0], [400.0, 6.0], [500.0, 19.0], [600.0, 23.0], [700.0, 12.0], [800.0, 17.0], [900.0, 19.0], [1000.0, 10.0], [1100.0, 12.0], [1200.0, 13.0], [1300.0, 25.0], [1400.0, 26.0], [1500.0, 11.0], [1600.0, 14.0], [1700.0, 20.0], [1800.0, 15.0], [1900.0, 19.0], [2000.0, 18.0], [2100.0, 19.0], [2200.0, 27.0], [2300.0, 20.0], [2400.0, 30.0], [2500.0, 14.0], [2600.0, 23.0], [2700.0, 18.0], [2800.0, 20.0], [2900.0, 24.0], [3000.0, 28.0], [3100.0, 23.0], [3200.0, 17.0], [3300.0, 16.0], [3400.0, 27.0], [3500.0, 19.0], [3600.0, 24.0], [3700.0, 22.0], [3800.0, 25.0], [3900.0, 23.0], [4000.0, 20.0], [4100.0, 24.0], [4300.0, 30.0], [4200.0, 27.0], [4500.0, 23.0], [4400.0, 26.0], [4600.0, 18.0], [4700.0, 26.0], [4800.0, 24.0], [5000.0, 30.0], [4900.0, 16.0], [5100.0, 17.0], [5300.0, 24.0], [5200.0, 31.0], [5400.0, 40.0], [5600.0, 25.0], [5500.0, 18.0], [5800.0, 27.0], [5700.0, 24.0], [5900.0, 24.0], [6100.0, 24.0], [6000.0, 21.0], [6300.0, 21.0], [6200.0, 35.0], [6400.0, 24.0], [6500.0, 25.0], [6600.0, 31.0], [6700.0, 22.0], [6800.0, 18.0], [6900.0, 23.0], [7000.0, 19.0], [7100.0, 21.0], [7400.0, 24.0], [7300.0, 28.0], [7200.0, 28.0], [7500.0, 30.0], [7600.0, 21.0], [7800.0, 32.0], [7700.0, 35.0], [7900.0, 29.0], [8100.0, 22.0], [8000.0, 22.0], [8300.0, 23.0], [8200.0, 19.0], [8600.0, 17.0], [8500.0, 34.0], [8700.0, 15.0], [8400.0, 21.0], [8800.0, 33.0], [9000.0, 18.0], [9200.0, 13.0], [8900.0, 20.0], [9100.0, 21.0], [9300.0, 30.0], [9700.0, 15.0], [9400.0, 22.0], [9600.0, 22.0], [9500.0, 18.0], [10100.0, 24.0], [9800.0, 28.0], [10200.0, 31.0], [10000.0, 21.0], [9900.0, 28.0], [10300.0, 28.0], [10700.0, 21.0], [10400.0, 23.0], [10600.0, 17.0], [10500.0, 27.0], [11000.0, 28.0], [10900.0, 19.0], [11200.0, 15.0], [10800.0, 24.0], [11100.0, 29.0], [11300.0, 26.0], [11700.0, 25.0], [11500.0, 33.0], [11400.0, 18.0], [11600.0, 16.0], [11800.0, 25.0], [12200.0, 19.0], [12100.0, 20.0], [11900.0, 25.0], [12000.0, 29.0], [12600.0, 14.0], [12300.0, 17.0], [12700.0, 17.0], [12400.0, 13.0], [12500.0, 16.0], [12800.0, 20.0], [13100.0, 19.0], [13200.0, 24.0], [13000.0, 29.0], [12900.0, 16.0], [13300.0, 21.0], [13500.0, 14.0], [13600.0, 10.0], [13400.0, 18.0], [13800.0, 12.0], [13700.0, 4.0], [14100.0, 2.0], [13900.0, 3.0], [14000.0, 2.0], [14200.0, 3.0], [14300.0, 1.0], [14400.0, 4.0], [14700.0, 3.0], [14500.0, 4.0], [14600.0, 2.0], [15200.0, 1.0], [15500.0, 1.0], [15800.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 15800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 176.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2796.0, "series": [{"data": [[0.0, 1153.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 176.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2796.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 6.3533057851239585, "minX": 1.699972079E12, "maxY": 2139.8170731707323, "series": [{"data": [[1.699972099E12, 248.13868613138695], [1.6999721E12, 90.21229050279322], [1.699972079E12, 7.65938864628821], [1.69997208E12, 6.3533057851239585], [1.699972097E12, 553.0612244897958], [1.699972098E12, 398.07361963190203], [1.699972083E12, 856.6492537313434], [1.699972084E12, 1194.033333333333], [1.699972085E12, 1538.8957055214723], [1.699972081E12, 39.06549118387909], [1.699972082E12, 467.91095890410975], [1.699972089E12, 1852.5940594059416], [1.69997209E12, 1673.082802547771], [1.699972086E12, 1885.2767295597487], [1.699972087E12, 2139.8170731707323], [1.699972088E12, 2026.5958904109596], [1.699972094E12, 1028.5902777777783], [1.699972095E12, 878.1019108280259], [1.699972096E12, 713.0867052023121], [1.699972091E12, 1517.1096774193543], [1.699972092E12, 1353.0635838150288], [1.699972093E12, 1183.5602409638552]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.6999721E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 9.189655172413792, "minX": 1.0, "maxY": 14570.0, "series": [{"data": [[2.0, 329.4146341463415], [3.0, 145.0095238095238], [4.0, 112.18320610687023], [5.0, 94.75147928994083], [6.0, 101.15189873417722], [7.0, 110.89393939393939], [8.0, 9.189655172413792], [9.0, 381.7777777777777], [10.0, 1003.6296296296297], [11.0, 759.4999999999999], [12.0, 12.9], [13.0, 1004.2857142857142], [14.0, 2696.7], [15.0, 1750.875], [16.0, 29.200000000000003], [17.0, 5639.2], [18.0, 2294.3333333333335], [19.0, 2773.6], [20.0, 6604.0], [21.0, 104.75], [22.0, 6809.25], [23.0, 96.0], [24.0, 9155.0], [25.0, 6662.0], [26.0, 3411.5], [27.0, 6784.0], [28.0, 2306.3333333333335], [29.0, 4883.0], [30.0, 49.5], [31.0, 3105.666666666667], [33.0, 1898.75], [32.0, 2496.333333333333], [34.0, 2691.0], [35.0, 2952.2], [37.0, 1400.6999999999998], [36.0, 4778.666666666667], [38.0, 1782.75], [39.0, 3330.25], [40.0, 44.5], [41.0, 13303.0], [43.0, 13292.0], [42.0, 13212.0], [45.0, 4573.0], [44.0, 9301.333333333334], [47.0, 4407.666666666667], [46.0, 6944.5], [49.0, 13714.0], [48.0, 13298.0], [51.0, 13092.0], [50.0, 13314.0], [52.0, 13375.0], [55.0, 6656.0], [54.0, 6591.5], [57.0, 14232.0], [56.0, 13438.0], [59.0, 13090.0], [58.0, 13271.0], [61.0, 14570.0], [60.0, 13375.0], [63.0, 2563.833333333333], [62.0, 13452.0], [66.0, 3399.0], [65.0, 6802.5], [64.0, 5380.0], [67.0, 52.0], [69.0, 7788.5], [70.0, 7006.25], [71.0, 14051.0], [68.0, 13505.0], [75.0, 14044.0], [74.0, 13530.0], [73.0, 13061.0], [78.0, 64.0], [79.0, 13486.0], [77.0, 13225.5], [83.0, 13243.0], [81.0, 13808.0], [80.0, 13442.0], [84.0, 5551.4], [86.0, 6626.0], [87.0, 6698.5], [85.0, 13035.0], [88.0, 1996.8571428571427], [91.0, 13404.0], [90.0, 13478.0], [89.0, 12999.0], [95.0, 13115.0], [94.0, 12970.0], [93.0, 13253.0], [92.0, 13083.0], [98.0, 6749.0], [99.0, 3375.75], [97.0, 13248.0], [96.0, 13858.0], [100.0, 4441.666666666667], [103.0, 4587.666666666667], [102.0, 8682.333333333334], [101.0, 139.0], [104.0, 6753.0], [105.0, 110.0], [106.0, 9049.0], [107.0, 4575.666666666667], [109.0, 5604.6], [110.0, 6712.0], [108.0, 287.0], [111.0, 13917.0], [115.0, 4585.333333333333], [114.0, 13065.0], [113.0, 13846.0], [112.0, 13316.0], [117.0, 6657.0], [116.0, 6974.5], [119.0, 12968.0], [118.0, 13559.0], [123.0, 13034.0], [122.0, 13197.0], [120.0, 13692.0], [124.0, 6773.0], [127.0, 13322.0], [126.0, 12975.0], [125.0, 12881.0], [133.0, 164.5], [135.0, 3381.75], [134.0, 13042.5], [132.0, 13849.0], [131.0, 13318.0], [130.0, 12874.0], [129.0, 12870.0], [128.0, 13934.0], [143.0, 12852.0], [142.0, 12887.0], [141.0, 13351.0], [140.0, 13617.0], [139.0, 12958.0], [137.0, 13054.0], [136.0, 13318.0], [149.0, 6815.5], [151.0, 12787.0], [150.0, 13377.0], [148.0, 13559.0], [147.0, 13358.0], [146.0, 12785.0], [145.0, 12846.0], [144.0, 13276.0], [158.0, 13189.5], [156.0, 14103.0], [155.0, 12731.0], [154.0, 12825.0], [153.0, 12878.0], [152.0, 13093.0], [167.0, 13151.0], [166.0, 12909.0], [163.0, 12700.0], [162.0, 13011.0], [161.0, 13128.0], [175.0, 2258.285714285714], [174.0, 6536.5], [173.0, 6450.0], [172.0, 12987.0], [171.0, 13347.5], [169.0, 13239.0], [168.0, 12965.0], [176.0, 133.5], [177.0, 8915.0], [180.0, 226.0], [183.0, 12802.0], [182.0, 13340.0], [181.0, 13109.0], [179.0, 13096.0], [178.0, 13362.0], [187.0, 8811.666666666666], [191.0, 13693.0], [190.0, 12626.5], [188.0, 12598.0], [185.0, 12600.0], [193.0, 2337.1666666666665], [192.0, 4241.333333333333], [195.0, 97.0], [194.0, 4356.666666666667], [196.0, 8604.666666666666], [199.0, 12773.0], [198.0, 12477.0], [207.0, 12369.0], [206.0, 12523.0], [205.0, 12521.0], [204.0, 12385.0], [203.0, 12499.0], [202.0, 12824.5], [200.0, 12376.0], [215.0, 12782.0], [214.0, 12421.0], [213.0, 12553.0], [212.0, 13353.0], [211.0, 12389.0], [210.0, 12774.5], [208.0, 13021.0], [216.0, 6329.0], [220.0, 6633.5], [223.0, 12310.0], [222.0, 12422.0], [221.0, 12673.0], [219.0, 12867.0], [218.0, 12991.0], [217.0, 12725.0], [231.0, 13048.0], [230.0, 12512.0], [229.0, 12635.0], [227.0, 12319.0], [226.0, 14426.0], [225.0, 12877.0], [224.0, 12320.0], [239.0, 12225.0], [238.0, 12963.0], [237.0, 12217.0], [235.0, 12916.0], [234.0, 12332.0], [233.0, 12490.0], [232.0, 12204.0], [247.0, 12527.0], [245.0, 12147.0], [244.0, 13734.0], [243.0, 12559.0], [242.0, 13071.0], [241.0, 12227.0], [240.0, 12220.0], [248.0, 191.0], [255.0, 12247.5], [253.0, 12163.0], [252.0, 12821.0], [251.0, 12225.0], [249.0, 12848.0], [270.0, 12172.0], [262.0, 6187.5], [261.0, 12436.0], [260.0, 12249.0], [263.0, 12318.0], [257.0, 12449.0], [256.0, 12235.0], [259.0, 13060.0], [258.0, 12096.0], [269.0, 6776.5], [268.0, 6138.0], [271.0, 12178.0], [267.0, 12203.0], [266.0, 12105.0], [265.0, 13864.0], [264.0, 12082.0], [286.0, 11938.0], [272.0, 6161.0], [273.0, 12007.0], [275.0, 12507.0], [274.0, 12003.0], [279.0, 12022.0], [278.0, 12616.0], [276.0, 285.0], [277.0, 8246.666666666666], [283.0, 6112.5], [282.0, 6207.0], [287.0, 4337.666666666667], [281.0, 12404.0], [280.0, 12812.0], [285.0, 11937.0], [284.0, 11951.0], [302.0, 12175.0], [290.0, 6064.5], [291.0, 4098.333333333334], [289.0, 8095.0], [288.0, 285.0], [295.0, 12435.0], [294.0, 11991.0], [293.0, 12134.0], [292.0, 11970.0], [303.0, 12328.0], [297.0, 12193.0], [296.0, 11894.0], [301.0, 11900.0], [300.0, 13470.0], [299.0, 11899.0], [298.0, 11907.0], [306.0, 4155.666666666666], [305.0, 6328.0], [304.0, 11850.0], [311.0, 12276.0], [310.0, 12095.0], [309.0, 11839.0], [308.0, 12127.5], [314.0, 6891.5], [319.0, 5977.0], [318.0, 12018.0], [317.0, 12043.0], [316.0, 12109.0], [315.0, 12138.5], [312.0, 12710.0], [334.0, 11718.0], [333.0, 6227.5], [335.0, 12856.0], [332.0, 12121.0], [331.0, 12605.0], [330.0, 11722.0], [329.0, 11701.0], [328.0, 11923.0], [327.0, 11858.0], [320.0, 11912.0], [323.0, 11866.0], [321.0, 12559.0], [326.0, 12080.0], [325.0, 11940.0], [324.0, 13059.0], [350.0, 11805.0], [338.0, 3147.0], [337.0, 6255.0], [336.0, 11791.0], [339.0, 4484.666666666666], [340.0, 6046.0], [341.0, 11818.0], [342.0, 12016.0], [351.0, 11892.0], [345.0, 12029.0], [344.0, 11938.5], [349.0, 11915.0], [348.0, 11804.0], [347.0, 12788.0], [346.0, 11675.0], [366.0, 11603.0], [354.0, 6057.5], [355.0, 4069.3333333333335], [356.0, 4192.666666666666], [357.0, 12460.0], [359.0, 12866.0], [353.0, 11728.0], [352.0, 11981.0], [358.0, 12000.0], [367.0, 11601.0], [361.0, 11614.0], [360.0, 12081.0], [365.0, 11665.0], [364.0, 11608.0], [363.0, 12632.0], [362.0, 11759.0], [381.0, 11723.0], [371.0, 501.5], [370.0, 11563.0], [369.0, 11765.0], [368.0, 11797.0], [375.0, 407.0], [374.0, 3316.5], [373.0, 12059.0], [372.0, 11626.0], [377.0, 4590.666666666667], [376.0, 11556.5], [383.0, 11732.0], [382.0, 12144.0], [380.0, 11558.0], [379.0, 12085.5], [398.0, 11558.0], [389.0, 6010.5], [390.0, 525.0], [391.0, 11793.5], [387.0, 11722.0], [386.0, 11601.0], [385.0, 11838.0], [384.0, 11838.0], [388.0, 6044.5], [399.0, 11427.0], [392.0, 11970.0], [397.0, 12215.0], [396.0, 12164.5], [394.0, 12063.0], [393.0, 11466.0], [414.0, 6152.0], [408.0, 6319.0], [411.0, 6152.0], [413.0, 4180.666666666666], [415.0, 2650.6], [412.0, 12916.0], [410.0, 11405.0], [409.0, 12266.0], [407.0, 11584.0], [401.0, 11433.0], [400.0, 11452.0], [403.0, 12016.0], [402.0, 11427.0], [406.0, 12144.0], [404.0, 12258.0], [429.0, 11913.0], [421.0, 4276.0], [420.0, 11580.0], [424.0, 4197.333333333334], [425.0, 11396.0], [422.0, 6476.5], [423.0, 4257.666666666666], [417.0, 11686.0], [416.0, 11367.0], [431.0, 11575.0], [430.0, 11446.0], [428.0, 11875.0], [419.0, 12344.5], [427.0, 12091.0], [426.0, 11798.0], [446.0, 11526.0], [441.0, 5985.0], [443.0, 6499.75], [445.0, 2993.6], [447.0, 13002.0], [444.0, 11764.0], [440.0, 11312.0], [439.0, 11481.0], [433.0, 13503.0], [432.0, 11724.0], [435.0, 11320.0], [434.0, 12367.0], [438.0, 11723.0], [437.0, 11627.0], [436.0, 11332.0], [462.0, 11194.0], [454.0, 496.0], [453.0, 6068.0], [452.0, 11374.0], [455.0, 7753.666666666667], [449.0, 11521.0], [448.0, 11260.0], [451.0, 11261.0], [450.0, 12148.0], [463.0, 11444.0], [457.0, 11667.0], [456.0, 11235.0], [461.0, 11184.0], [460.0, 12345.0], [459.0, 11577.0], [458.0, 11793.0], [476.0, 4170.333333333334], [467.0, 6068.5], [466.0, 6983.5], [471.0, 6207.5], [465.0, 11382.0], [464.0, 11331.0], [470.0, 11226.0], [469.0, 11950.0], [468.0, 11820.0], [472.0, 6411.0], [473.0, 11725.0], [479.0, 11886.0], [478.0, 11572.5], [475.0, 11434.0], [474.0, 11102.0], [487.0, 5804.0], [486.0, 2851.8], [485.0, 6173.0], [484.0, 4229.0], [488.0, 3069.8], [489.0, 4781.0], [491.0, 11055.0], [490.0, 11213.0], [494.0, 5982.0], [495.0, 11153.0], [493.0, 11080.0], [492.0, 11307.0], [483.0, 11858.0], [482.0, 11178.0], [481.0, 11580.0], [480.0, 11163.0], [510.0, 10955.0], [496.0, 5979.5], [497.0, 11118.0], [499.0, 13167.0], [498.0, 11028.0], [511.0, 4560.666666666666], [509.0, 11566.0], [508.0, 11151.0], [507.0, 11396.5], [505.0, 11005.0], [504.0, 11269.0], [503.0, 11631.0], [502.0, 11277.5], [500.0, 11275.0], [538.0, 10922.5], [514.0, 3670.25], [512.0, 4246.666666666666], [526.0, 10871.0], [524.0, 10905.0], [522.0, 11312.0], [520.0, 10959.0], [542.0, 11191.0], [536.0, 10892.0], [518.0, 12382.0], [516.0, 11338.0], [534.0, 11847.0], [532.0, 10877.0], [530.0, 11003.0], [528.0, 11786.0], [572.0, 10854.0], [552.0, 3528.5], [554.0, 4382.333333333334], [574.0, 10838.0], [570.0, 10988.0], [568.0, 11364.0], [558.0, 11330.0], [550.0, 10919.0], [548.0, 11138.5], [546.0, 11120.0], [544.0, 11115.0], [556.0, 11564.0], [566.0, 10685.0], [564.0, 11139.0], [562.0, 11047.0], [560.0, 10737.0], [606.0, 10851.0], [582.0, 4238.666666666666], [584.0, 5749.75], [586.0, 11003.0], [590.0, 12012.0], [576.0, 11171.0], [580.0, 10594.0], [578.0, 10819.0], [588.0, 11513.0], [598.0, 1041.0], [604.0, 10531.0], [602.0, 10555.0], [600.0, 10566.0], [596.0, 10834.0], [594.0, 11153.0], [592.0, 10551.0], [636.0, 7875.0], [620.0, 5878.5], [612.0, 5958.5], [614.0, 11086.0], [622.0, 10865.0], [610.0, 10906.0], [608.0, 10640.0], [618.0, 3674.75], [638.0, 10929.0], [626.0, 10553.0], [624.0, 11302.0], [634.0, 10399.0], [632.0, 10443.0], [630.0, 10447.0], [628.0, 10999.0], [664.0, 5664.0], [644.0, 5776.5], [642.0, 10451.0], [640.0, 11909.0], [646.0, 10890.5], [648.0, 6167.0], [650.0, 10888.0], [654.0, 1060.0], [670.0, 10326.0], [668.0, 10661.0], [662.0, 10328.0], [660.0, 10756.0], [658.0, 11379.0], [656.0, 10947.0], [698.0, 11162.0], [688.0, 3011.2], [696.0, 10694.0], [694.0, 10637.0], [692.0, 10232.0], [690.0, 10430.0], [684.0, 10254.0], [682.0, 10378.0], [678.0, 10498.0], [676.0, 10280.0], [674.0, 10277.0], [672.0, 10587.0], [730.0, 5745.5], [712.0, 6030.5], [734.0, 10286.0], [728.0, 10112.0], [710.0, 10399.0], [708.0, 10547.0], [706.0, 11589.0], [726.0, 10126.0], [722.0, 10245.0], [720.0, 11203.0], [718.0, 10142.0], [716.0, 10130.0], [714.0, 10132.0], [764.0, 6713.5], [738.0, 3495.5], [750.0, 5847.5], [736.0, 10097.0], [748.0, 10232.0], [746.0, 10188.0], [744.0, 10450.0], [760.0, 6269.5], [742.0, 9994.0], [740.0, 10755.0], [766.0, 3585.75], [762.0, 10050.0], [758.0, 9925.0], [756.0, 10164.5], [754.0, 10663.0], [752.0, 10842.0], [772.0, 6217.5], [796.0, 4166.333333333334], [768.0, 5743.0], [770.0, 9909.0], [782.0, 10305.0], [780.0, 9864.0], [778.0, 10558.0], [776.0, 10255.0], [792.0, 9994.0], [774.0, 9893.0], [794.0, 10373.0], [784.0, 10542.0], [786.0, 10202.0], [788.0, 9907.0], [790.0, 9885.0], [798.0, 5611.0], [802.0, 1532.0], [800.0, 9808.0], [806.0, 5597.5], [804.0, 10200.0], [814.0, 9938.0], [812.0, 10352.0], [810.0, 12801.0], [820.0, 6077.5], [818.0, 10032.0], [822.0, 9744.5], [824.0, 5709.0], [826.0, 5703.5], [830.0, 5926.5], [828.0, 10249.0], [816.0, 9660.0], [836.0, 9860.0], [844.0, 6858.666666666667], [838.0, 9717.0], [834.0, 9622.0], [832.0, 9609.0], [858.0, 9996.0], [862.0, 10051.0], [860.0, 3624.75], [840.0, 5560.5], [842.0, 5522.0], [846.0, 4844.8], [848.0, 5666.0], [852.0, 7266.333333333333], [850.0, 9849.0], [854.0, 9492.0], [868.0, 10992.0], [870.0, 7166.333333333333], [864.0, 7119.666666666667], [878.0, 5392.0], [866.0, 4096.666666666666], [880.0, 5474.5], [888.0, 10794.0], [890.0, 9355.0], [892.0, 9545.0], [894.0, 9347.0], [884.0, 9384.0], [882.0, 9605.0], [886.0, 9901.0], [874.0, 5418.5], [872.0, 4208.0], [876.0, 5881.5], [902.0, 4293.666666666666], [922.0, 9996.0], [926.0, 9559.0], [920.0, 9993.0], [900.0, 9816.0], [898.0, 10040.0], [896.0, 10135.0], [908.0, 5986.0], [906.0, 9467.0], [904.0, 9287.0], [910.0, 9923.0], [912.0, 6173.5], [918.0, 10437.0], [916.0, 9412.5], [914.0, 9681.5], [924.0, 9367.0], [928.0, 5746.0], [930.0, 4325.333333333334], [932.0, 9617.0], [934.0, 9359.0], [938.0, 5818.0], [936.0, 9181.0], [940.0, 5490.0], [942.0, 5616.5], [946.0, 9481.0], [948.0, 9312.0], [950.0, 11336.0], [958.0, 9808.0], [956.0, 9657.0], [952.0, 9093.0], [964.0, 4462.333333333334], [966.0, 5283.0], [962.0, 4340.0], [974.0, 12876.0], [970.0, 8969.0], [968.0, 9317.0], [984.0, 9704.0], [986.0, 9378.0], [988.0, 5503.0], [990.0, 8866.0], [976.0, 9366.0], [978.0, 9316.0], [980.0, 9016.5], [982.0, 9151.0], [992.0, 9005.5], [1000.0, 5822.0], [1002.0, 8807.0], [1004.0, 8824.0], [996.0, 9143.0], [998.0, 8936.0], [1006.0, 9323.0], [1008.0, 5374.5], [1022.0, 8813.0], [1010.0, 8792.0], [1012.0, 8819.0], [1014.0, 8801.5], [1016.0, 5538.5], [1018.0, 9180.0], [1020.0, 6722.666666666667], [1072.0, 9107.0], [1032.0, 6014.5], [1028.0, 8734.0], [1024.0, 9631.0], [1056.0, 8610.0], [1080.0, 6516.333333333333], [1076.0, 9101.0], [1036.0, 8824.0], [1084.0, 8548.0], [1060.0, 5201.5], [1068.0, 5767.5], [1064.0, 3740.5], [1044.0, 5698.5], [1040.0, 8681.0], [1048.0, 5937.5], [1052.0, 5270.0], [1092.0, 8673.0], [1140.0, 4438.0], [1088.0, 4563.0], [1096.0, 9392.0], [1100.0, 5279.5], [1116.0, 8380.0], [1112.0, 8555.0], [1108.0, 8430.0], [1120.0, 5387.0], [1136.0, 4200.0], [1144.0, 9215.0], [1148.0, 8203.0], [1124.0, 5291.5], [1128.0, 5658.0], [1132.0, 8444.0], [1200.0, 5189.5], [1212.0, 7898.0], [1160.0, 8298.0], [1156.0, 8920.0], [1152.0, 8490.0], [1180.0, 8038.0], [1176.0, 8584.0], [1204.0, 9226.0], [1208.0, 8096.0], [1184.0, 8060.0], [1168.0, 8197.0], [1172.0, 8059.0], [1188.0, 5049.0], [1272.0, 4079.666666666667], [1216.0, 6242.0], [1252.0, 3564.75], [1248.0, 9022.0], [1256.0, 7761.0], [1260.0, 7800.0], [1276.0, 5596.0], [1268.0, 7908.0], [1220.0, 8048.0], [1224.0, 7969.0], [1228.0, 7878.0], [1264.0, 8158.0], [1236.0, 6713.0], [1232.0, 8026.0], [1240.0, 8219.5], [1244.0, 5273.0], [1288.0, 7769.0], [1308.0, 4953.0], [1280.0, 7990.0], [1284.0, 5121.0], [1312.0, 4190.0], [1316.0, 7709.0], [1320.0, 7601.0], [1324.0, 7640.0], [1340.0, 7855.0], [1336.0, 4206.666666666667], [1332.0, 6354.0], [1328.0, 7776.0], [1292.0, 7637.0], [1304.0, 4980.25], [1300.0, 7600.0], [1296.0, 7739.5], [1356.0, 7360.0], [1396.0, 7576.0], [1404.0, 7578.0], [1344.0, 7851.0], [1372.0, 7568.0], [1392.0, 7201.0], [1352.0, 8107.0], [1348.0, 7466.0], [1400.0, 7490.0], [1368.0, 5009.0], [1364.0, 7398.0], [1360.0, 7658.0], [1376.0, 4876.5], [1384.0, 4886.0], [1380.0, 7996.0], [1464.0, 5125.5], [1416.0, 5665.0], [1408.0, 7791.0], [1412.0, 5034.5], [1468.0, 4941.25], [1440.0, 7131.0], [1444.0, 7802.0], [1452.0, 7771.0], [1460.0, 8825.0], [1456.0, 8543.0], [1420.0, 6020.0], [1432.0, 4201.0], [1428.0, 7191.0], [1424.0, 7333.5], [1484.0, 7732.0], [1520.0, 4437.333333333333], [1488.0, 5377.0], [1480.0, 7106.0], [1476.0, 6987.0], [1472.0, 6965.0], [1528.0, 6688.0], [1524.0, 7546.0], [1532.0, 6776.0], [1504.0, 5026.75], [1508.0, 6747.0], [1512.0, 4688.333333333333], [1516.0, 6730.0], [1492.0, 8682.0], [1496.0, 4645.666666666667], [1500.0, 6970.0], [1544.0, 6633.0], [1548.0, 4407.0], [1552.0, 4892.25], [1556.0, 6575.0], [1564.0, 5110.5], [1540.0, 7662.0], [1536.0, 7226.0], [1576.0, 4771.0], [1580.0, 6734.0], [1572.0, 5437.0], [1568.0, 6532.0], [1596.0, 6480.0], [1592.0, 6380.0], [1588.0, 6505.0], [1584.0, 6627.0], [1600.0, 6542.0], [1648.0, 4536.0], [1604.0, 3976.4], [1608.0, 6332.0], [1612.0, 6524.0], [1628.0, 6600.0], [1624.0, 6376.0], [1620.0, 7468.0], [1616.0, 6286.0], [1636.0, 4743.5], [1632.0, 6444.0], [1660.0, 6624.0], [1652.0, 4673.0], [1656.0, 4965.5], [1640.0, 4752.0], [1644.0, 6588.0], [1712.0, 6493.0], [1664.0, 4859.0], [1676.0, 5054.0], [1672.0, 6608.0], [1668.0, 6125.0], [1716.0, 6422.0], [1696.0, 6522.0], [1700.0, 5985.0], [1704.0, 5993.0], [1724.0, 6301.0], [1720.0, 6192.0], [1680.0, 4537.5], [1688.0, 6197.0], [1684.0, 6058.0], [1692.0, 3506.9166666666665], [1732.0, 5837.0], [1780.0, 5659.0], [1728.0, 4505.0], [1784.0, 4934.333333333333], [1788.0, 4714.0], [1736.0, 5866.0], [1740.0, 6063.0], [1776.0, 5737.5], [1748.0, 6066.5], [1744.0, 5765.0], [1752.0, 5854.0], [1756.0, 5685.0], [1760.0, 4404.5], [1764.0, 6069.0], [1768.0, 5885.0], [1772.0, 6311.0], [1800.0, 6198.5], [1816.0, 4284.25], [1792.0, 5944.0], [1820.0, 6133.0], [1796.0, 6111.0], [1804.0, 4626.5], [1824.0, 5514.0], [1852.0, 4099.333333333333], [1844.0, 5670.0], [1840.0, 5895.0], [1848.0, 5407.0], [1836.0, 5608.0], [1832.0, 6352.0], [1812.0, 6011.0], [1808.0, 6048.0], [1904.0, 4779.0], [1860.0, 6249.0], [1864.0, 7523.0], [1856.0, 3731.0], [1880.0, 4832.0], [1884.0, 5695.0], [1912.0, 5183.0], [1916.0, 5379.0], [1888.0, 4957.5], [1892.0, 5395.0], [1896.0, 5252.0], [1900.0, 5417.0], [1872.0, 4296.333333333333], [1876.0, 5928.0], [1920.0, 5420.0], [1940.0, 4510.0], [1944.0, 5252.0], [1948.0, 5084.0], [1928.0, 4562.0], [1924.0, 5227.0], [1932.0, 3886.0], [1960.0, 4487.5], [1964.0, 4627.0], [1952.0, 5309.0], [1956.0, 6552.0], [1968.0, 4754.5], [1972.0, 5400.0], [1976.0, 4915.0], [1980.0, 4935.0], [1936.0, 4960.0], [2044.0, 4196.333333333333], [1992.0, 4750.0], [2012.0, 4225.333333333333], [1988.0, 5299.0], [2024.0, 4443.0], [2020.0, 4715.0], [2016.0, 4771.0], [2028.0, 4710.0], [2032.0, 4484.5], [1996.0, 4842.0], [2036.0, 4623.0], [2040.0, 4782.0], [2008.0, 5477.0], [2004.0, 4839.0], [2000.0, 4950.5], [2072.0, 4566.0], [2064.0, 5244.0], [2056.0, 4519.5], [2048.0, 5524.0], [2120.0, 4313.0], [2112.0, 4324.0], [2152.0, 4610.666666666667], [2160.0, 4434.0], [2168.0, 4143.5], [2144.0, 5824.0], [2128.0, 4731.0], [2096.0, 4796.0], [2104.0, 4489.0], [2192.0, 4933.0], [2176.0, 4387.333333333333], [2184.0, 4226.0], [2065.0, 4549.5], [2073.0, 5055.0], [2049.0, 4567.5], [2105.0, 4292.0], [2057.0, 4633.0], [2113.0, 3916.0], [2121.0, 4829.0], [2161.0, 4530.0], [2169.0, 4358.0], [2153.0, 4098.333333333333], [2145.0, 4249.0], [2129.0, 4782.0], [2137.0, 4447.5], [2081.0, 4877.5], [2097.0, 4136.5], [2089.0, 4520.5], [2177.0, 4494.0], [2193.0, 4045.0], [2185.0, 4115.0], [1025.0, 9138.0], [1077.0, 5225.0], [1033.0, 5682.0], [1053.0, 5548.0], [1029.0, 9851.0], [1049.0, 8653.0], [1045.0, 9427.0], [1041.0, 9399.0], [1037.0, 8658.0], [1073.0, 8859.0], [1085.0, 5613.5], [1081.0, 5123.0], [1065.0, 3231.2], [1069.0, 8947.0], [1057.0, 9078.0], [1061.0, 8807.0], [1093.0, 8414.0], [1137.0, 5626.5], [1089.0, 5531.5], [1097.0, 8599.0], [1101.0, 10340.0], [1113.0, 4479.0], [1109.0, 8380.0], [1105.0, 9129.5], [1141.0, 5370.0], [1117.0, 8410.0], [1125.0, 4324.5], [1121.0, 8428.0], [1129.0, 8905.0], [1149.0, 8382.0], [1145.0, 8519.0], [1133.0, 5109.0], [1161.0, 8397.0], [1153.0, 8176.0], [1165.0, 8463.0], [1201.0, 5038.5], [1205.0, 8230.0], [1209.0, 4007.666666666667], [1169.0, 5554.5], [1177.0, 5248.0], [1173.0, 8117.0], [1181.0, 8727.0], [1189.0, 3651.0], [1193.0, 6254.666666666667], [1197.0, 8106.5], [1185.0, 8404.0], [1213.0, 8838.0], [1269.0, 8245.0], [1277.0, 3867.5], [1217.0, 3621.25], [1261.0, 8148.0], [1249.0, 9020.0], [1273.0, 3684.75], [1265.0, 7732.0], [1229.0, 8500.0], [1225.0, 8096.0], [1221.0, 7950.0], [1241.0, 5273.0], [1237.0, 7900.0], [1233.0, 8537.0], [1245.0, 5786.0], [1329.0, 7514.0], [1281.0, 5259.5], [1309.0, 8775.0], [1285.0, 7851.0], [1337.0, 7448.0], [1341.0, 7402.0], [1333.0, 4919.0], [1293.0, 7652.0], [1289.0, 7665.0], [1313.0, 4900.0], [1317.0, 7747.0], [1321.0, 7705.0], [1325.0, 8155.0], [1301.0, 7566.0], [1297.0, 8220.0], [1305.0, 4015.0], [1349.0, 5218.0], [1345.0, 7804.0], [1393.0, 7942.0], [1397.0, 7454.0], [1405.0, 7210.0], [1401.0, 8090.0], [1369.0, 4833.0], [1365.0, 7531.0], [1361.0, 8197.0], [1373.0, 3720.75], [1385.0, 7366.0], [1381.0, 7513.0], [1377.0, 8472.0], [1389.0, 7252.0], [1457.0, 5008.5], [1461.0, 4776.5], [1409.0, 5323.5], [1441.0, 7307.0], [1445.0, 7653.0], [1449.0, 7204.0], [1469.0, 4950.0], [1453.0, 5238.5], [1421.0, 4243.0], [1417.0, 7590.0], [1413.0, 7423.0], [1433.0, 7514.0], [1429.0, 7396.0], [1425.0, 7612.0], [1437.0, 7398.0], [1529.0, 6733.0], [1521.0, 4800.0], [1473.0, 4810.5], [1485.0, 7226.0], [1477.0, 7163.0], [1505.0, 7374.0], [1509.0, 6789.0], [1533.0, 6748.0], [1525.0, 7709.0], [1517.0, 7277.0], [1489.0, 6927.0], [1493.0, 7207.0], [1497.0, 3704.5], [1501.0, 7163.0], [1549.0, 4503.0], [1597.0, 6377.0], [1545.0, 6633.0], [1541.0, 6634.0], [1593.0, 3029.0], [1589.0, 8115.0], [1569.0, 6647.0], [1565.0, 5656.0], [1561.0, 6597.0], [1557.0, 6587.0], [1553.0, 7964.0], [1573.0, 6537.0], [1577.0, 4604.5], [1581.0, 6736.0], [1613.0, 6869.0], [1653.0, 5739.5], [1609.0, 4737.5], [1605.0, 6998.0], [1649.0, 7036.0], [1621.0, 4599.0], [1625.0, 6281.0], [1629.0, 7219.0], [1633.0, 7028.0], [1661.0, 6217.0], [1657.0, 6472.0], [1637.0, 4214.666666666667], [1641.0, 6346.0], [1645.0, 6624.0], [1665.0, 3760.833333333333], [1725.0, 4352.666666666667], [1681.0, 4576.666666666667], [1685.0, 6245.0], [1689.0, 6283.0], [1693.0, 6653.0], [1701.0, 6522.0], [1705.0, 5991.0], [1709.0, 6189.0], [1717.0, 6679.0], [1713.0, 6152.0], [1677.0, 6297.0], [1673.0, 6086.0], [1733.0, 6847.0], [1781.0, 4658.0], [1729.0, 4577.5], [1777.0, 4638.0], [1741.0, 6588.0], [1737.0, 5850.0], [1789.0, 4421.666666666667], [1785.0, 6267.0], [1749.0, 5974.0], [1745.0, 5932.0], [1753.0, 5781.0], [1757.0, 6251.0], [1773.0, 5822.0], [1769.0, 7399.0], [1765.0, 5865.0], [1841.0, 5498.0], [1805.0, 4944.0], [1801.0, 5856.0], [1797.0, 5997.0], [1845.0, 5743.0], [1793.0, 4411.75], [1817.0, 4531.5], [1849.0, 4370.5], [1853.0, 4368.0], [1829.0, 6312.0], [1825.0, 6392.0], [1833.0, 5431.0], [1809.0, 5549.0], [1813.0, 5839.0], [1865.0, 5692.0], [1861.0, 4869.0], [1857.0, 5989.0], [1881.0, 4354.0], [1877.0, 5496.0], [1873.0, 5473.0], [1869.0, 4966.333333333333], [1905.0, 4262.0], [1909.0, 5584.5], [1917.0, 5187.0], [1901.0, 5270.0], [1897.0, 5244.0], [1893.0, 5276.0], [1889.0, 5685.0], [1929.0, 7306.0], [1925.0, 4816.0], [1921.0, 4672.5], [1945.0, 4280.5], [1941.0, 5424.0], [1949.0, 5091.0], [1933.0, 5664.5], [1969.0, 5157.0], [1973.0, 4946.0], [1977.0, 6557.0], [1957.0, 6226.0], [1965.0, 5094.0], [1953.0, 5649.0], [1981.0, 4897.0], [1937.0, 4687.0], [1993.0, 5208.0], [2045.0, 5354.0], [1985.0, 5079.666666666667], [2013.0, 5299.0], [1989.0, 4466.5], [2021.0, 5414.0], [2017.0, 5481.0], [2025.0, 4780.0], [2033.0, 6381.0], [2037.0, 4778.0], [2009.0, 4918.0], [2005.0, 5496.0], [2001.0, 5174.0], [2066.0, 4514.0], [2074.0, 5578.0], [2106.0, 4361.333333333333], [2050.0, 5251.0], [2058.0, 4548.0], [2114.0, 4698.0], [2122.0, 5099.0], [2154.0, 4216.0], [2162.0, 4763.0], [2170.0, 4732.0], [2146.0, 4140.0], [2130.0, 4264.666666666667], [2138.0, 4473.0], [2082.0, 4734.0], [2090.0, 4459.0], [2098.0, 4910.0], [2178.0, 4437.5], [2186.0, 4977.0], [2194.0, 4069.0], [2067.0, 4520.0], [2075.0, 4532.0], [2051.0, 4370.5], [2107.0, 4387.0], [2059.0, 4555.0], [2115.0, 4323.0], [2163.0, 4148.0], [2155.0, 4256.0], [2171.0, 4241.0], [2147.0, 4450.5], [2123.0, 5036.5], [2131.0, 4913.0], [2139.0, 4279.0], [2083.0, 4431.333333333333], [2091.0, 5483.0], [2099.0, 4420.0], [2179.0, 4912.5], [2195.0, 4219.0], [2187.0, 4881.0], [543.0, 11508.0], [513.0, 4331.666666666666], [525.0, 10938.0], [523.0, 10912.0], [521.0, 11218.0], [515.0, 4152.666666666666], [533.0, 6018.5], [541.0, 11243.0], [539.0, 10863.0], [519.0, 11572.0], [517.0, 11142.0], [535.0, 10824.0], [531.0, 11098.0], [529.0, 11167.0], [573.0, 10752.0], [551.0, 3357.0], [553.0, 4407.0], [555.0, 10769.0], [559.0, 10744.0], [549.0, 11172.0], [545.0, 10894.0], [557.0, 11045.0], [565.0, 6152.0], [567.0, 5814.5], [575.0, 11922.0], [571.0, 10721.0], [569.0, 10693.0], [563.0, 10765.0], [561.0, 11099.0], [607.0, 10709.0], [583.0, 843.0], [581.0, 5664.0], [579.0, 10622.0], [577.0, 11434.0], [591.0, 10687.0], [589.0, 11081.0], [587.0, 10703.0], [585.0, 11510.0], [599.0, 7629.0], [605.0, 10546.0], [603.0, 10924.0], [601.0, 11149.0], [597.0, 10546.0], [595.0, 10888.0], [593.0, 10812.0], [639.0, 5858.0], [619.0, 5704.5], [617.0, 7876.333333333333], [621.0, 5857.0], [623.0, 10474.0], [615.0, 10527.0], [613.0, 10892.0], [611.0, 10597.0], [609.0, 10634.0], [631.0, 5701.0], [637.0, 10423.0], [633.0, 10878.0], [629.0, 10980.0], [627.0, 10753.0], [625.0, 10967.0], [647.0, 6110.0], [643.0, 4066.3333333333335], [641.0, 5701.5], [645.0, 1038.0], [649.0, 4177.333333333334], [653.0, 10976.0], [651.0, 11024.0], [655.0, 11152.0], [671.0, 5652.0], [659.0, 11078.0], [657.0, 10748.0], [663.0, 11334.0], [661.0, 10450.0], [669.0, 10601.0], [667.0, 10614.0], [665.0, 11811.0], [701.0, 10403.0], [677.0, 6020.0], [687.0, 5730.25], [675.0, 12666.0], [673.0, 11486.0], [685.0, 10286.0], [683.0, 10292.0], [681.0, 11196.0], [703.0, 7689.0], [699.0, 10166.0], [697.0, 10681.0], [679.0, 10294.0], [695.0, 11042.0], [693.0, 10277.0], [691.0, 10324.0], [689.0, 10650.0], [733.0, 10913.5], [713.0, 4261.333333333334], [715.0, 10129.0], [719.0, 10107.0], [707.0, 10243.0], [705.0, 10344.0], [711.0, 10203.0], [709.0, 10214.0], [717.0, 10901.0], [735.0, 10365.0], [731.0, 10015.0], [729.0, 10569.0], [727.0, 10232.0], [725.0, 10164.0], [723.0, 10572.0], [721.0, 10057.0], [763.0, 4250.0], [741.0, 5549.5], [739.0, 10514.0], [737.0, 10166.0], [743.0, 10027.0], [767.0, 4142.0], [765.0, 10386.0], [759.0, 10063.0], [757.0, 11380.0], [753.0, 9938.0], [751.0, 9934.0], [749.0, 10502.0], [747.0, 10011.0], [745.0, 9994.0], [771.0, 5942.5], [769.0, 5694.0], [783.0, 10439.0], [781.0, 9954.0], [779.0, 10513.0], [777.0, 10254.0], [773.0, 4586.333333333334], [775.0, 9899.0], [793.0, 10474.0], [795.0, 10429.0], [799.0, 6244.5], [785.0, 10271.0], [787.0, 9842.0], [789.0, 10322.0], [797.0, 9805.0], [803.0, 7021.0], [807.0, 4237.0], [801.0, 10781.0], [805.0, 10153.0], [815.0, 5874.0], [813.0, 9874.0], [811.0, 9847.0], [809.0, 9808.5], [817.0, 5786.5], [819.0, 9695.0], [823.0, 10356.0], [825.0, 10032.0], [829.0, 9938.0], [827.0, 10073.0], [831.0, 9774.0], [837.0, 10550.0], [839.0, 5686.5], [835.0, 9619.0], [833.0, 9619.0], [857.0, 9851.5], [859.0, 9724.0], [861.0, 5573.0], [863.0, 1921.0], [841.0, 4306.0], [847.0, 4091.3333333333335], [849.0, 9501.0], [853.0, 10119.0], [855.0, 9635.0], [867.0, 9437.0], [877.0, 5744.0], [865.0, 3614.0], [879.0, 9380.0], [889.0, 5623.0], [871.0, 9448.0], [891.0, 9684.0], [893.0, 10145.0], [885.0, 5441.0], [883.0, 9391.0], [887.0, 9377.0], [873.0, 4908.666666666666], [875.0, 10058.0], [901.0, 4056.6666666666665], [903.0, 5516.0], [921.0, 9251.0], [923.0, 9286.0], [899.0, 10343.0], [897.0, 9339.0], [907.0, 9989.0], [909.0, 9521.0], [911.0, 9603.0], [919.0, 5900.0], [917.0, 9921.0], [927.0, 9449.0], [925.0, 9452.0], [931.0, 9415.0], [929.0, 2744.0], [933.0, 9136.0], [935.0, 5781.0], [937.0, 9178.0], [939.0, 9173.0], [941.0, 9187.0], [943.0, 5474.0], [945.0, 6669.333333333333], [947.0, 12229.0], [949.0, 10639.0], [951.0, 9618.0], [959.0, 9333.0], [957.0, 9101.0], [955.0, 9224.0], [953.0, 10076.0], [961.0, 9202.5], [987.0, 5812.5], [975.0, 9275.0], [973.0, 9117.0], [971.0, 11047.0], [969.0, 9269.0], [965.0, 4277.666666666666], [967.0, 5391.0], [985.0, 9289.0], [989.0, 4141.0], [977.0, 10449.0], [981.0, 8965.0], [983.0, 11839.0], [1007.0, 8824.0], [1019.0, 1656.0], [999.0, 3211.4], [1001.0, 8806.0], [1003.0, 8929.0], [1005.0, 8932.0], [993.0, 8876.0], [995.0, 10020.5], [997.0, 9609.0], [1009.0, 5234.0], [1023.0, 9078.0], [1011.0, 5452.0], [1015.0, 10346.0], [1017.0, 10075.0], [1021.0, 1885.5], [1074.0, 8550.0], [1034.0, 3728.25], [1086.0, 5464.5], [1030.0, 8843.0], [1026.0, 9349.0], [1058.0, 5178.5], [1078.0, 8590.0], [1038.0, 9645.0], [1082.0, 8785.0], [1070.0, 8544.0], [1062.0, 8685.0], [1042.0, 8968.0], [1046.0, 9666.0], [1050.0, 8735.0], [1054.0, 5638.0], [1090.0, 8899.0], [1098.0, 10341.0], [1118.0, 4086.3333333333335], [1114.0, 8371.0], [1110.0, 8657.0], [1106.0, 8831.0], [1102.0, 8355.0], [1138.0, 5648.0], [1142.0, 5561.5], [1146.0, 8302.0], [1150.0, 8288.0], [1122.0, 8470.0], [1126.0, 8575.0], [1134.0, 5091.5], [1130.0, 8385.0], [1162.0, 8157.0], [1166.0, 5234.5], [1158.0, 8493.0], [1154.0, 8364.0], [1182.0, 8591.0], [1178.0, 9408.0], [1206.0, 5029.5], [1202.0, 8182.0], [1210.0, 7892.0], [1214.0, 8838.0], [1186.0, 7976.0], [1170.0, 5454.0], [1174.0, 5346.5], [1190.0, 4986.5], [1198.0, 8972.0], [1194.0, 7963.0], [1270.0, 7901.0], [1266.0, 5125.5], [1250.0, 9782.0], [1254.0, 8083.5], [1258.0, 8119.5], [1262.0, 8046.0], [1278.0, 5839.5], [1274.0, 8047.0], [1218.0, 5343.0], [1222.0, 7837.0], [1226.0, 7846.0], [1230.0, 8330.0], [1234.0, 7859.0], [1238.0, 8566.0], [1242.0, 4997.0], [1246.0, 9898.0], [1290.0, 5117.5], [1282.0, 5770.5], [1310.0, 7556.0], [1286.0, 7642.0], [1314.0, 8498.0], [1322.0, 7501.0], [1326.0, 7761.0], [1342.0, 7444.0], [1338.0, 7538.0], [1334.0, 3584.5], [1330.0, 7590.0], [1294.0, 7906.0], [1302.0, 7563.0], [1306.0, 4983.0], [1346.0, 5389.5], [1374.0, 5000.0], [1398.0, 3662.25], [1394.0, 8434.0], [1358.0, 7929.0], [1354.0, 7748.0], [1350.0, 8316.0], [1402.0, 7901.0], [1406.0, 7499.0], [1370.0, 3873.75], [1366.0, 7460.0], [1362.0, 8140.0], [1382.0, 7786.0], [1378.0, 7286.0], [1386.0, 5138.5], [1390.0, 7849.0], [1466.0, 7291.0], [1422.0, 3396.8888888888887], [1414.0, 7717.0], [1410.0, 4863.0], [1470.0, 3882.75], [1442.0, 7764.0], [1446.0, 7858.0], [1450.0, 7032.0], [1462.0, 4974.5], [1458.0, 7111.0], [1418.0, 7134.0], [1430.0, 7859.0], [1426.0, 8253.0], [1438.0, 7557.0], [1482.0, 7333.5], [1502.0, 5078.5], [1494.0, 5072.0], [1534.0, 5104.5], [1478.0, 7155.0], [1474.0, 6991.0], [1522.0, 6692.0], [1530.0, 7472.0], [1506.0, 7245.0], [1514.0, 7080.0], [1518.0, 7313.0], [1510.0, 3117.0], [1490.0, 4781.0], [1498.0, 6813.0], [1566.0, 7738.0], [1562.0, 4364.666666666667], [1554.0, 6572.0], [1558.0, 7034.0], [1546.0, 6604.0], [1542.0, 6974.0], [1538.0, 6965.5], [1574.0, 3913.8], [1578.0, 7081.0], [1582.0, 6898.0], [1570.0, 6633.0], [1598.0, 6405.0], [1594.0, 6990.0], [1590.0, 6395.0], [1586.0, 6722.0], [1550.0, 6936.0], [1606.0, 6546.0], [1614.0, 6475.0], [1602.0, 4391.5], [1630.0, 4879.0], [1626.0, 6382.0], [1618.0, 6421.5], [1662.0, 6209.0], [1634.0, 6192.0], [1658.0, 6633.0], [1650.0, 6268.0], [1654.0, 6154.0], [1638.0, 6699.0], [1642.0, 6399.0], [1646.0, 6128.0], [1674.0, 6062.0], [1718.0, 4954.0], [1666.0, 4066.0], [1694.0, 6105.0], [1670.0, 6357.5], [1678.0, 6251.0], [1714.0, 6134.0], [1726.0, 6522.0], [1698.0, 6369.5], [1702.0, 5989.0], [1710.0, 6213.0], [1706.0, 6289.0], [1722.0, 6038.0], [1682.0, 2966.0], [1690.0, 4610.0], [1686.0, 6048.0], [1734.0, 5076.5], [1730.0, 5480.5], [1786.0, 5840.0], [1738.0, 6489.0], [1778.0, 5692.0], [1782.0, 5610.0], [1750.0, 4554.0], [1746.0, 5775.0], [1754.0, 5846.0], [1758.0, 3971.3333333333335], [1762.0, 7032.5], [1766.0, 7139.0], [1774.0, 5639.0], [1798.0, 4592.0], [1794.0, 4411.5], [1822.0, 6376.0], [1818.0, 5478.0], [1802.0, 6651.0], [1806.0, 4744.0], [1854.0, 4807.5], [1846.0, 4534.0], [1842.0, 6260.0], [1850.0, 5740.0], [1826.0, 4612.5], [1838.0, 5814.5], [1834.0, 6137.0], [1830.0, 5767.0], [1814.0, 5185.333333333333], [1810.0, 5589.0], [1870.0, 4476.333333333333], [1866.0, 4613.333333333333], [1858.0, 4843.0], [1862.0, 7348.0], [1886.0, 5374.5], [1878.0, 4454.0], [1906.0, 4509.0], [1910.0, 5241.0], [1914.0, 5528.0], [1918.0, 5173.0], [1890.0, 4435.0], [1894.0, 5308.0], [1898.0, 5448.0], [1902.0, 4114.75], [1874.0, 4746.0], [1930.0, 4645.5], [1922.0, 4577.5], [1942.0, 5454.0], [1946.0, 5084.0], [1950.0, 5084.0], [1926.0, 5875.0], [1934.0, 5150.0], [1962.0, 4535.666666666667], [1966.0, 5081.0], [1954.0, 4359.75], [1970.0, 4535.5], [1974.0, 5477.0], [1978.0, 6222.0], [1982.0, 5100.0], [1938.0, 4276.5], [2046.0, 4523.0], [1986.0, 4431.666666666667], [2014.0, 4868.0], [1990.0, 4205.0], [2022.0, 6408.0], [2018.0, 5483.0], [2026.0, 5415.0], [2030.0, 4984.5], [1998.0, 4926.5], [1994.0, 5453.0], [2034.0, 4621.0], [2042.0, 4476.0], [2010.0, 4260.888888888889], [2006.0, 5002.0], [2002.0, 5557.0], [2076.0, 4121.333333333333], [2052.0, 4849.0], [2108.0, 4384.0], [2060.0, 4386.5], [2116.0, 5019.0], [2156.0, 5172.0], [2164.0, 4874.0], [2172.0, 4231.0], [2148.0, 4222.0], [2124.0, 4245.0], [2132.0, 4149.0], [2140.0, 4276.0], [2084.0, 3770.0], [2092.0, 4427.0], [2100.0, 5216.0], [2180.0, 4161.5], [2196.0, 4997.5], [2188.0, 4993.0], [2069.0, 4597.5], [2109.0, 4383.0], [2061.0, 5667.0], [2053.0, 4590.0], [2117.0, 4569.0], [2165.0, 4140.0], [2157.0, 4146.0], [2173.0, 4359.0], [2149.0, 4224.0], [2077.0, 4525.0], [2125.0, 4242.333333333333], [2133.0, 4600.0], [2141.0, 4212.0], [2085.0, 4971.0], [2093.0, 5161.0], [2101.0, 5824.0], [2197.0, 4329.0], [2189.0, 4916.0], [2181.0, 4052.0], [1035.0, 5301.0], [1027.0, 9129.0], [1031.0, 9479.0], [1051.0, 9029.0], [1047.0, 9530.0], [1043.0, 10771.0], [1039.0, 9483.0], [1075.0, 8722.0], [1083.0, 9495.0], [1071.0, 10391.0], [1067.0, 8553.5], [1087.0, 9067.0], [1059.0, 8579.0], [1063.0, 8876.0], [1095.0, 9325.0], [1091.0, 4614.0], [1099.0, 8399.0], [1103.0, 10223.0], [1111.0, 8702.0], [1107.0, 8611.0], [1115.0, 8411.0], [1139.0, 5355.0], [1119.0, 5739.0], [1123.0, 8559.0], [1127.0, 8588.0], [1151.0, 8257.0], [1147.0, 8288.0], [1143.0, 8706.0], [1131.0, 4294.666666666666], [1135.0, 4314.0], [1155.0, 8319.0], [1167.0, 5321.5], [1163.0, 5368.5], [1159.0, 8293.0], [1203.0, 5173.5], [1207.0, 5526.0], [1171.0, 5487.5], [1175.0, 8546.0], [1179.0, 8892.0], [1183.0, 8092.0], [1191.0, 7967.0], [1195.0, 8918.0], [1199.0, 8641.0], [1187.0, 5291.0], [1211.0, 7888.0], [1251.0, 4449.666666666667], [1219.0, 3592.25], [1247.0, 9708.0], [1263.0, 5032.0], [1259.0, 8274.0], [1255.0, 7874.0], [1279.0, 7822.0], [1271.0, 7930.0], [1267.0, 7771.0], [1231.0, 7849.0], [1223.0, 8589.0], [1275.0, 8353.0], [1235.0, 8837.0], [1243.0, 7902.0], [1287.0, 5127.0], [1311.0, 5418.5], [1307.0, 7809.0], [1283.0, 4963.0], [1339.0, 5188.0], [1343.0, 8033.0], [1335.0, 4971.0], [1331.0, 2311.0], [1291.0, 7807.0], [1315.0, 5491.5], [1319.0, 8206.5], [1323.0, 5472.5], [1327.0, 7799.0], [1303.0, 2422.0], [1299.0, 8297.0], [1355.0, 7467.0], [1399.0, 4454.333333333333], [1375.0, 5379.0], [1347.0, 7373.0], [1351.0, 5157.5], [1359.0, 8020.0], [1395.0, 8424.0], [1407.0, 5503.5], [1403.0, 7805.0], [1367.0, 7570.0], [1363.0, 7364.0], [1371.0, 7775.0], [1387.0, 4860.0], [1383.0, 9062.0], [1379.0, 7382.0], [1391.0, 7264.0], [1471.0, 5258.0], [1459.0, 7736.0], [1423.0, 2714.5], [1463.0, 4084.0], [1443.0, 8354.0], [1447.0, 7045.0], [1451.0, 7475.0], [1467.0, 3410.0], [1455.0, 5950.0], [1419.0, 7137.0], [1415.0, 7747.0], [1411.0, 7396.0], [1435.0, 6237.333333333333], [1431.0, 8661.0], [1427.0, 7288.0], [1439.0, 7096.0], [1527.0, 8184.0], [1499.0, 4720.5], [1487.0, 5592.666666666667], [1483.0, 6911.0], [1479.0, 7220.0], [1475.0, 6964.0], [1535.0, 5063.0], [1507.0, 6987.0], [1531.0, 7203.0], [1523.0, 7214.0], [1511.0, 5771.0], [1515.0, 5013.5], [1519.0, 6849.0], [1491.0, 4809.0], [1495.0, 5200.0], [1503.0, 2856.0], [1543.0, 6781.0], [1547.0, 4843.0], [1539.0, 7077.0], [1571.0, 2954.0], [1591.0, 6496.0], [1587.0, 7033.0], [1595.0, 6691.0], [1599.0, 6709.0], [1563.0, 7028.0], [1559.0, 6871.0], [1555.0, 6575.0], [1567.0, 6521.0], [1575.0, 4616.0], [1579.0, 6629.0], [1607.0, 6802.0], [1603.0, 3727.6], [1611.0, 6622.0], [1615.0, 6394.0], [1651.0, 6157.0], [1619.0, 6252.0], [1623.0, 6786.0], [1627.0, 4577.0], [1631.0, 6361.0], [1663.0, 5137.5], [1635.0, 7505.0], [1659.0, 6332.0], [1655.0, 6664.0], [1639.0, 3340.0], [1643.0, 7297.0], [1647.0, 7419.0], [1667.0, 4698.5], [1719.0, 3254.0], [1683.0, 6215.5], [1687.0, 6051.0], [1691.0, 6068.0], [1695.0, 5991.0], [1727.0, 6121.0], [1699.0, 6299.0], [1703.0, 6002.0], [1707.0, 6354.0], [1711.0, 5931.0], [1723.0, 6738.0], [1715.0, 5967.0], [1679.0, 8326.0], [1675.0, 6107.0], [1671.0, 6397.0], [1735.0, 4450.5], [1731.0, 5790.0], [1743.0, 7345.0], [1739.0, 6599.0], [1779.0, 6813.0], [1787.0, 5790.0], [1751.0, 4799.5], [1755.0, 6020.0], [1759.0, 3979.1428571428573], [1775.0, 3413.0], [1771.0, 6474.0], [1767.0, 5778.0], [1763.0, 5852.0], [1791.0, 6057.0], [1803.0, 5910.0], [1847.0, 4675.0], [1799.0, 5941.0], [1807.0, 5787.0], [1843.0, 5557.0], [1823.0, 5498.0], [1819.0, 5683.0], [1815.0, 4491.0], [1851.0, 4091.2], [1831.0, 4637.5], [1827.0, 5452.0], [1839.0, 6446.0], [1835.0, 5992.0], [1855.0, 5436.0], [1811.0, 4761.0], [1863.0, 4514.5], [1887.0, 4476.5], [1883.0, 4740.666666666667], [1879.0, 4134.333333333333], [1875.0, 5750.0], [1867.0, 5917.0], [1871.0, 5479.0], [1907.0, 5189.0], [1911.0, 5501.0], [1915.0, 5524.0], [1903.0, 4122.25], [1899.0, 5713.0], [1895.0, 5345.0], [1919.0, 6090.0], [1923.0, 4438.5], [1943.0, 7448.0], [1947.0, 5077.0], [1951.0, 7042.0], [1935.0, 4492.5], [1931.0, 5790.0], [1927.0, 5359.0], [1971.0, 4907.0], [1975.0, 4914.0], [1979.0, 5265.0], [1955.0, 4144.666666666667], [1959.0, 4784.0], [1963.0, 4954.0], [1967.0, 4309.0], [1983.0, 5073.0], [1939.0, 4070.75], [2043.0, 4183.666666666667], [2015.0, 4807.5], [1991.0, 4312.5], [1987.0, 4856.0], [2023.0, 4711.0], [2019.0, 5036.0], [2027.0, 5533.0], [2031.0, 4739.0], [2047.0, 5678.0], [1995.0, 5003.0], [2035.0, 4632.0], [2039.0, 4753.5], [2011.0, 4303.25], [2007.0, 5264.0], [2003.0, 5250.0], [2078.0, 4523.0], [2110.0, 4646.0], [2062.0, 4780.0], [2070.0, 4511.0], [2118.0, 4482.0], [2174.0, 4663.0], [2166.0, 4319.0], [2150.0, 4079.0], [2126.0, 4375.0], [2134.0, 5182.0], [2142.0, 4136.0], [2086.0, 5277.0], [2094.0, 4722.5], [2102.0, 4511.0], [2182.0, 4088.0], [2198.0, 4259.5], [2190.0, 4260.0], [2071.0, 4891.0], [2063.0, 4318.5], [2111.0, 4515.0], [2055.0, 4833.5], [2119.0, 4316.0], [2167.0, 4268.0], [2159.0, 4855.0], [2175.0, 4426.0], [2151.0, 4256.5], [2079.0, 5294.0], [2127.0, 4188.0], [2135.0, 4283.0], [2143.0, 4882.666666666667], [2095.0, 4718.0], [2087.0, 4728.0], [2103.0, 4724.0], [2191.0, 4133.0], [2183.0, 4140.0], [1.0, 1780.625]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[845.6324848484866, 5237.151999999991]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2198.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 43214.0, "minX": 1.699972079E12, "maxY": 226475.0, "series": [{"data": [[1.699972099E12, 64070.0], [1.6999721E12, 83710.0], [1.699972079E12, 107144.0], [1.69997208E12, 226475.0], [1.699972097E12, 68744.0], [1.699972098E12, 76296.0], [1.699972083E12, 62644.0], [1.699972084E12, 70201.0], [1.699972085E12, 76257.0], [1.699972081E12, 185740.0], [1.699972082E12, 68316.0], [1.699972089E12, 94459.0], [1.69997209E12, 73450.0], [1.699972086E12, 74357.0], [1.699972087E12, 76741.0], [1.699972088E12, 68256.0], [1.699972094E12, 67319.0], [1.699972095E12, 73422.0], [1.699972096E12, 80899.0], [1.699972091E12, 72545.0], [1.699972092E12, 80941.0], [1.699972093E12, 77648.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.699972099E12, 44205.0], [1.6999721E12, 57755.0], [1.699972079E12, 73939.0], [1.69997208E12, 156295.0], [1.699972097E12, 47429.0], [1.699972098E12, 52661.0], [1.699972083E12, 43214.0], [1.699972084E12, 48451.0], [1.699972085E12, 52622.0], [1.699972081E12, 128175.0], [1.699972082E12, 47146.0], [1.699972089E12, 65169.0], [1.69997209E12, 50685.0], [1.699972086E12, 51302.0], [1.699972087E12, 52961.0], [1.699972088E12, 47086.0], [1.699972094E12, 46439.0], [1.699972095E12, 50657.0], [1.699972096E12, 55814.0], [1.699972091E12, 50070.0], [1.699972092E12, 55856.0], [1.699972093E12, 53578.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.6999721E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 9.642561983471078, "minX": 1.699972079E12, "maxY": 13452.9217877095, "series": [{"data": [[1.699972099E12, 12497.627737226278], [1.6999721E12, 13452.9217877095], [1.699972079E12, 22.716157205240194], [1.69997208E12, 9.642561983471078], [1.699972097E12, 11125.489795918369], [1.699972098E12, 11846.263803680977], [1.699972083E12, 1542.097014925374], [1.699972084E12, 2287.1266666666675], [1.699972085E12, 3015.092024539877], [1.699972081E12, 43.54659949622166], [1.699972082E12, 647.1164383561642], [1.699972089E12, 5784.633663366337], [1.69997209E12, 6413.248407643311], [1.699972086E12, 3756.4905660377362], [1.699972087E12, 4428.012195121951], [1.699972088E12, 5069.171232876714], [1.699972094E12, 9157.430555555564], [1.699972095E12, 9804.681528662422], [1.699972096E12, 10500.838150289017], [1.699972091E12, 7105.8064516129025], [1.699972092E12, 7746.1502890173415], [1.699972093E12, 8426.054216867467]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.6999721E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 9.590909090909099, "minX": 1.699972079E12, "maxY": 13452.810055865932, "series": [{"data": [[1.699972099E12, 12497.540145985395], [1.6999721E12, 13452.810055865932], [1.699972079E12, 21.620087336244545], [1.69997208E12, 9.590909090909099], [1.699972097E12, 11125.435374149667], [1.699972098E12, 11846.196319018405], [1.699972083E12, 1541.9850746268655], [1.699972084E12, 2287.0999999999995], [1.699972085E12, 3015.0368098159497], [1.699972081E12, 43.493702770780864], [1.699972082E12, 646.9109589041097], [1.699972089E12, 5784.608910891088], [1.69997209E12, 6413.1974522292985], [1.699972086E12, 3756.4276729559742], [1.699972087E12, 4427.957317073173], [1.699972088E12, 5069.0821917808225], [1.699972094E12, 9157.38194444444], [1.699972095E12, 9804.624203821655], [1.699972096E12, 10500.786127167636], [1.699972091E12, 7105.754838709674], [1.699972092E12, 7746.11560693642], [1.699972093E12, 8426.006024096385]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.6999721E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.5694444444444445, "minX": 1.699972079E12, "maxY": 6.593886462882096, "series": [{"data": [[1.699972099E12, 1.1678832116788318], [1.6999721E12, 0.7150837988826817], [1.699972079E12, 6.593886462882096], [1.69997208E12, 1.3884297520661155], [1.699972097E12, 0.8163265306122452], [1.699972098E12, 0.7852760736196317], [1.699972083E12, 1.708955223880597], [1.699972084E12, 1.7000000000000006], [1.699972085E12, 1.7055214723926382], [1.699972081E12, 1.3526448362720405], [1.699972082E12, 0.979452054794521], [1.699972089E12, 0.8019801980198018], [1.69997209E12, 0.6114649681528661], [1.699972086E12, 2.050314465408806], [1.699972087E12, 3.0853658536585367], [1.699972088E12, 1.3424657534246571], [1.699972094E12, 0.5694444444444445], [1.699972095E12, 1.2675159235668787], [1.699972096E12, 1.1502890173410412], [1.699972091E12, 0.6451612903225808], [1.699972092E12, 0.9999999999999996], [1.699972093E12, 0.6506024096385541]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.6999721E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.699972079E12, "maxY": 15846.0, "series": [{"data": [[1.699972099E12, 14426.0], [1.6999721E12, 15846.0], [1.699972079E12, 169.0], [1.69997208E12, 39.0], [1.699972097E12, 13167.0], [1.699972098E12, 13503.0], [1.699972083E12, 2309.0], [1.699972084E12, 3256.0], [1.699972085E12, 4125.0], [1.699972081E12, 381.0], [1.699972082E12, 1282.0], [1.699972089E12, 7813.0], [1.69997209E12, 8326.0], [1.699972086E12, 5068.0], [1.699972087E12, 5946.0], [1.699972088E12, 6765.0], [1.699972094E12, 12876.0], [1.699972095E12, 12801.0], [1.699972096E12, 12666.0], [1.699972091E12, 8890.0], [1.699972092E12, 10196.0], [1.699972093E12, 11048.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.699972099E12, 13081.0], [1.6999721E12, 14238.0], [1.699972079E12, 80.0], [1.69997208E12, 14.0], [1.699972097E12, 11631.8], [1.699972098E12, 12519.4], [1.699972083E12, 1976.5], [1.699972084E12, 2711.5], [1.699972085E12, 3573.0], [1.699972081E12, 119.59999999999997], [1.699972082E12, 1025.9], [1.699972089E12, 6437.7], [1.69997209E12, 7001.8], [1.699972086E12, 4419.0], [1.699972087E12, 5082.5], [1.699972088E12, 5604.700000000001], [1.699972094E12, 9829.5], [1.699972095E12, 10356.2], [1.699972096E12, 11197.0], [1.699972091E12, 7751.400000000001], [1.699972092E12, 8375.199999999999], [1.699972093E12, 8938.400000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.699972099E12, 14212.440000000002], [1.6999721E12, 15597.199999999997], [1.699972079E12, 135.79999999999995], [1.69997208E12, 29.0], [1.699972097E12, 12951.480000000005], [1.699972098E12, 13353.239999999996], [1.699972083E12, 2271.9000000000005], [1.699972084E12, 3164.710000000002], [1.699972085E12, 3965.6399999999962], [1.699972081E12, 320.5199999999995], [1.699972082E12, 1263.2], [1.699972089E12, 7610.3], [1.69997209E12, 7987.2799999999925], [1.699972086E12, 4918.600000000001], [1.699972087E12, 5876.45], [1.699972088E12, 6667.24], [1.699972094E12, 12409.350000000011], [1.699972095E12, 12469.239999999993], [1.699972096E12, 12247.159999999994], [1.699972091E12, 8853.6], [1.699972092E12, 9596.599999999993], [1.699972093E12, 10573.640000000009]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.699972099E12, 13530.9], [1.6999721E12, 14573.0], [1.699972079E12, 97.0], [1.69997208E12, 17.75], [1.699972097E12, 11976.0], [1.699972098E12, 12864.0], [1.699972083E12, 2123.0], [1.699972084E12, 2891.6], [1.699972085E12, 3730.3999999999996], [1.699972081E12, 185.2999999999999], [1.699972082E12, 1112.9], [1.699972089E12, 7079.4], [1.69997209E12, 7335.0], [1.699972086E12, 4547.0], [1.699972087E12, 5374.25], [1.699972088E12, 6224.6], [1.699972094E12, 10379.75], [1.699972095E12, 10714.4], [1.699972096E12, 11413.199999999999], [1.699972091E12, 8119.0], [1.699972092E12, 8591.699999999999], [1.699972093E12, 9603.000000000002]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.699972099E12, 11839.0], [1.6999721E12, 12692.0], [1.699972079E12, 5.0], [1.69997208E12, 5.0], [1.699972097E12, 10474.0], [1.699972098E12, 11102.0], [1.699972083E12, 963.0], [1.699972084E12, 1711.0], [1.699972085E12, 2344.0], [1.699972081E12, 6.0], [1.699972082E12, 90.0], [1.699972089E12, 5077.0], [1.69997209E12, 5765.0], [1.699972086E12, 3064.0], [1.699972087E12, 3768.0], [1.699972088E12, 4411.0], [1.699972094E12, 8399.0], [1.699972095E12, 9093.0], [1.699972096E12, 9805.0], [1.699972091E12, 6380.0], [1.699972092E12, 7078.0], [1.699972093E12, 7732.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.699972099E12, 12422.0], [1.6999721E12, 13318.0], [1.699972079E12, 9.0], [1.69997208E12, 8.0], [1.699972097E12, 11055.0], [1.699972098E12, 11765.0], [1.699972083E12, 1474.0], [1.699972084E12, 2259.0], [1.699972085E12, 2970.0], [1.699972081E12, 9.0], [1.699972082E12, 650.5], [1.699972089E12, 5684.0], [1.69997209E12, 6332.0], [1.699972086E12, 3687.0], [1.699972087E12, 4313.5], [1.699972088E12, 4962.5], [1.699972094E12, 9020.0], [1.699972095E12, 9735.0], [1.699972096E12, 10389.0], [1.699972091E12, 6997.0], [1.699972092E12, 7664.0], [1.699972093E12, 8335.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.6999721E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 134.0, "maxY": 13318.0, "series": [{"data": [[134.0, 1474.0], [137.0, 12422.0], [146.0, 2846.5], [150.0, 2259.0], [144.0, 9020.0], [147.0, 11055.0], [159.0, 3687.0], [157.0, 8709.5], [155.0, 6997.0], [163.0, 7613.5], [164.0, 4313.5], [166.0, 8335.0], [173.0, 9806.0], [179.0, 13318.0], [202.0, 5684.0], [229.0, 9.0], [397.0, 9.0], [484.0, 8.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 484.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 134.0, "maxY": 13318.0, "series": [{"data": [[134.0, 1473.5], [137.0, 12422.0], [146.0, 2846.0], [150.0, 2259.0], [144.0, 9020.0], [147.0, 11055.0], [159.0, 3687.0], [157.0, 8709.5], [155.0, 6997.0], [163.0, 7613.5], [164.0, 4313.5], [166.0, 8335.0], [173.0, 9805.5], [179.0, 13318.0], [202.0, 5684.0], [229.0, 9.0], [397.0, 9.0], [484.0, 8.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 484.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 215.0, "minX": 1.699972079E12, "maxY": 663.0, "series": [{"data": [[1.699972079E12, 233.0], [1.69997208E12, 485.0], [1.699972086E12, 518.0], [1.699972087E12, 215.0], [1.699972083E12, 501.0], [1.699972084E12, 499.0], [1.699972085E12, 483.0], [1.699972081E12, 663.0], [1.699972082E12, 528.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.699972087E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 134.0, "minX": 1.699972079E12, "maxY": 484.0, "series": [{"data": [[1.699972099E12, 137.0], [1.6999721E12, 179.0], [1.699972079E12, 229.0], [1.69997208E12, 484.0], [1.699972097E12, 147.0], [1.699972098E12, 163.0], [1.699972083E12, 134.0], [1.699972084E12, 150.0], [1.699972085E12, 163.0], [1.699972081E12, 397.0], [1.699972082E12, 146.0], [1.699972089E12, 202.0], [1.69997209E12, 157.0], [1.699972086E12, 159.0], [1.699972087E12, 164.0], [1.699972088E12, 146.0], [1.699972094E12, 144.0], [1.699972095E12, 157.0], [1.699972096E12, 173.0], [1.699972091E12, 155.0], [1.699972092E12, 173.0], [1.699972093E12, 166.0]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.6999721E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 134.0, "minX": 1.699972079E12, "maxY": 484.0, "series": [{"data": [[1.699972099E12, 137.0], [1.6999721E12, 179.0], [1.699972079E12, 229.0], [1.69997208E12, 484.0], [1.699972097E12, 147.0], [1.699972098E12, 163.0], [1.699972083E12, 134.0], [1.699972084E12, 150.0], [1.699972085E12, 163.0], [1.699972081E12, 397.0], [1.699972082E12, 146.0], [1.699972089E12, 202.0], [1.69997209E12, 157.0], [1.699972086E12, 159.0], [1.699972087E12, 164.0], [1.699972088E12, 146.0], [1.699972094E12, 144.0], [1.699972095E12, 157.0], [1.699972096E12, 173.0], [1.699972091E12, 155.0], [1.699972092E12, 173.0], [1.699972093E12, 166.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.6999721E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 134.0, "minX": 1.699972079E12, "maxY": 484.0, "series": [{"data": [[1.699972099E12, 137.0], [1.6999721E12, 179.0], [1.699972079E12, 229.0], [1.69997208E12, 484.0], [1.699972097E12, 147.0], [1.699972098E12, 163.0], [1.699972083E12, 134.0], [1.699972084E12, 150.0], [1.699972085E12, 163.0], [1.699972081E12, 397.0], [1.699972082E12, 146.0], [1.699972089E12, 202.0], [1.69997209E12, 157.0], [1.699972086E12, 159.0], [1.699972087E12, 164.0], [1.699972088E12, 146.0], [1.699972094E12, 144.0], [1.699972095E12, 157.0], [1.699972096E12, 173.0], [1.699972091E12, 155.0], [1.699972092E12, 173.0], [1.699972093E12, 166.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.6999721E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

